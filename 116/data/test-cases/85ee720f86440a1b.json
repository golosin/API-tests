{"uid":"85ee720f86440a1b","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1668663320291,"stop":1668663321203,"duration":912},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az245-891"},{"name":"thread","value":"2452-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":71,"skipped":0,"passed":0,"unknown":0,"total":71},"items":[{"uid":"c963c1ff75a569d1","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/c963c1ff75a569d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576871553,"stop":1668576872411,"duration":858}},{"uid":"2d93617c9be67c63","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/2d93617c9be67c63","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490456669,"stop":1668490457576,"duration":907}},{"uid":"5398baa8e7fc7043","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/5398baa8e7fc7043","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404584302,"stop":1668404585034,"duration":732}},{"uid":"42c1030227f00081","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/42c1030227f00081","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317848300,"stop":1668317849442,"duration":1142}},{"uid":"e2028c6c26ee2113","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/e2028c6c26ee2113","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231396693,"stop":1668231397432,"duration":739}},{"uid":"de5fdbd44dac0795","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/de5fdbd44dac0795","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145235647,"stop":1668145236331,"duration":684}},{"uid":"5a78e527171faba6","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/5a78e527171faba6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058937563,"stop":1668058938517,"duration":954}},{"uid":"d569c7a3134100e","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/d569c7a3134100e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972717970,"stop":1667972718768,"duration":798}},{"uid":"706f1af1976ff8ea","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/706f1af1976ff8ea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886141830,"stop":1667886142926,"duration":1096}},{"uid":"ab9ed3988a7b9560","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/ab9ed3988a7b9560","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799846975,"stop":1667799847828,"duration":853}},{"uid":"a42ea03d4b0c834","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/a42ea03d4b0c834","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712873707,"stop":1667712874417,"duration":710}},{"uid":"b6aa2523b8c8e943","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/b6aa2523b8c8e943","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626476701,"stop":1667626477467,"duration":766}},{"uid":"6cb4f56c42e89260","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/6cb4f56c42e89260","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540452150,"stop":1667540453015,"duration":865}},{"uid":"95dda5dab9b4792d","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/95dda5dab9b4792d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454011269,"stop":1667454012160,"duration":891}},{"uid":"72dbb1f92ba86561","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/72dbb1f92ba86561","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368616923,"stop":1667368617644,"duration":721}},{"uid":"dfb43c0597bc89a2","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/dfb43c0597bc89a2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282434877,"stop":1667282435638,"duration":761}},{"uid":"19316052640f8539","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/19316052640f8539","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195433207,"stop":1667195434083,"duration":876}},{"uid":"981155027965e830","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/981155027965e830","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108555076,"stop":1667108555953,"duration":877}},{"uid":"661249ab43551983","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/661249ab43551983","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022062937,"stop":1667022063853,"duration":916}},{"uid":"a9ee3d8f6145e87c","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/a9ee3d8f6145e87c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935989894,"stop":1666935990784,"duration":890}}]},"tags":[]},"source":"85ee720f86440a1b.json","parameterValues":["'true'","'WILDBERRIES'"]}