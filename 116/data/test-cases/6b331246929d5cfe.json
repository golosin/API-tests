{"uid":"6b331246929d5cfe","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1668663330706,"stop":1668663331584,"duration":878},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az245-891"},{"name":"thread","value":"2452-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":71,"skipped":0,"passed":0,"unknown":0,"total":71},"items":[{"uid":"3f0d4634a5f181b1","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/3f0d4634a5f181b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576881210,"stop":1668576882084,"duration":874}},{"uid":"1545aa863d4e4a4d","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/1545aa863d4e4a4d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490465629,"stop":1668490466505,"duration":876}},{"uid":"dd9a0601579f79e2","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/dd9a0601579f79e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404591542,"stop":1668404592241,"duration":699}},{"uid":"c5da4ebc50b0b410","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/c5da4ebc50b0b410","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317859660,"stop":1668317860774,"duration":1114}},{"uid":"53b4cd2637913374","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/53b4cd2637913374","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231403722,"stop":1668231404402,"duration":680}},{"uid":"cf7b26edddf5a8db","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/cf7b26edddf5a8db","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145243469,"stop":1668145244187,"duration":718}},{"uid":"ad2888ecbae6af64","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/ad2888ecbae6af64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058946550,"stop":1668058947434,"duration":884}},{"uid":"5fa81b914026ca25","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/5fa81b914026ca25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972725385,"stop":1667972726099,"duration":714}},{"uid":"acda92b1dbfabca6","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/acda92b1dbfabca6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886152826,"stop":1667886153914,"duration":1088}},{"uid":"d25cfa015d88bc42","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/d25cfa015d88bc42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799855649,"stop":1667799856523,"duration":874}},{"uid":"9e54a8255f80f2ff","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/9e54a8255f80f2ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712880865,"stop":1667712881567,"duration":702}},{"uid":"4053f880e00412c7","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/4053f880e00412c7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626484045,"stop":1667626484750,"duration":705}},{"uid":"b3c755eae9de0420","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/b3c755eae9de0420","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540460968,"stop":1667540461844,"duration":876}},{"uid":"494dabdd22b883b2","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/494dabdd22b883b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454020202,"stop":1667454021076,"duration":874}},{"uid":"f2e8bb4e3abf1755","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/f2e8bb4e3abf1755","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368624341,"stop":1667368625088,"duration":747}},{"uid":"e041401f14b747b5","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/e041401f14b747b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282442053,"stop":1667282442757,"duration":704}},{"uid":"228cd48bfa2a0d39","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/228cd48bfa2a0d39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195442000,"stop":1667195442849,"duration":849}},{"uid":"56f2512a6f756b55","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/56f2512a6f756b55","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108563926,"stop":1667108564817,"duration":891}},{"uid":"3e757d500f03f72","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/3e757d500f03f72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022072124,"stop":1667022073011,"duration":887}},{"uid":"d5e6a26422ba7d0f","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/d5e6a26422ba7d0f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935999004,"stop":1666935999908,"duration":904}}]},"tags":[]},"source":"6b331246929d5cfe.json","parameterValues":["'FEED'"]}