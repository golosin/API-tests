{"uid":"7b820e911a45c48e","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"18e1ca4faac17d6f27f42bdbe5a2600b","time":{"start":1670563884109,"stop":1670563885115,"duration":1006},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az565-173"},{"name":"thread","value":"2470-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"},{"name":"sale_price_max","value":"None"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":93,"skipped":0,"passed":0,"unknown":0,"total":93},"items":[{"uid":"2e18ecca7b3f6ef2","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/2e18ecca7b3f6ef2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477480782,"stop":1670477481614,"duration":832}},{"uid":"b18ec7e4a675e460","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/b18ec7e4a675e460","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391082588,"stop":1670391083464,"duration":876}},{"uid":"46b89efa747c1a4e","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/46b89efa747c1a4e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304719078,"stop":1670304719952,"duration":874}},{"uid":"35f688937a18fe6c","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/35f688937a18fe6c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218304657,"stop":1670218305507,"duration":850}},{"uid":"3c75ec69a2704843","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/3c75ec69a2704843","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131886015,"stop":1670131887063,"duration":1048}},{"uid":"a4bd62e8d3b525dd","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/a4bd62e8d3b525dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045487055,"stop":1670045487895,"duration":840}},{"uid":"57426c4549af5a52","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/57426c4549af5a52","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959106730,"stop":1669959107771,"duration":1041}},{"uid":"e0e72bd955d4e31b","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/e0e72bd955d4e31b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872829148,"stop":1669872830247,"duration":1099}},{"uid":"dd6a1b7c10a03a51","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/dd6a1b7c10a03a51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786384273,"stop":1669786385384,"duration":1111}},{"uid":"a0d2b04815c3b6ae","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/a0d2b04815c3b6ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699954024,"stop":1669699955118,"duration":1094}},{"uid":"e66524043d6cb6d1","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/e66524043d6cb6d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613550210,"stop":1669613550910,"duration":700}},{"uid":"80368896d338de1","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/80368896d338de1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527098450,"stop":1669527099171,"duration":721}},{"uid":"c1fb6e8c97773c3c","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/c1fb6e8c97773c3c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440691272,"stop":1669440692007,"duration":735}},{"uid":"7272201fcf578e89","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/7272201fcf578e89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354335817,"stop":1669354336509,"duration":692}},{"uid":"eb727e7dc28e7051","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/eb727e7dc28e7051","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267937279,"stop":1669267937977,"duration":698}},{"uid":"32d2f442e5803f6","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/32d2f442e5803f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181563231,"stop":1669181564308,"duration":1077}},{"uid":"a070aefac52f041","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/a070aefac52f041","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095294869,"stop":1669095295575,"duration":706}},{"uid":"2c5ee32ed27461a3","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/2c5ee32ed27461a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008900984,"stop":1669008901939,"duration":955}},{"uid":"bb2307b6e02f480e","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/bb2307b6e02f480e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922456064,"stop":1668922457164,"duration":1100}},{"uid":"bbc48d0d19aa3e2a","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/bbc48d0d19aa3e2a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836028543,"stop":1668836029683,"duration":1140}}]},"tags":[]},"source":"7b820e911a45c48e.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'","None","100"]}