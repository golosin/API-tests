{"uid":"e06deb7d909d85c4","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"1b207d3242a7f6cbcd15eeffe3f3477d","time":{"start":1668490463848,"stop":1668490464724,"duration":876},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az99-481"},{"name":"thread","value":"2420-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":69,"skipped":0,"passed":0,"unknown":0,"total":69},"items":[{"uid":"90e038377e029e7c","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/90e038377e029e7c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404590101,"stop":1668404590786,"duration":685}},{"uid":"731aae44f8acd2bb","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/731aae44f8acd2bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317857427,"stop":1668317858522,"duration":1095}},{"uid":"e13ad7c2b046bbca","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/e13ad7c2b046bbca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231402321,"stop":1668231403020,"duration":699}},{"uid":"790d211063a83e87","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/790d211063a83e87","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145242013,"stop":1668145242749,"duration":736}},{"uid":"9afbb5ae1f04258","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/9afbb5ae1f04258","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058944745,"stop":1668058945634,"duration":889}},{"uid":"1d6179038e7a2655","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/1d6179038e7a2655","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972723933,"stop":1667972724642,"duration":709}},{"uid":"5dcbbefc7ea40295","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/5dcbbefc7ea40295","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886150627,"stop":1667886151724,"duration":1097}},{"uid":"f9b2d35da31da792","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/f9b2d35da31da792","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799853915,"stop":1667799854779,"duration":864}},{"uid":"ff360d18d71754e9","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/ff360d18d71754e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712879422,"stop":1667712880138,"duration":716}},{"uid":"d620c161c2a780e3","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/d620c161c2a780e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626482564,"stop":1667626483263,"duration":699}},{"uid":"6ccaccee3238b2b","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/6ccaccee3238b2b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540459216,"stop":1667540460087,"duration":871}},{"uid":"8931a1b96c02598c","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/8931a1b96c02598c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454018408,"stop":1667454019302,"duration":894}},{"uid":"c19fed788084b8f5","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/c19fed788084b8f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368622825,"stop":1667368623588,"duration":763}},{"uid":"6a34b7b721269392","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/6a34b7b721269392","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282440619,"stop":1667282441330,"duration":711}},{"uid":"a2f151d8936a7303","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/a2f151d8936a7303","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195440238,"stop":1667195441107,"duration":869}},{"uid":"75d49e0d8b4b7e4b","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/75d49e0d8b4b7e4b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108562166,"stop":1667108563049,"duration":883}},{"uid":"7c4c366384b3aced","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/7c4c366384b3aced","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022070270,"stop":1667022071203,"duration":933}},{"uid":"e0a1a615c3d0f466","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/e0a1a615c3d0f466","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935997133,"stop":1666935998069,"duration":936}},{"uid":"28c54416a4ac30d1","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/28c54416a4ac30d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849492917,"stop":1666849493606,"duration":689}},{"uid":"9996f0472e6e801","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/9996f0472e6e801","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763271477,"stop":1666763272168,"duration":691}}]},"tags":[]},"source":"e06deb7d909d85c4.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}