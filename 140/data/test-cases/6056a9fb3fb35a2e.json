{"uid":"6056a9fb3fb35a2e","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9686b075d72cff3ac6a1b4945e7576c7","time":{"start":1670736678298,"stop":1670736679133,"duration":835},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az573-334"},{"name":"thread","value":"2515-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":95,"skipped":0,"passed":0,"unknown":0,"total":95},"items":[{"uid":"16e83d76e4797802","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/16e83d76e4797802","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650294244,"stop":1670650295478,"duration":1234}},{"uid":"dc74dcfac8cc36f7","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/dc74dcfac8cc36f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563878836,"stop":1670563879953,"duration":1117}},{"uid":"70d1b53259a8fb6b","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/70d1b53259a8fb6b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477476504,"stop":1670477477342,"duration":838}},{"uid":"e2a3c1066d5b7153","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/e2a3c1066d5b7153","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391078163,"stop":1670391079010,"duration":847}},{"uid":"71da489283f9e84f","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/71da489283f9e84f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304714595,"stop":1670304715492,"duration":897}},{"uid":"1895cc04cac58561","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/1895cc04cac58561","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218300133,"stop":1670218301042,"duration":909}},{"uid":"9d098e86921affcd","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/9d098e86921affcd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131880838,"stop":1670131881877,"duration":1039}},{"uid":"d4d3deaf05da3344","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/d4d3deaf05da3344","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045482694,"stop":1670045483568,"duration":874}},{"uid":"8f4234eced3b1356","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/8f4234eced3b1356","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959101488,"stop":1669959102567,"duration":1079}},{"uid":"597ff73c0fda964a","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/597ff73c0fda964a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872823564,"stop":1669872824655,"duration":1091}},{"uid":"8b90f0e8082bb4bc","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/8b90f0e8082bb4bc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786378517,"stop":1669786379620,"duration":1103}},{"uid":"98a9392932939248","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/98a9392932939248","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699948446,"stop":1669699949546,"duration":1100}},{"uid":"ec689b20089c8f72","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/ec689b20089c8f72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613546606,"stop":1669613547294,"duration":688}},{"uid":"b120752e1ed291ef","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/b120752e1ed291ef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527094818,"stop":1669527095561,"duration":743}},{"uid":"601b0effb37845a7","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/601b0effb37845a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440687562,"stop":1669440688292,"duration":730}},{"uid":"bea4267400e915dc","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/bea4267400e915dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354332292,"stop":1669354332973,"duration":681}},{"uid":"b8a3e6669121ab22","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/b8a3e6669121ab22","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267933746,"stop":1669267934433,"duration":687}},{"uid":"186c4bffb16f8240","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/186c4bffb16f8240","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181555152,"stop":1669181556224,"duration":1072}},{"uid":"23ea6a6e67ba430","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/23ea6a6e67ba430","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095288598,"stop":1669095289308,"duration":710}},{"uid":"ffdc8f1bbe4e3000","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/ffdc8f1bbe4e3000","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008896087,"stop":1669008897209,"duration":1122}}]},"tags":[]},"source":"6056a9fb3fb35a2e.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","100","100"]}