{"uid":"10e0bb7f52184db7","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1669354352920,"stop":1669354353603,"duration":683},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az193-875"},{"name":"thread","value":"2484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":79,"skipped":0,"passed":0,"unknown":0,"total":79},"items":[{"uid":"c032a074d970b381","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/c032a074d970b381","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267954601,"stop":1669267955297,"duration":696}},{"uid":"5effae7a066ed199","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/5effae7a066ed199","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181598049,"stop":1669181599282,"duration":1233}},{"uid":"d4227261f61fbe31","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/d4227261f61fbe31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095320663,"stop":1669095321344,"duration":681}},{"uid":"7c0bbb2cc7c8d2bf","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/7c0bbb2cc7c8d2bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008924655,"stop":1669008925617,"duration":962}},{"uid":"f8ffa54732711b0a","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/f8ffa54732711b0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922483346,"stop":1668922484460,"duration":1114}},{"uid":"7c85b134c6451c1d","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/7c85b134c6451c1d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836058101,"stop":1668836059243,"duration":1142}},{"uid":"cca8139c7c6edcdc","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/cca8139c7c6edcdc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749699000,"stop":1668749699872,"duration":872}},{"uid":"21c6801f9d3f0c1","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/21c6801f9d3f0c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663329850,"stop":1668663330698,"duration":848}},{"uid":"179e98e5d0ed3542","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/179e98e5d0ed3542","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576880336,"stop":1668576881202,"duration":866}},{"uid":"ed517d1dfeeaf019","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/ed517d1dfeeaf019","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490464731,"stop":1668490465621,"duration":890}},{"uid":"63bb2471069eb83a","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/63bb2471069eb83a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404590795,"stop":1668404591531,"duration":736}},{"uid":"6f124f1f53c387cb","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/6f124f1f53c387cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317858531,"stop":1668317859650,"duration":1119}},{"uid":"37b24a22adecc8d8","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/37b24a22adecc8d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231403028,"stop":1668231403714,"duration":686}},{"uid":"19bcdc199cc1c230","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/19bcdc199cc1c230","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145242757,"stop":1668145243461,"duration":704}},{"uid":"fca0ff658d557b4","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/fca0ff658d557b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058945644,"stop":1668058946540,"duration":896}},{"uid":"e891289c47534b37","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/e891289c47534b37","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972724650,"stop":1667972725377,"duration":727}},{"uid":"5a5d2ad887fff3c4","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/5a5d2ad887fff3c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886151732,"stop":1667886152817,"duration":1085}},{"uid":"dfcc876fee0b1612","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/dfcc876fee0b1612","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799854784,"stop":1667799855644,"duration":860}},{"uid":"a4cdaa50a550fd93","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/a4cdaa50a550fd93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712880148,"stop":1667712880855,"duration":707}},{"uid":"2ced73864e8f2b58","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/2ced73864e8f2b58","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626483270,"stop":1667626484038,"duration":768}}]},"tags":[]},"source":"10e0bb7f52184db7.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}