{"uid":"6627b27710482316","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1665813735763,"stop":1665813736628,"duration":865},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az343-462"},{"name":"thread","value":"2501-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":38,"skipped":0,"passed":0,"unknown":0,"total":38},"items":[{"uid":"48839c0a72dd1a2e","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/48839c0a72dd1a2e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729128917,"stop":1665729129610,"duration":693}},{"uid":"9787ba2e5c6aea2f","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/9787ba2e5c6aea2f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641739141,"stop":1665641739844,"duration":703}},{"uid":"f15600fec2ebeb65","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/f15600fec2ebeb65","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554504643,"stop":1665554505767,"duration":1124}},{"uid":"48aaf83a0b5c5843","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/48aaf83a0b5c5843","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469416573,"stop":1665469417253,"duration":680}},{"uid":"6adf35d2f3823015","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/6adf35d2f3823015","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383164171,"stop":1665383164877,"duration":706}},{"uid":"fa42f0f4a1ad3f4a","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/fa42f0f4a1ad3f4a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294926810,"stop":1665294927690,"duration":880}},{"uid":"5a95b737eb6485ab","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/5a95b737eb6485ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208215931,"stop":1665208216796,"duration":865}},{"uid":"6b789825ec726804","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/6b789825ec726804","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122040737,"stop":1665122041414,"duration":677}},{"uid":"2380b8dd64c12a49","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/2380b8dd64c12a49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035902075,"stop":1665035902800,"duration":725}},{"uid":"51fea71383cf8d03","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/51fea71383cf8d03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949875009,"stop":1664949875696,"duration":687}},{"uid":"9e18f989490e263c","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/9e18f989490e263c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863290328,"stop":1664863291009,"duration":681}},{"uid":"9e53639d29c7efdd","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/9e53639d29c7efdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776760123,"stop":1664776761045,"duration":922}},{"uid":"f266f74994bdc795","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/f266f74994bdc795","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690388068,"stop":1664690389185,"duration":1117}},{"uid":"9ba7801d766b8fc3","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/9ba7801d766b8fc3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519856471,"stop":1664519857573,"duration":1102}},{"uid":"9a43607fe3f1ecef","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/9a43607fe3f1ecef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433537433,"stop":1664433538532,"duration":1099}},{"uid":"9dd59e837a0d2820","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/9dd59e837a0d2820","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346849108,"stop":1664346849965,"duration":857}},{"uid":"b42a7296cc7f1bb1","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/b42a7296cc7f1bb1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260025820,"stop":1664260026712,"duration":892}},{"uid":"d5ae3a365dc619b8","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/d5ae3a365dc619b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173994676,"stop":1664173995385,"duration":709}},{"uid":"8089a4d54a713216","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/8089a4d54a713216","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085269040,"stop":1664085269921,"duration":881}},{"uid":"5daa2545cd1dcb39","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/5daa2545cd1dcb39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999153125,"stop":1663999154240,"duration":1115}}]},"tags":[]},"source":"6627b27710482316.json","parameterValues":["'false'","'WILDBERRIES'"]}