{"uid":"8a70f1d6f4810b35","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"322fe3cb2cf8271908d2a1445d7f8530","time":{"start":1664173991138,"stop":1664173991849,"duration":711},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nstock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:75: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az186-173"},{"name":"thread","value":"2440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":0,"unknown":0,"total":20},"items":[{"uid":"a47189a8896ef992","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/a47189a8896ef992","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085264555,"stop":1664085265434,"duration":879}},{"uid":"c2641e0c9bbfcd1b","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/c2641e0c9bbfcd1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999147560,"stop":1663999148673,"duration":1113}},{"uid":"822891d379625cea","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/822891d379625cea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914342584,"stop":1663914343281,"duration":697}},{"uid":"768185849a45c47e","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/768185849a45c47e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828208146,"stop":1663828209135,"duration":989}},{"uid":"dacf536f96a94cf2","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/dacf536f96a94cf2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742165829,"stop":1663742166965,"duration":1136}},{"uid":"bf849f21840019d7","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/bf849f21840019d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655457678,"stop":1663655458552,"duration":874}},{"uid":"b559ecc4a4236a11","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/b559ecc4a4236a11","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569579853,"stop":1663569580520,"duration":667}},{"uid":"2f68890741f6cab","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/2f68890741f6cab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480476487,"stop":1663480477596,"duration":1109}},{"uid":"32245f71cd196e9d","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/32245f71cd196e9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393952297,"stop":1663393953167,"duration":870}},{"uid":"1c5e1a86b6614d41","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/1c5e1a86b6614d41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309757242,"stop":1663309757931,"duration":689}},{"uid":"c363f887b556b1fd","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/c363f887b556b1fd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222533368,"stop":1663222534068,"duration":700}},{"uid":"9aac12cb3e1fdeac","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/9aac12cb3e1fdeac","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137092088,"stop":1663137092974,"duration":886}},{"uid":"8afdaaa81f633ffd","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/8afdaaa81f633ffd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050979258,"stop":1663050979962,"duration":704}},{"uid":"3a4712cb11c58ce7","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/3a4712cb11c58ce7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964779428,"stop":1662964780182,"duration":754}},{"uid":"3720c57119dd60ff","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/3720c57119dd60ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875602208,"stop":1662875602903,"duration":695}},{"uid":"b7857f3642cc3b94","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/b7857f3642cc3b94","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845417307,"stop":1662845418185,"duration":878}},{"uid":"5c7066db4f3f412f","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/5c7066db4f3f412f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840103623,"stop":1662840104332,"duration":709}},{"uid":"e736307d15eabcf7","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/e736307d15eabcf7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840069364,"stop":1662840070294,"duration":930}},{"uid":"9bd0dd19d1205010","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/9bd0dd19d1205010","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838764076,"stop":1662838764773,"duration":697}}]},"tags":[]},"source":"8a70f1d6f4810b35.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'","2","None"]}