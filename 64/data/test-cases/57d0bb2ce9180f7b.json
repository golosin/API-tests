{"uid":"57d0bb2ce9180f7b","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"69d80d68693354fa2e1c968d446ee2c0","time":{"start":1664173988994,"stop":1664173989710,"duration":716},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nstock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:75: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az186-173"},{"name":"thread","value":"2440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":0,"unknown":0,"total":20},"items":[{"uid":"5a5a700d5b7a39dc","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/5a5a700d5b7a39dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085261910,"stop":1664085262778,"duration":868}},{"uid":"31f714ee3602ea93","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/31f714ee3602ea93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999144215,"stop":1663999145322,"duration":1107}},{"uid":"f6f599d75df567e0","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/f6f599d75df567e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914340501,"stop":1663914341196,"duration":695}},{"uid":"ef426b96ed811da2","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/ef426b96ed811da2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828205454,"stop":1663828206320,"duration":866}},{"uid":"8ab8bb4bd7408ced","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/8ab8bb4bd7408ced","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742162478,"stop":1663742163600,"duration":1122}},{"uid":"71816ac2bb79ce73","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/71816ac2bb79ce73","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655455063,"stop":1663655455942,"duration":879}},{"uid":"306516751cd9ddd8","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/306516751cd9ddd8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569577777,"stop":1663569578461,"duration":684}},{"uid":"9e53a6883418b4a4","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/9e53a6883418b4a4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480473121,"stop":1663480474232,"duration":1111}},{"uid":"24b3512aa39ac0f8","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/24b3512aa39ac0f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393949659,"stop":1663393950534,"duration":875}},{"uid":"e88eaeb7118be12c","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/e88eaeb7118be12c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309755137,"stop":1663309755837,"duration":700}},{"uid":"9aa858421d9ef055","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/9aa858421d9ef055","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222531215,"stop":1663222531931,"duration":716}},{"uid":"77e2db1a96895c3a","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/77e2db1a96895c3a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137089332,"stop":1663137090270,"duration":938}},{"uid":"202cff9760b7f98b","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/202cff9760b7f98b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050976877,"stop":1663050977585,"duration":708}},{"uid":"3dd53885a8d3421b","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/3dd53885a8d3421b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964777079,"stop":1662964778010,"duration":931}},{"uid":"3ee0569de69aaccc","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/3ee0569de69aaccc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875600126,"stop":1662875600810,"duration":684}},{"uid":"d7c73eb9607e46e4","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/d7c73eb9607e46e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845414604,"stop":1662845415476,"duration":872}},{"uid":"a559a54dd139d0c2","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/a559a54dd139d0c2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840101476,"stop":1662840102179,"duration":703}},{"uid":"cc6b1b7142befcdb","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/cc6b1b7142befcdb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840066681,"stop":1662840067578,"duration":897}},{"uid":"92c201502c636ccb","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/92c201502c636ccb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838761914,"stop":1662838762625,"duration":711}}]},"tags":[]},"source":"57d0bb2ce9180f7b.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","2","None"]}