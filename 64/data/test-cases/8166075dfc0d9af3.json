{"uid":"8166075dfc0d9af3","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1664173993979,"stop":1664173994670,"duration":691},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az186-173"},{"name":"thread","value":"2440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":0,"unknown":0,"total":20},"items":[{"uid":"db31869375f60e2d","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/db31869375f60e2d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085268116,"stop":1664085269034,"duration":918}},{"uid":"64aac16bbb0a7fff","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/64aac16bbb0a7fff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999152017,"stop":1663999153117,"duration":1100}},{"uid":"c02fba7287209e5e","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/c02fba7287209e5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914345387,"stop":1663914346071,"duration":684}},{"uid":"a3a8853dee5d7642","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/a3a8853dee5d7642","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828211834,"stop":1663828212718,"duration":884}},{"uid":"546420a38d71fb10","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/546420a38d71fb10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742170330,"stop":1663742171448,"duration":1118}},{"uid":"5bdfe927ce83efd5","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/5bdfe927ce83efd5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655461195,"stop":1663655462075,"duration":880}},{"uid":"a794fc8b62d0582e","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/a794fc8b62d0582e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569582583,"stop":1663569583263,"duration":680}},{"uid":"ad0214b5fdaac40e","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/ad0214b5fdaac40e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480480945,"stop":1663480482050,"duration":1105}},{"uid":"56c8027c865263b4","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/56c8027c865263b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393955788,"stop":1663393956709,"duration":921}},{"uid":"aab55855d781ed01","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/aab55855d781ed01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309760047,"stop":1663309760748,"duration":701}},{"uid":"4e9762efadf6cbdf","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/4e9762efadf6cbdf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222536221,"stop":1663222536946,"duration":725}},{"uid":"8c514d34c6896867","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/8c514d34c6896867","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137095676,"stop":1663137096572,"duration":896}},{"uid":"bbb33f65e7abfebf","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/bbb33f65e7abfebf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050982087,"stop":1663050982803,"duration":716}},{"uid":"221766b08f398f9e","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/221766b08f398f9e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964782344,"stop":1662964783064,"duration":720}},{"uid":"9cd3874da679f09a","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/9cd3874da679f09a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875605023,"stop":1662875605771,"duration":748}},{"uid":"973f3008b7d84f30","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/973f3008b7d84f30","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845420935,"stop":1662845421836,"duration":901}},{"uid":"c36869cabae37df6","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/c36869cabae37df6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840106537,"stop":1662840107295,"duration":758}},{"uid":"adf5046a0ad03c7b","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/adf5046a0ad03c7b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840073033,"stop":1662840073927,"duration":894}},{"uid":"4ad852786d515263","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/4ad852786d515263","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838766944,"stop":1662838767668,"duration":724}}]},"tags":[]},"source":"8166075dfc0d9af3.json","parameterValues":["'true'","'WILDBERRIES'"]}