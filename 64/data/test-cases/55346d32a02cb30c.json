{"uid":"55346d32a02cb30c","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"3958387d60cae3c9ae4c2ff3651b0b48","time":{"start":1664173989717,"stop":1664173990413,"duration":696},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nstock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:75: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az186-173"},{"name":"thread","value":"2440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":0,"unknown":0,"total":20},"items":[{"uid":"94c505ab68d688a","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/94c505ab68d688a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085262784,"stop":1664085263652,"duration":868}},{"uid":"7e4b27661a368489","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/7e4b27661a368489","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999145332,"stop":1663999146442,"duration":1110}},{"uid":"b87873bd85ff8438","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/b87873bd85ff8438","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914341204,"stop":1663914341889,"duration":685}},{"uid":"42f8844a048cee92","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/42f8844a048cee92","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828206326,"stop":1663828207231,"duration":905}},{"uid":"22fe07440113d63b","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/22fe07440113d63b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742163609,"stop":1663742164717,"duration":1108}},{"uid":"9dfb273f9ec34961","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/9dfb273f9ec34961","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655455948,"stop":1663655456789,"duration":841}},{"uid":"6d812ffe41395e41","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/6d812ffe41395e41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569578469,"stop":1663569579150,"duration":681}},{"uid":"b065d6ab0e808565","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/b065d6ab0e808565","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480474239,"stop":1663480475352,"duration":1113}},{"uid":"ada6ab1c62764204","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/ada6ab1c62764204","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393950541,"stop":1663393951413,"duration":872}},{"uid":"c304d2ba89b41323","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/c304d2ba89b41323","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309755844,"stop":1663309756537,"duration":693}},{"uid":"7bc7d3fab6d38d40","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/7bc7d3fab6d38d40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222531938,"stop":1663222532642,"duration":704}},{"uid":"19b8d02330581866","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/19b8d02330581866","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137090278,"stop":1663137091175,"duration":897}},{"uid":"8255166c3000e02c","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/8255166c3000e02c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050977591,"stop":1663050978289,"duration":698}},{"uid":"58588f2f637831ce","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/58588f2f637831ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964778016,"stop":1662964778709,"duration":693}},{"uid":"4ad3bfa0fc92cbca","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/4ad3bfa0fc92cbca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875600817,"stop":1662875601504,"duration":687}},{"uid":"2484bdbcfe25fe71","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/2484bdbcfe25fe71","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845415484,"stop":1662845416356,"duration":872}},{"uid":"1a0c9f334ef6f935","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/1a0c9f334ef6f935","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840102186,"stop":1662840102903,"duration":717}},{"uid":"215a408ccf441b9","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/215a408ccf441b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840067588,"stop":1662840068477,"duration":889}},{"uid":"7ec91c3dcc95bee7","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/7ec91c3dcc95bee7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838762632,"stop":1662838763352,"duration":720}}]},"tags":[]},"source":"55346d32a02cb30c.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","None","2"]}