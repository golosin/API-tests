{"uid":"ff2b6a7f058d12ce","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"69d80d68693354fa2e1c968d446ee2c0","time":{"start":1662617711978,"stop":1662617712892,"duration":914},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nstock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"eaa69378bb31ee5a","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/eaa69378bb31ee5a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617531000,"stop":1662617531684,"duration":684}},{"uid":"aac836f7fd966e0f","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/aac836f7fd966e0f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532733475,"stop":1662532734573,"duration":1098}},{"uid":"cd2b8f961819ea1f","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/cd2b8f961819ea1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446453604,"stop":1662446454309,"duration":705}},{"uid":"6e7b8f339c471edb","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/6e7b8f339c471edb","status":"passed","time":{"start":1662359166020,"stop":1662359167339,"duration":1319}},{"uid":"272b8483cb9d6e3","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/272b8483cb9d6e3","status":"passed","time":{"start":1662270563084,"stop":1662270564352,"duration":1268}},{"uid":"963d147737220748","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/963d147737220748","status":"passed","time":{"start":1662184037386,"stop":1662184038930,"duration":1544}},{"uid":"a76ebb226faf313d","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/a76ebb226faf313d","status":"passed","time":{"start":1662099279436,"stop":1662099281046,"duration":1610}},{"uid":"fc318df66711260c","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/fc318df66711260c","status":"passed","time":{"start":1662012168160,"stop":1662012170073,"duration":1913}},{"uid":"cf09edf85c7ad6b0","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/cf09edf85c7ad6b0","status":"passed","time":{"start":1661928408004,"stop":1661928409806,"duration":1802}}]},"tags":[]},"source":"ff2b6a7f058d12ce.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","2","None"]}