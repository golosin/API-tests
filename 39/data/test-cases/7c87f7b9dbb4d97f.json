{"uid":"7c87f7b9dbb4d97f","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1662617706687,"stop":1662617707549,"duration":862},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:35: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"bb8c3d67360154","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/bb8c3d67360154","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617526821,"stop":1662617527512,"duration":691}},{"uid":"1d823832082009aa","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/1d823832082009aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532726709,"stop":1662532727812,"duration":1103}},{"uid":"4ab1439f605f0919","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/4ab1439f605f0919","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446449244,"stop":1662446449951,"duration":707}},{"uid":"429965bc65bc5f6e","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/429965bc65bc5f6e","status":"passed","time":{"start":1662359158834,"stop":1662359159956,"duration":1122}},{"uid":"948444ee648e67cb","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/948444ee648e67cb","status":"passed","time":{"start":1662270555720,"stop":1662270556880,"duration":1160}},{"uid":"2e7be6097e7c496d","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/2e7be6097e7c496d","status":"passed","time":{"start":1662184028824,"stop":1662184030233,"duration":1409}},{"uid":"50aa1a161028a2ff","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/50aa1a161028a2ff","status":"passed","time":{"start":1662099270831,"stop":1662099272115,"duration":1284}},{"uid":"e8085fd3783c4692","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/e8085fd3783c4692","status":"passed","time":{"start":1662012158100,"stop":1662012159777,"duration":1677}},{"uid":"54127afb2227dd8d","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/54127afb2227dd8d","status":"passed","time":{"start":1661928397799,"stop":1661928399429,"duration":1630}}]},"tags":[]},"source":"7c87f7b9dbb4d97f.json","parameterValues":["'FEED'","2","None"]}