{"uid":"9fe13437a3a97291","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1662617722568,"stop":1662617723445,"duration":877},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"362375bfb60bfa01","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/362375bfb60bfa01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617539399,"stop":1662617540082,"duration":683}},{"uid":"6884bcb49a375bed","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/6884bcb49a375bed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532746948,"stop":1662532748044,"duration":1096}},{"uid":"8a4eef7a975a82ed","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/8a4eef7a975a82ed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446462250,"stop":1662446462967,"duration":717}},{"uid":"b8edd45796367bb9","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/b8edd45796367bb9","status":"passed","time":{"start":1662359180886,"stop":1662359182314,"duration":1428}},{"uid":"c0edafd44a3dbc87","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/c0edafd44a3dbc87","status":"passed","time":{"start":1662270578471,"stop":1662270579819,"duration":1348}},{"uid":"e7c66bb9ed0ba7fa","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/e7c66bb9ed0ba7fa","status":"passed","time":{"start":1662184055230,"stop":1662184056790,"duration":1560}},{"uid":"1677fc3f6d0bccb8","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/1677fc3f6d0bccb8","status":"passed","time":{"start":1662099297825,"stop":1662099299396,"duration":1571}},{"uid":"9c93d733c9ef97ee","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/9c93d733c9ef97ee","status":"passed","time":{"start":1662012189663,"stop":1662012191636,"duration":1973}},{"uid":"533241741576c851","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/533241741576c851","status":"passed","time":{"start":1661928429324,"stop":1661928431304,"duration":1980}}]},"tags":[]},"source":"9fe13437a3a97291.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}