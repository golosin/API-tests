{"uid":"2cc214e779c58281","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"dcfc6f447ab1152a67e381672353f11e","time":{"start":1662617723451,"stop":1662617724314,"duration":863},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"b64c6ec626374a32","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/b64c6ec626374a32","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617540089,"stop":1662617540779,"duration":690}},{"uid":"427a08a75b0cae36","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/427a08a75b0cae36","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532748052,"stop":1662532749146,"duration":1094}},{"uid":"d31bde4ac1132ad6","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/d31bde4ac1132ad6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446462973,"stop":1662446463691,"duration":718}},{"uid":"9881f45ec19effa1","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/9881f45ec19effa1","status":"passed","time":{"start":1662359182318,"stop":1662359185027,"duration":2709}},{"uid":"a76b8b705d49b4a5","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/a76b8b705d49b4a5","status":"passed","time":{"start":1662270579821,"stop":1662270582695,"duration":2874}},{"uid":"28914b8dddb1381","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/28914b8dddb1381","status":"passed","time":{"start":1662184056795,"stop":1662184060141,"duration":3346}},{"uid":"3949cd630392a0f8","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/3949cd630392a0f8","status":"passed","time":{"start":1662099299399,"stop":1662099302745,"duration":3346}},{"uid":"5d8dc21438e3e8f2","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/5d8dc21438e3e8f2","status":"passed","time":{"start":1662012191639,"stop":1662012195774,"duration":4135}},{"uid":"7e64de7c30306c5e","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/7e64de7c30306c5e","status":"passed","time":{"start":1661928431308,"stop":1661928435452,"duration":4144}}]},"tags":[]},"source":"2cc214e779c58281.json","parameterValues":["'FEED'"]}