{"uid":"c0fced37c0098e21","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_feed_pm","historyId":"f07104a9f36e4842d2adc6b3c1ea0296","time":{"start":1662617695928,"stop":1662617696850,"duration":922},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', sale_price_min = None, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_price_feed_pm(representation, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:34: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"29a2c73d5f7d6574","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/29a2c73d5f7d6574","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617518401,"stop":1662617519091,"duration":690}},{"uid":"eda4fbe01a91b3fd","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/eda4fbe01a91b3fd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532713242,"stop":1662532714419,"duration":1177}},{"uid":"8309e99f0c1570e5","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/8309e99f0c1570e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446440546,"stop":1662446441247,"duration":701}},{"uid":"2ee8c99d1ae04e8c","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/2ee8c99d1ae04e8c","status":"passed","time":{"start":1662359144749,"stop":1662359145799,"duration":1050}},{"uid":"b5dcd7d62cc375cc","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/b5dcd7d62cc375cc","status":"passed","time":{"start":1662270540970,"stop":1662270542027,"duration":1057}},{"uid":"ad3692147b6d56aa","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/ad3692147b6d56aa","status":"passed","time":{"start":1662184011511,"stop":1662184012689,"duration":1178}},{"uid":"2839aea2ef2a24ef","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/2839aea2ef2a24ef","status":"passed","time":{"start":1662099253367,"stop":1662099254580,"duration":1213}},{"uid":"60a9b85ce3a89e11","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/60a9b85ce3a89e11","status":"passed","time":{"start":1662012137552,"stop":1662012139021,"duration":1469}},{"uid":"1b03793d4fb12aef","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/1b03793d4fb12aef","status":"passed","time":{"start":1661928377530,"stop":1661928378903,"duration":1373}}]},"tags":[]},"source":"c0fced37c0098e21.json","parameterValues":["'FEED'","100","None"]}