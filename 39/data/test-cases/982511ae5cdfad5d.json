{"uid":"982511ae5cdfad5d","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"c68cd23a5574698c3519dd2ee8880360","time":{"start":1662617708460,"stop":1662617709311,"duration":851},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:35: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az343-405"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"57a0f5229398feb4","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/57a0f5229398feb4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617528244,"stop":1662617528917,"duration":673}},{"uid":"b7d412c75497310f","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/b7d412c75497310f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532728963,"stop":1662532730067,"duration":1104}},{"uid":"889cee659d425aea","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/889cee659d425aea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446450663,"stop":1662446451372,"duration":709}},{"uid":"48be4f7f5b222b36","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/48be4f7f5b222b36","status":"passed","time":{"start":1662359160867,"stop":1662359162136,"duration":1269}},{"uid":"66aef605ca44dbb3","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/66aef605ca44dbb3","status":"passed","time":{"start":1662270557776,"stop":1662270559096,"duration":1320}},{"uid":"9d6e18e4bef673d5","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/9d6e18e4bef673d5","status":"passed","time":{"start":1662184031353,"stop":1662184032876,"duration":1523}},{"uid":"c6b53cc8aea45910","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/c6b53cc8aea45910","status":"passed","time":{"start":1662099273310,"stop":1662099274753,"duration":1443}},{"uid":"107c507d2f27be22","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/107c507d2f27be22","status":"passed","time":{"start":1662012161239,"stop":1662012162937,"duration":1698}},{"uid":"ddc011de87e1b791","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/ddc011de87e1b791","status":"passed","time":{"start":1661928400872,"stop":1661928402603,"duration":1731}}]},"tags":[]},"source":"982511ae5cdfad5d.json","parameterValues":["'WILDBERRIES'","2","2"]}