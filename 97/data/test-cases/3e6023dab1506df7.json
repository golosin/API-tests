{"uid":"3e6023dab1506df7","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1667022052131,"stop":1667022053013,"duration":882},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az77-974"},{"name":"thread","value":"2413-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":52,"skipped":0,"passed":0,"unknown":0,"total":52},"items":[{"uid":"ef5b2f8131bfb772","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/ef5b2f8131bfb772","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935978914,"stop":1666935979813,"duration":899}},{"uid":"426a039f1782060a","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/426a039f1782060a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849478697,"stop":1666849479468,"duration":771}},{"uid":"b439d1c5290293bf","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/b439d1c5290293bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763257216,"stop":1666763257899,"duration":683}},{"uid":"393e74c2b53d1fb1","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/393e74c2b53d1fb1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679835396,"stop":1666679836080,"duration":684}},{"uid":"594af8a767d0be99","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/594af8a767d0be99","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593692970,"stop":1666593693668,"duration":698}},{"uid":"f1e55374a5740f14","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/f1e55374a5740f14","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504779126,"stop":1666504779818,"duration":692}},{"uid":"45753473e2816474","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/45753473e2816474","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418264594,"stop":1666418265562,"duration":968}},{"uid":"b7edaa7ab9b6adc7","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/b7edaa7ab9b6adc7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332218350,"stop":1666332219061,"duration":711}},{"uid":"6a50079a0c8a7e84","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/6a50079a0c8a7e84","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245436736,"stop":1666245437454,"duration":718}},{"uid":"d451e996125d709e","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/d451e996125d709e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161747541,"stop":1666161748229,"duration":688}},{"uid":"44b712b310135d92","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/44b712b310135d92","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075140236,"stop":1666075140920,"duration":684}},{"uid":"8c09ae21f4e01ea6","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/8c09ae21f4e01ea6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988641819,"stop":1665988642916,"duration":1097}},{"uid":"f82543ce77918204","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/f82543ce77918204","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899917497,"stop":1665899918320,"duration":823}},{"uid":"b0ee4fc8a83a17ed","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/b0ee4fc8a83a17ed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813724253,"stop":1665813725120,"duration":867}},{"uid":"ecc8697c48afe552","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/ecc8697c48afe552","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729118838,"stop":1665729119522,"duration":684}},{"uid":"596e70db28465e49","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/596e70db28465e49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641730154,"stop":1665641730837,"duration":683}},{"uid":"dbe3d58c460bcc04","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/dbe3d58c460bcc04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554490136,"stop":1665554491267,"duration":1131}},{"uid":"88cb24d1adf98c17","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/88cb24d1adf98c17","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469407444,"stop":1665469408140,"duration":696}},{"uid":"2b442606b4968740","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2b442606b4968740","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383154743,"stop":1665383155459,"duration":716}},{"uid":"a37c55331f8db3f7","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/a37c55331f8db3f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294915467,"stop":1665294916315,"duration":848}}]},"tags":[]},"source":"3e6023dab1506df7.json","parameterValues":["'FEED'","None","2"]}