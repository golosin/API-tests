{"uid":"9369012bdd33dcdc","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"dcfc6f447ab1152a67e381672353f11e","time":{"start":1667022068437,"stop":1667022069375,"duration":938},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az77-974"},{"name":"thread","value":"2413-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":52,"skipped":0,"passed":0,"unknown":0,"total":52},"items":[{"uid":"8c32c2e6c2e64096","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/8c32c2e6c2e64096","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935995337,"stop":1666935996221,"duration":884}},{"uid":"c7f00099af2771bd","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/c7f00099af2771bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849491525,"stop":1666849492209,"duration":684}},{"uid":"135d5e8a5ede8acf","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/135d5e8a5ede8acf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763270034,"stop":1666763270767,"duration":733}},{"uid":"7cfbbff16b4857aa","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/7cfbbff16b4857aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679847940,"stop":1666679848623,"duration":683}},{"uid":"23674f7d264aff89","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/23674f7d264aff89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593705462,"stop":1666593706142,"duration":680}},{"uid":"a83c3e2cbe8465ad","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/a83c3e2cbe8465ad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504792414,"stop":1666504793119,"duration":705}},{"uid":"9ee7155b43c52d82","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/9ee7155b43c52d82","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418280750,"stop":1666418281652,"duration":902}},{"uid":"e069620f0b22af31","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/e069620f0b22af31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332231475,"stop":1666332232187,"duration":712}},{"uid":"2c1d7b8a2f28067","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/2c1d7b8a2f28067","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245449784,"stop":1666245450490,"duration":706}},{"uid":"2dd03767dbedfbaf","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/2dd03767dbedfbaf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161760020,"stop":1666161760694,"duration":674}},{"uid":"2b8850221b7def79","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/2b8850221b7def79","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075152684,"stop":1666075153368,"duration":684}},{"uid":"ec6eaad2008bc289","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/ec6eaad2008bc289","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988661785,"stop":1665988662883,"duration":1098}},{"uid":"c4f11ad8f2a737c2","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/c4f11ad8f2a737c2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899930836,"stop":1665899931580,"duration":744}},{"uid":"a844dda74f8d1649","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/a844dda74f8d1649","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813740155,"stop":1665813741085,"duration":930}},{"uid":"830f47e04fa85810","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/830f47e04fa85810","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729132528,"stop":1665729133238,"duration":710}},{"uid":"ddf6a937c5cc465d","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/ddf6a937c5cc465d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641742597,"stop":1665641743304,"duration":707}},{"uid":"e58fcf374b5911e5","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/e58fcf374b5911e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554510254,"stop":1665554511363,"duration":1109}},{"uid":"bb77f01ae53691ac","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/bb77f01ae53691ac","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469420058,"stop":1665469420782,"duration":724}},{"uid":"37ff5bf8a114ff82","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/37ff5bf8a114ff82","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383167740,"stop":1665383168444,"duration":704}},{"uid":"ce302ff3ba7d5b9f","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/ce302ff3ba7d5b9f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294931187,"stop":1665294932088,"duration":901}}]},"tags":[]},"source":"9369012bdd33dcdc.json","parameterValues":["'FEED'"]}