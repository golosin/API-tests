{"uid":"ea1b4695c551d95","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1671168708143,"stop":1671168709015,"duration":872},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az440-119"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":100,"skipped":0,"passed":0,"unknown":0,"total":100},"items":[{"uid":"2b667a019f0d4b09","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/2b667a019f0d4b09","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082334336,"stop":1671082335394,"duration":1058}},{"uid":"168605315b96bf0a","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/168605315b96bf0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995918126,"stop":1670995919141,"duration":1015}},{"uid":"fa032e0c4f797709","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/fa032e0c4f797709","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909509689,"stop":1670909510560,"duration":871}},{"uid":"5c27799fb8829a39","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/5c27799fb8829a39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823098150,"stop":1670823098961,"duration":811}},{"uid":"78b842330277f81e","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/78b842330277f81e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736702207,"stop":1670736703013,"duration":806}},{"uid":"4d97f5958f612c12","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/4d97f5958f612c12","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650330480,"stop":1670650331728,"duration":1248}},{"uid":"a84f4fc2e55c82d4","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/a84f4fc2e55c82d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563908733,"stop":1670563909800,"duration":1067}},{"uid":"57c9f3deed579554","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/57c9f3deed579554","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477501121,"stop":1670477501959,"duration":838}},{"uid":"9f78d86e0b0547ea","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/9f78d86e0b0547ea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391103584,"stop":1670391104431,"duration":847}},{"uid":"b1cbea4b3040e122","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/b1cbea4b3040e122","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304740746,"stop":1670304741614,"duration":868}},{"uid":"f90904c83a56ebce","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/f90904c83a56ebce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218326018,"stop":1670218326879,"duration":861}},{"uid":"1b678d4c5e410d59","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/1b678d4c5e410d59","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131911265,"stop":1670131912311,"duration":1046}},{"uid":"8c202be2f2e53c40","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/8c202be2f2e53c40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045507856,"stop":1670045508706,"duration":850}},{"uid":"fc149f371a0550b4","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/fc149f371a0550b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959131917,"stop":1669959132918,"duration":1001}},{"uid":"fee18040f5c66171","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/fee18040f5c66171","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872856240,"stop":1669872857365,"duration":1125}},{"uid":"52d7709b53facac","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/52d7709b53facac","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786412141,"stop":1669786413250,"duration":1109}},{"uid":"80364da4cd533241","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/80364da4cd533241","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699980617,"stop":1669699981723,"duration":1106}},{"uid":"6da4ce27025de965","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/6da4ce27025de965","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613567352,"stop":1669613568046,"duration":694}},{"uid":"7146cfedd7c633a2","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/7146cfedd7c633a2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527115378,"stop":1669527116097,"duration":719}},{"uid":"4c6a375049016c31","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/4c6a375049016c31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440708752,"stop":1669440709477,"duration":725}}]},"tags":[]},"source":"ea1b4695c551d95.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}