{"uid":"68c6386ec541bc03","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"dcfc6f447ab1152a67e381672353f11e","time":{"start":1672896721512,"stop":1672896722734,"duration":1222},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az257-896"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":120,"skipped":0,"passed":0,"unknown":0,"total":120},"items":[{"uid":"5e376c7b1a69d005","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/5e376c7b1a69d005","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810326750,"stop":1672810327778,"duration":1028}},{"uid":"73c141ac3d89dfe4","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/73c141ac3d89dfe4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723906566,"stop":1672723907402,"duration":836}},{"uid":"a6f84d74f44d44b","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/a6f84d74f44d44b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637503550,"stop":1672637504397,"duration":847}},{"uid":"df6e6d6962dd327","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/df6e6d6962dd327","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551097375,"stop":1672551098189,"duration":814}},{"uid":"1bab1a37d371168a","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/1bab1a37d371168a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464702283,"stop":1672464703125,"duration":842}},{"uid":"a49c173e2e975ce2","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/a49c173e2e975ce2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378323232,"stop":1672378324293,"duration":1061}},{"uid":"888678aa623c9b98","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/888678aa623c9b98","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291911232,"stop":1672291912237,"duration":1005}},{"uid":"a8dc7e27cf47365e","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/a8dc7e27cf47365e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205502571,"stop":1672205503394,"duration":823}},{"uid":"3c8a27558cd9cce7","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/3c8a27558cd9cce7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119121085,"stop":1672119122333,"duration":1248}},{"uid":"86906a36a6d68940","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/86906a36a6d68940","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032723943,"stop":1672032725068,"duration":1125}},{"uid":"afb3340a139aed3","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/afb3340a139aed3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946316685,"stop":1671946317503,"duration":818}},{"uid":"9fcee398d3102673","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/9fcee398d3102673","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859903097,"stop":1671859903933,"duration":836}},{"uid":"5a7d439cbc2354b8","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/5a7d439cbc2354b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773522204,"stop":1671773523330,"duration":1126}},{"uid":"17276fc01bdcdbdb","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/17276fc01bdcdbdb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687107275,"stop":1671687108124,"duration":849}},{"uid":"68143d9156035ad2","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/68143d9156035ad2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600702700,"stop":1671600703535,"duration":835}},{"uid":"638b68218f228301","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/638b68218f228301","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514314070,"stop":1671514314920,"duration":850}},{"uid":"d7ad26ba75b91b62","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/d7ad26ba75b91b62","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427938589,"stop":1671427939849,"duration":1260}},{"uid":"626733eb82dc0011","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/626733eb82dc0011","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341531327,"stop":1671341532568,"duration":1241}},{"uid":"233201b616232742","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/233201b616232742","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255119002,"stop":1671255120028,"duration":1026}},{"uid":"7c27d01ca7db50a","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/7c27d01ca7db50a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168705533,"stop":1671168706385,"duration":852}}]},"tags":[]},"source":"68c6386ec541bc03.json","parameterValues":["'FEED'"]}