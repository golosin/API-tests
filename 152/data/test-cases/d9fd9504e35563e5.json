{"uid":"d9fd9504e35563e5","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1671773501645,"stop":1671773502783,"duration":1138},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az988-330"},{"name":"thread","value":"2505-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":107,"skipped":0,"passed":0,"unknown":0,"total":107},"items":[{"uid":"ba071c718a08b804","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/ba071c718a08b804","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687091806,"stop":1671687092698,"duration":892}},{"uid":"bd6ba2bed60a2866","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/bd6ba2bed60a2866","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600686990,"stop":1671600687836,"duration":846}},{"uid":"81ec51fb7f2fa3d0","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/81ec51fb7f2fa3d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514298467,"stop":1671514299318,"duration":851}},{"uid":"5646ce8442a0992a","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/5646ce8442a0992a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427915565,"stop":1671427916850,"duration":1285}},{"uid":"d9bd4830fb1dad5b","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/d9bd4830fb1dad5b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341508612,"stop":1671341509848,"duration":1236}},{"uid":"582d3127772ae1be","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/582d3127772ae1be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255100775,"stop":1671255101784,"duration":1009}},{"uid":"81aac20d6f9b4cc0","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/81aac20d6f9b4cc0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168688493,"stop":1671168689379,"duration":886}},{"uid":"77eb408c2aa1dd1b","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/77eb408c2aa1dd1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082312199,"stop":1671082313216,"duration":1017}},{"uid":"344732ff63d540e1","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/344732ff63d540e1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995896043,"stop":1670995897054,"duration":1011}},{"uid":"9a1a9143756f8f4a","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/9a1a9143756f8f4a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909491243,"stop":1670909492133,"duration":890}},{"uid":"ff48b629c43d5a9d","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/ff48b629c43d5a9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823080630,"stop":1670823081490,"duration":860}},{"uid":"be032fd636ec0294","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/be032fd636ec0294","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736684869,"stop":1670736685660,"duration":791}},{"uid":"473c6d8da16cffda","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/473c6d8da16cffda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650304271,"stop":1670650305528,"duration":1257}},{"uid":"eb0eb48a5164ccb6","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/eb0eb48a5164ccb6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563887178,"stop":1670563888210,"duration":1032}},{"uid":"26763bb4251d0d26","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/26763bb4251d0d26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477483297,"stop":1670477484139,"duration":842}},{"uid":"5b3f693f5878d40e","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/5b3f693f5878d40e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391085168,"stop":1670391086035,"duration":867}},{"uid":"42d428c815f2ba30","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/42d428c815f2ba30","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304721756,"stop":1670304722696,"duration":940}},{"uid":"257e7d1d25922178","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/257e7d1d25922178","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218307310,"stop":1670218308179,"duration":869}},{"uid":"d013ad9bc99a9b77","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/d013ad9bc99a9b77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131889138,"stop":1670131890189,"duration":1051}},{"uid":"422da24e0b8c7474","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/422da24e0b8c7474","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045489624,"stop":1670045490514,"duration":890}}]},"tags":[]},"source":"d9fd9504e35563e5.json","parameterValues":["'FEED'","None","2"]}