{"uid":"31cd0210e2564d88","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1669613568055,"stop":1669613568751,"duration":696},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az72-392"},{"name":"thread","value":"2425-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":82,"skipped":0,"passed":0,"unknown":0,"total":82},"items":[{"uid":"ebdedf840ed48a72","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/ebdedf840ed48a72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527116106,"stop":1669527116798,"duration":692}},{"uid":"e45705035ea46685","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/e45705035ea46685","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440709485,"stop":1669440710200,"duration":715}},{"uid":"b61d73b772da675b","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/b61d73b772da675b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354353611,"stop":1669354354299,"duration":688}},{"uid":"62d4926a8c0434d2","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/62d4926a8c0434d2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267955307,"stop":1669267955994,"duration":687}},{"uid":"ae5e354376e5dcdd","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/ae5e354376e5dcdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181599291,"stop":1669181600374,"duration":1083}},{"uid":"f0109b82bafa68ff","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/f0109b82bafa68ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095321355,"stop":1669095322047,"duration":692}},{"uid":"74649301a97eb30e","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/74649301a97eb30e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008925628,"stop":1669008926678,"duration":1050}},{"uid":"9c681698b5a9e529","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/9c681698b5a9e529","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922484469,"stop":1668922485578,"duration":1109}},{"uid":"a62bd73b967c3c70","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/a62bd73b967c3c70","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836059252,"stop":1668836060393,"duration":1141}},{"uid":"e9ad4830cdfb2ef9","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/e9ad4830cdfb2ef9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749699881,"stop":1668749700884,"duration":1003}},{"uid":"6b331246929d5cfe","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/6b331246929d5cfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663330706,"stop":1668663331584,"duration":878}},{"uid":"3f0d4634a5f181b1","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/3f0d4634a5f181b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576881210,"stop":1668576882084,"duration":874}},{"uid":"1545aa863d4e4a4d","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/1545aa863d4e4a4d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490465629,"stop":1668490466505,"duration":876}},{"uid":"dd9a0601579f79e2","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/dd9a0601579f79e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404591542,"stop":1668404592241,"duration":699}},{"uid":"c5da4ebc50b0b410","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/c5da4ebc50b0b410","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317859660,"stop":1668317860774,"duration":1114}},{"uid":"53b4cd2637913374","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/53b4cd2637913374","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231403722,"stop":1668231404402,"duration":680}},{"uid":"cf7b26edddf5a8db","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/cf7b26edddf5a8db","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145243469,"stop":1668145244187,"duration":718}},{"uid":"ad2888ecbae6af64","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/ad2888ecbae6af64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058946550,"stop":1668058947434,"duration":884}},{"uid":"5fa81b914026ca25","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/5fa81b914026ca25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972725385,"stop":1667972726099,"duration":714}},{"uid":"acda92b1dbfabca6","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/acda92b1dbfabca6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886152826,"stop":1667886153914,"duration":1088}}]},"tags":[]},"source":"31cd0210e2564d88.json","parameterValues":["'FEED'"]}