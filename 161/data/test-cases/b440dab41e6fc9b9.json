{"uid":"b440dab41e6fc9b9","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1672551100649,"stop":1672551101446,"duration":797},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az366-387"},{"name":"thread","value":"2623-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":116,"skipped":0,"passed":0,"unknown":0,"total":116},"items":[{"uid":"3c798e2e85f71121","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/3c798e2e85f71121","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464705691,"stop":1672464706533,"duration":842}},{"uid":"c126473609ed8036","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/c126473609ed8036","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378327487,"stop":1672378328521,"duration":1034}},{"uid":"9c039690d30d9ca2","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/9c039690d30d9ca2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291915313,"stop":1672291916306,"duration":993}},{"uid":"1ab50ba26d967c4c","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/1ab50ba26d967c4c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205505912,"stop":1672205506743,"duration":831}},{"uid":"6527505070d2577e","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/6527505070d2577e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119126143,"stop":1672119127383,"duration":1240}},{"uid":"89bf342dd3e4eb88","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/89bf342dd3e4eb88","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032728469,"stop":1672032729587,"duration":1118}},{"uid":"cc459b44a1929405","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/cc459b44a1929405","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946319991,"stop":1671946320814,"duration":823}},{"uid":"6d0b42daf848c060","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/6d0b42daf848c060","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859906483,"stop":1671859907322,"duration":839}},{"uid":"5cf792d3e98045c4","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/5cf792d3e98045c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773526897,"stop":1671773528025,"duration":1128}},{"uid":"cd99f3a5107ecc20","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/cd99f3a5107ecc20","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687110689,"stop":1671687111547,"duration":858}},{"uid":"90fa3e23dfd46240","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/90fa3e23dfd46240","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600706452,"stop":1671600707295,"duration":843}},{"uid":"390b210d4f7fb0b2","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/390b210d4f7fb0b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514317522,"stop":1671514318364,"duration":842}},{"uid":"f3648ae456bf0cd3","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/f3648ae456bf0cd3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427943664,"stop":1671427944978,"duration":1314}},{"uid":"a013727252d98cca","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/a013727252d98cca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341536372,"stop":1671341537611,"duration":1239}},{"uid":"469f74fa933d7051","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/469f74fa933d7051","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255123068,"stop":1671255124071,"duration":1003}},{"uid":"6663658996288ca4","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/6663658996288ca4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168709026,"stop":1671168709900,"duration":874}},{"uid":"e7ef0e8d10221062","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/e7ef0e8d10221062","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082335404,"stop":1671082336436,"duration":1032}},{"uid":"2980522c658785aa","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/2980522c658785aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995919150,"stop":1670995920152,"duration":1002}},{"uid":"88eabae872c6218d","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/88eabae872c6218d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909510570,"stop":1670909511422,"duration":852}},{"uid":"8b645088bde6c725","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/8b645088bde6c725","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823098970,"stop":1670823099799,"duration":829}}]},"tags":[]},"source":"b440dab41e6fc9b9.json","parameterValues":["'FEED'"]}