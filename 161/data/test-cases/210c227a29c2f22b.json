{"uid":"210c227a29c2f22b","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"b1ad4e9b518d5e42ac697e9a109c8071","time":{"start":1672551085178,"stop":1672551085978,"duration":800},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az366-387"},{"name":"thread","value":"2623-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":116,"skipped":0,"passed":0,"unknown":0,"total":116},"items":[{"uid":"7ded72c9bacd0e6d","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/7ded72c9bacd0e6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464689552,"stop":1672464690386,"duration":834}},{"uid":"1e1b3e820135e4a9","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/1e1b3e820135e4a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378307326,"stop":1672378308384,"duration":1058}},{"uid":"ac1e43a5c0ba7ccc","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/ac1e43a5c0ba7ccc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291895852,"stop":1672291896848,"duration":996}},{"uid":"fd032f5768d617be","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/fd032f5768d617be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205489943,"stop":1672205490777,"duration":834}},{"uid":"b41a5cde5d74e21e","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/b41a5cde5d74e21e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119102166,"stop":1672119103420,"duration":1254}},{"uid":"d38f9e8dd86377f1","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/d38f9e8dd86377f1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032706551,"stop":1672032707668,"duration":1117}},{"uid":"3c00fdba47cc0d39","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/3c00fdba47cc0d39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946304213,"stop":1671946305042,"duration":829}},{"uid":"40ac331da63dabda","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/40ac331da63dabda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859890308,"stop":1671859891138,"duration":830}},{"uid":"9ae7c2e35bc4f4c0","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/9ae7c2e35bc4f4c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773505078,"stop":1671773506203,"duration":1125}},{"uid":"59b9559c061d248f","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/59b9559c061d248f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687094418,"stop":1671687095264,"duration":846}},{"uid":"744f0a1a32ff85e","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/744f0a1a32ff85e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600689593,"stop":1671600690437,"duration":844}},{"uid":"d34fc1a8f31ef8a9","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/d34fc1a8f31ef8a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514301088,"stop":1671514301943,"duration":855}},{"uid":"5b00a7294d2b8b64","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/5b00a7294d2b8b64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427919441,"stop":1671427920703,"duration":1262}},{"uid":"8f97318a0843aa80","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/8f97318a0843aa80","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341512387,"stop":1671341513633,"duration":1246}},{"uid":"4c6cd99092ca35c8","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/4c6cd99092ca35c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255103833,"stop":1671255104892,"duration":1059}},{"uid":"945e83f817961f04","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/945e83f817961f04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168691431,"stop":1671168692852,"duration":1421}},{"uid":"9e477ce1099fa0e4","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/9e477ce1099fa0e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082315299,"stop":1671082316303,"duration":1004}},{"uid":"4a639d24b9330e62","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/4a639d24b9330e62","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995899266,"stop":1670995900452,"duration":1186}},{"uid":"6397626960e8503e","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/6397626960e8503e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909493943,"stop":1670909494811,"duration":868}},{"uid":"98810ade6d21178f","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/98810ade6d21178f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823083175,"stop":1670823083979,"duration":804}}]},"tags":[]},"source":"210c227a29c2f22b.json","parameterValues":["'WILDBERRIES'","None","2"]}