{"uid":"f98b72c6a17d485e","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"9e543d97b0c67ed8bd1913341c71e983","time":{"start":1662446455023,"stop":1662446455719,"duration":696},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nstock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az206-889"},{"name":"thread","value":"2596-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"21ebad590ac42778","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/21ebad590ac42778","status":"passed","time":{"start":1662359168518,"stop":1662359169740,"duration":1222}},{"uid":"1abdd3e721f3cbdf","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/1abdd3e721f3cbdf","status":"passed","time":{"start":1662270565625,"stop":1662270566848,"duration":1223}},{"uid":"e328395987358252","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/e328395987358252","status":"passed","time":{"start":1662184040364,"stop":1662184041757,"duration":1393}},{"uid":"ccf1bd2441620d38","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/ccf1bd2441620d38","status":"passed","time":{"start":1662099282510,"stop":1662099283956,"duration":1446}},{"uid":"cc8c26ef3d81c85f","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/cc8c26ef3d81c85f","status":"passed","time":{"start":1662012171731,"stop":1662012173407,"duration":1676}},{"uid":"1c755da0bbc0d208","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/1c755da0bbc0d208","status":"passed","time":{"start":1661928411483,"stop":1661928413148,"duration":1665}}]},"tags":[]},"source":"f98b72c6a17d485e.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'","2","2"]}