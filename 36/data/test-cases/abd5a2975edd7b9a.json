{"uid":"abd5a2975edd7b9a","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_feed_pm","historyId":"0e487f066301c55de4471419206d12b2","time":{"start":1662446441992,"stop":1662446442738,"duration":746},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', sale_price_min = 100, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_price_feed_pm(representation, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:34: KeyError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az206-889"},{"name":"thread","value":"2596-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"12284634c52df3e7","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/12284634c52df3e7","status":"passed","time":{"start":1662359146916,"stop":1662359148040,"duration":1124}},{"uid":"96d282ec3be6ffa4","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/96d282ec3be6ffa4","status":"passed","time":{"start":1662270543281,"stop":1662270544510,"duration":1229}},{"uid":"1e2eb55d50bb956d","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/1e2eb55d50bb956d","status":"passed","time":{"start":1662184013996,"stop":1662184015448,"duration":1452}},{"uid":"c4cfd3cff0fbfd06","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/c4cfd3cff0fbfd06","status":"passed","time":{"start":1662099256055,"stop":1662099257425,"duration":1370}},{"uid":"a2ec6e20c6afe812","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/a2ec6e20c6afe812","status":"passed","time":{"start":1662012140679,"stop":1662012142317,"duration":1638}},{"uid":"9ad6317c342fe115","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/9ad6317c342fe115","status":"passed","time":{"start":1661928380537,"stop":1661928382144,"duration":1607}}]},"tags":[]},"source":"abd5a2975edd7b9a.json","parameterValues":["'WILDBERRIES'","100","100"]}