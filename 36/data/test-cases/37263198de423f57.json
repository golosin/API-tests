{"uid":"37263198de423f57","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"18e1ca4faac17d6f27f42bdbe5a2600b","time":{"start":1662446447806,"stop":1662446448504,"duration":698},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az206-889"},{"name":"thread","value":"2596-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"},{"name":"sale_price_max","value":"None"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"90f78117e31dd941","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/90f78117e31dd941","status":"passed","time":{"start":1662359156713,"stop":1662359157936,"duration":1223}},{"uid":"cf3018d8c9393723","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/cf3018d8c9393723","status":"passed","time":{"start":1662270553375,"stop":1662270554776,"duration":1401}},{"uid":"15fe1a9064649776","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/15fe1a9064649776","status":"passed","time":{"start":1662184026149,"stop":1662184027712,"duration":1563}},{"uid":"429944554e5e0c09","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/429944554e5e0c09","status":"passed","time":{"start":1662099268084,"stop":1662099269710,"duration":1626}},{"uid":"2583f78799833f19","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/2583f78799833f19","status":"passed","time":{"start":1662012154786,"stop":1662012156607,"duration":1821}},{"uid":"84ae6d3fc1ad49a4","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/84ae6d3fc1ad49a4","status":"passed","time":{"start":1661928394657,"stop":1661928396435,"duration":1778}}]},"tags":[]},"source":"37263198de423f57.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'","None","100"]}