{"uid":"30f44dd01fbb6983","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1672637497645,"stop":1672637498476,"duration":831},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az357-796"},{"name":"thread","value":"2449-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":117,"skipped":0,"passed":0,"unknown":0,"total":117},"items":[{"uid":"9672e01d8777b64","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/9672e01d8777b64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551091701,"stop":1672551092499,"duration":798}},{"uid":"870736107a71b9e9","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/870736107a71b9e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464696355,"stop":1672464697196,"duration":841}},{"uid":"69ab99a29655d34c","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/69ab99a29655d34c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378315753,"stop":1672378316851,"duration":1098}},{"uid":"5a1e7b929fdaf915","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/5a1e7b929fdaf915","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291904059,"stop":1672291905067,"duration":1008}},{"uid":"da20efd8ab70931a","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/da20efd8ab70931a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205496675,"stop":1672205497517,"duration":842}},{"uid":"20fac614e226a0a5","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/20fac614e226a0a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119112277,"stop":1672119113519,"duration":1242}},{"uid":"eb549844a7cffbff","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/eb549844a7cffbff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032716004,"stop":1672032717187,"duration":1183}},{"uid":"d2be1e43ff7f488d","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/d2be1e43ff7f488d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946310818,"stop":1671946311640,"duration":822}},{"uid":"57b2b67c0fb91cab","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/57b2b67c0fb91cab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859897155,"stop":1671859897987,"duration":832}},{"uid":"bc17e472cba5f93a","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/bc17e472cba5f93a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773514180,"stop":1671773515306,"duration":1126}},{"uid":"450c7668cda99264","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/450c7668cda99264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687101247,"stop":1671687102111,"duration":864}},{"uid":"a350bf3e515fcaba","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/a350bf3e515fcaba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600696539,"stop":1671600697507,"duration":968}},{"uid":"57839861aaf9e263","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/57839861aaf9e263","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514308083,"stop":1671514308943,"duration":860}},{"uid":"ab915ad2a72414a9","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/ab915ad2a72414a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427929648,"stop":1671427930934,"duration":1286}},{"uid":"e69857e21b026581","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/e69857e21b026581","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341522518,"stop":1671341523763,"duration":1245}},{"uid":"fe812e9ff43d09fe","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/fe812e9ff43d09fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255111960,"stop":1671255112968,"duration":1008}},{"uid":"d4a4cc183d60e06d","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/d4a4cc183d60e06d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168699008,"stop":1671168699871,"duration":863}},{"uid":"f111bada8d3256c9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/f111bada8d3256c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082323733,"stop":1671082324774,"duration":1041}},{"uid":"b6255878ab7582d1","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/b6255878ab7582d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995907652,"stop":1670995908660,"duration":1008}},{"uid":"c21052cec57607d9","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/c21052cec57607d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909501003,"stop":1670909501875,"duration":872}}]},"tags":[]},"source":"30f44dd01fbb6983.json","parameterValues":["'false'","'FEED'"]}