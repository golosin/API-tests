{"uid":"d569c7a3134100e","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1667972717970,"stop":1667972718768,"duration":798},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az28-857"},{"name":"thread","value":"2418-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":63,"skipped":0,"passed":0,"unknown":0,"total":63},"items":[{"uid":"706f1af1976ff8ea","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/706f1af1976ff8ea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886141830,"stop":1667886142926,"duration":1096}},{"uid":"ab9ed3988a7b9560","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/ab9ed3988a7b9560","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799846975,"stop":1667799847828,"duration":853}},{"uid":"a42ea03d4b0c834","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/a42ea03d4b0c834","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712873707,"stop":1667712874417,"duration":710}},{"uid":"b6aa2523b8c8e943","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/b6aa2523b8c8e943","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626476701,"stop":1667626477467,"duration":766}},{"uid":"6cb4f56c42e89260","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/6cb4f56c42e89260","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540452150,"stop":1667540453015,"duration":865}},{"uid":"95dda5dab9b4792d","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/95dda5dab9b4792d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454011269,"stop":1667454012160,"duration":891}},{"uid":"72dbb1f92ba86561","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/72dbb1f92ba86561","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368616923,"stop":1667368617644,"duration":721}},{"uid":"dfb43c0597bc89a2","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/dfb43c0597bc89a2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282434877,"stop":1667282435638,"duration":761}},{"uid":"19316052640f8539","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/19316052640f8539","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195433207,"stop":1667195434083,"duration":876}},{"uid":"981155027965e830","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/981155027965e830","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108555076,"stop":1667108555953,"duration":877}},{"uid":"661249ab43551983","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/661249ab43551983","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022062937,"stop":1667022063853,"duration":916}},{"uid":"a9ee3d8f6145e87c","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/a9ee3d8f6145e87c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935989894,"stop":1666935990784,"duration":890}},{"uid":"9a03794dd5099789","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/9a03794dd5099789","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849487282,"stop":1666849487975,"duration":693}},{"uid":"5feeef2470ee664d","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/5feeef2470ee664d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763265628,"stop":1666763266307,"duration":679}},{"uid":"f3ea1a1eb86a8de8","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/f3ea1a1eb86a8de8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679843747,"stop":1666679844436,"duration":689}},{"uid":"d27ca98de092b3f6","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/d27ca98de092b3f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593701329,"stop":1666593702010,"duration":681}},{"uid":"4f49116234cfa8e3","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/4f49116234cfa8e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504787889,"stop":1666504788774,"duration":885}},{"uid":"1458bb45f794abeb","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/1458bb45f794abeb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418275438,"stop":1666418276342,"duration":904}},{"uid":"71f11be1a8bf087e","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/71f11be1a8bf087e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332227119,"stop":1666332227860,"duration":741}},{"uid":"363723c22a756891","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/363723c22a756891","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245445454,"stop":1666245446156,"duration":702}}]},"tags":[]},"source":"d569c7a3134100e.json","parameterValues":["'true'","'WILDBERRIES'"]}