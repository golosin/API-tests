{"uid":"52e82fcb7b97e964","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1667712875843,"stop":1667712876550,"duration":707},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az47-358"},{"name":"thread","value":"2441-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":0,"unknown":0,"total":60},"items":[{"uid":"61800a4d0a57847e","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/61800a4d0a57847e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626478967,"stop":1667626479699,"duration":732}},{"uid":"46f4b2d7fc8452bf","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/46f4b2d7fc8452bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540454748,"stop":1667540455648,"duration":900}},{"uid":"7a07a04823eb5894","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/7a07a04823eb5894","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454013959,"stop":1667454014811,"duration":852}},{"uid":"2c00689dc80945af","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/2c00689dc80945af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368619097,"stop":1667368619823,"duration":726}},{"uid":"4b4fcbfb0a6c69fb","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/4b4fcbfb0a6c69fb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282437070,"stop":1667282437767,"duration":697}},{"uid":"4881995aa5ddbd76","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/4881995aa5ddbd76","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195435851,"stop":1667195436694,"duration":843}},{"uid":"5128d90284c49a39","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/5128d90284c49a39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108557735,"stop":1667108558614,"duration":879}},{"uid":"5d5aa6b3a0194bd9","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/5d5aa6b3a0194bd9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022065730,"stop":1667022066612,"duration":882}},{"uid":"ba372f9d74f9fd77","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/ba372f9d74f9fd77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935992573,"stop":1666935993474,"duration":901}},{"uid":"e72a493fd9febcf8","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/e72a493fd9febcf8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849489407,"stop":1666849490116,"duration":709}},{"uid":"1422d3348981b98a","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/1422d3348981b98a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763267710,"stop":1666763268502,"duration":792}},{"uid":"aa9481c080b07206","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/aa9481c080b07206","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679845866,"stop":1666679846539,"duration":673}},{"uid":"f489f76718eceb79","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/f489f76718eceb79","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593703400,"stop":1666593704072,"duration":672}},{"uid":"cb399f16f3e3a70d","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/cb399f16f3e3a70d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504790296,"stop":1666504790989,"duration":693}},{"uid":"e4af26cf7208f1b2","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/e4af26cf7208f1b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418278090,"stop":1666418278972,"duration":882}},{"uid":"1c4477aed0b2d467","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/1c4477aed0b2d467","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332229277,"stop":1666332229991,"duration":714}},{"uid":"93f19b55d68129be","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/93f19b55d68129be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245447663,"stop":1666245448377,"duration":714}},{"uid":"6b21bbba04d25811","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/6b21bbba04d25811","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161757930,"stop":1666161758619,"duration":689}},{"uid":"f41d7dd4db8b0775","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/f41d7dd4db8b0775","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075150609,"stop":1666075151297,"duration":688}},{"uid":"a7c4801bf74755c","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/a7c4801bf74755c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988658451,"stop":1665988659548,"duration":1097}}]},"tags":[]},"source":"52e82fcb7b97e964.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}