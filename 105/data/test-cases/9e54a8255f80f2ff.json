{"uid":"9e54a8255f80f2ff","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1667712880865,"stop":1667712881567,"duration":702},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az47-358"},{"name":"thread","value":"2441-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":0,"unknown":0,"total":60},"items":[{"uid":"4053f880e00412c7","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/4053f880e00412c7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626484045,"stop":1667626484750,"duration":705}},{"uid":"b3c755eae9de0420","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/b3c755eae9de0420","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540460968,"stop":1667540461844,"duration":876}},{"uid":"494dabdd22b883b2","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/494dabdd22b883b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454020202,"stop":1667454021076,"duration":874}},{"uid":"f2e8bb4e3abf1755","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/f2e8bb4e3abf1755","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368624341,"stop":1667368625088,"duration":747}},{"uid":"e041401f14b747b5","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/e041401f14b747b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282442053,"stop":1667282442757,"duration":704}},{"uid":"228cd48bfa2a0d39","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/228cd48bfa2a0d39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195442000,"stop":1667195442849,"duration":849}},{"uid":"56f2512a6f756b55","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/56f2512a6f756b55","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108563926,"stop":1667108564817,"duration":891}},{"uid":"3e757d500f03f72","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/3e757d500f03f72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022072124,"stop":1667022073011,"duration":887}},{"uid":"d5e6a26422ba7d0f","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/d5e6a26422ba7d0f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935999004,"stop":1666935999908,"duration":904}},{"uid":"3bbde5b80a9f7818","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/3bbde5b80a9f7818","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849494319,"stop":1666849495016,"duration":697}},{"uid":"4ffd468b751c8502","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/4ffd468b751c8502","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763272875,"stop":1666763273558,"duration":683}},{"uid":"ababb223c5ddf070","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/ababb223c5ddf070","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679850696,"stop":1666679851376,"duration":680}},{"uid":"556fa57d36333d23","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/556fa57d36333d23","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593708230,"stop":1666593708919,"duration":689}},{"uid":"be4efd563e19a852","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/be4efd563e19a852","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504795270,"stop":1666504795976,"duration":706}},{"uid":"512c827832f58144","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/512c827832f58144","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418284651,"stop":1666418285584,"duration":933}},{"uid":"823bbb55036df11a","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/823bbb55036df11a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332234354,"stop":1666332235117,"duration":763}},{"uid":"90d93535e054c750","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/90d93535e054c750","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245452637,"stop":1666245453481,"duration":844}},{"uid":"1f92336ee79d506d","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/1f92336ee79d506d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161762769,"stop":1666161763495,"duration":726}},{"uid":"340310308a6d68a","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/340310308a6d68a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075155439,"stop":1666075156119,"duration":680}},{"uid":"97af64ac2e47e66c","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/97af64ac2e47e66c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988666242,"stop":1665988667347,"duration":1105}}]},"tags":[]},"source":"9e54a8255f80f2ff.json","parameterValues":["'FEED'"]}