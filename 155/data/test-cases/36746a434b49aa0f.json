{"uid":"36746a434b49aa0f","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1672032731832,"stop":1672032732935,"duration":1103},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az987-242"},{"name":"thread","value":"2528-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":110,"skipped":0,"passed":0,"unknown":0,"total":110},"items":[{"uid":"18b983d5933a3761","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/18b983d5933a3761","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946322522,"stop":1671946323336,"duration":814}},{"uid":"546fbe39aed52ac5","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/546fbe39aed52ac5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859909035,"stop":1671859909882,"duration":847}},{"uid":"b4c9443090175a3b","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/b4c9443090175a3b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773530286,"stop":1671773531406,"duration":1120}},{"uid":"ffe999f520d59d2f","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/ffe999f520d59d2f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687113264,"stop":1671687114083,"duration":819}},{"uid":"9824239a30a55826","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/9824239a30a55826","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600708992,"stop":1671600709832,"duration":840}},{"uid":"c883e1b3c7be52b7","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/c883e1b3c7be52b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514320099,"stop":1671514320945,"duration":846}},{"uid":"c3d8314cb992e46a","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/c3d8314cb992e46a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427947560,"stop":1671427948824,"duration":1264}},{"uid":"d500d376408f6637","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/d500d376408f6637","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341540124,"stop":1671341541392,"duration":1268}},{"uid":"eeb72f02457c896d","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/eeb72f02457c896d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255126118,"stop":1671255127122,"duration":1004}},{"uid":"4d97ea89597f9f36","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/4d97ea89597f9f36","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168711652,"stop":1671168712521,"duration":869}},{"uid":"d422135cd632047","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/d422135cd632047","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082338540,"stop":1671082339542,"duration":1002}},{"uid":"d610a60872d1781f","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/d610a60872d1781f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995922181,"stop":1670995923175,"duration":994}},{"uid":"5a42554cdaf5caa7","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/5a42554cdaf5caa7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909513323,"stop":1670909514209,"duration":886}},{"uid":"1b27b8e9c60e8c8b","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/1b27b8e9c60e8c8b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823101444,"stop":1670823102261,"duration":817}},{"uid":"f678471a81f1fe6a","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/f678471a81f1fe6a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736705472,"stop":1670736706263,"duration":791}},{"uid":"35f847c7e4a2062c","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/35f847c7e4a2062c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650335443,"stop":1670650336679,"duration":1236}},{"uid":"bffb79297f6dfeef","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/bffb79297f6dfeef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563912856,"stop":1670563913861,"duration":1005}},{"uid":"1c9d6e55a22b15e7","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/1c9d6e55a22b15e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477504517,"stop":1670477505344,"duration":827}},{"uid":"e2691686dd6bc133","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/e2691686dd6bc133","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391106998,"stop":1670391107841,"duration":843}},{"uid":"12228f1c0cee396d","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/12228f1c0cee396d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304744285,"stop":1670304745154,"duration":869}}]},"tags":[]},"source":"36746a434b49aa0f.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}