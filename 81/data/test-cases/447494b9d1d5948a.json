{"uid":"447494b9d1d5948a","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1665641747499,"stop":1665641748185,"duration":686},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az154-518"},{"name":"thread","value":"2453-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":36,"skipped":0,"passed":0,"unknown":0,"total":36},"items":[{"uid":"92c639c8b2d5e0fe","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/92c639c8b2d5e0fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554518037,"stop":1665554519144,"duration":1107}},{"uid":"bf39591a2e36bd9b","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/bf39591a2e36bd9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469424945,"stop":1665469425630,"duration":685}},{"uid":"617e7914520a8264","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/617e7914520a8264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383172833,"stop":1665383173535,"duration":702}},{"uid":"7ed443d28d8bda10","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/7ed443d28d8bda10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294937307,"stop":1665294938183,"duration":876}},{"uid":"be2056d428ca2cad","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/be2056d428ca2cad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208226573,"stop":1665208227421,"duration":848}},{"uid":"7230d4ba99b7bbaf","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/7230d4ba99b7bbaf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122049034,"stop":1665122049724,"duration":690}},{"uid":"ee81d93f3900ac66","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/ee81d93f3900ac66","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035910618,"stop":1665035911318,"duration":700}},{"uid":"f9b25c69a60fc1a5","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/f9b25c69a60fc1a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949883410,"stop":1664949884115,"duration":705}},{"uid":"29372a2dff9433d4","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/29372a2dff9433d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863298676,"stop":1664863299377,"duration":701}},{"uid":"26035c202d327cbd","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/26035c202d327cbd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776770823,"stop":1664776771694,"duration":871}},{"uid":"6d06e544ae3cc431","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/6d06e544ae3cc431","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690401459,"stop":1664690402692,"duration":1233}},{"uid":"454a1e45253a4a89","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/454a1e45253a4a89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519869798,"stop":1664519870894,"duration":1096}},{"uid":"71722cb4923f2ae8","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/71722cb4923f2ae8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433550796,"stop":1664433551890,"duration":1094}},{"uid":"aa78990242c627a0","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/aa78990242c627a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346859264,"stop":1664346860129,"duration":865}},{"uid":"a7c8fb055c9fc728","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/a7c8fb055c9fc728","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260036418,"stop":1664260037275,"duration":857}},{"uid":"db83dfc83a005ec3","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/db83dfc83a005ec3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664174003162,"stop":1664174003855,"duration":693}},{"uid":"8459564ec9298d52","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/8459564ec9298d52","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085279759,"stop":1664085280629,"duration":870}},{"uid":"11243c6d4a0c79f8","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/11243c6d4a0c79f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999166565,"stop":1663999167695,"duration":1130}},{"uid":"6842a6672904dd0","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/6842a6672904dd0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914354526,"stop":1663914355215,"duration":689}},{"uid":"a108b2b6afc59a81","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/a108b2b6afc59a81","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828223444,"stop":1663828224309,"duration":865}}]},"tags":[]},"source":"447494b9d1d5948a.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}