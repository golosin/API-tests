{"uid":"7c4cf00a874fe73","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1671687102119,"stop":1671687102985,"duration":866},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az349-735"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":0,"unknown":0,"total":106},"items":[{"uid":"80e623e7645022d5","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/80e623e7645022d5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600697512,"stop":1671600698375,"duration":863}},{"uid":"b6592166474de415","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/b6592166474de415","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514308950,"stop":1671514309794,"duration":844}},{"uid":"7343f5ab7ac03382","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/7343f5ab7ac03382","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427930942,"stop":1671427932206,"duration":1264}},{"uid":"6f737f548590b9fd","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/6f737f548590b9fd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341523771,"stop":1671341525027,"duration":1256}},{"uid":"425d7b7bc68b62d","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/425d7b7bc68b62d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255112974,"stop":1671255113962,"duration":988}},{"uid":"e9ded5b3afc62dc6","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/e9ded5b3afc62dc6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168699880,"stop":1671168700752,"duration":872}},{"uid":"da252f48b50adac9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/da252f48b50adac9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082324781,"stop":1671082325841,"duration":1060}},{"uid":"cd22ebfcd0ac113b","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/cd22ebfcd0ac113b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995908666,"stop":1670995909703,"duration":1037}},{"uid":"efe27c5962bfbfc4","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/efe27c5962bfbfc4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909501883,"stop":1670909502728,"duration":845}},{"uid":"218ba1e6dc581828","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/218ba1e6dc581828","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823090642,"stop":1670823091470,"duration":828}},{"uid":"8d97f63118f6b5fc","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/8d97f63118f6b5fc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736694824,"stop":1670736695627,"duration":803}},{"uid":"ddfb1fbc317b1d26","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/ddfb1fbc317b1d26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650319280,"stop":1670650320523,"duration":1243}},{"uid":"42115714dd0f17b8","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/42115714dd0f17b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563899492,"stop":1670563900517,"duration":1025}},{"uid":"8ce09b35e243e1a8","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/8ce09b35e243e1a8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477493437,"stop":1670477494267,"duration":830}},{"uid":"fa859e4c25435331","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/fa859e4c25435331","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391095682,"stop":1670391096542,"duration":860}},{"uid":"fa6bc130d4d360e9","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/fa6bc130d4d360e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304732637,"stop":1670304733538,"duration":901}},{"uid":"58ca6553cdb85cd8","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/58ca6553cdb85cd8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218318076,"stop":1670218318948,"duration":872}},{"uid":"dc28eff28ed4a289","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/dc28eff28ed4a289","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131901637,"stop":1670131902678,"duration":1041}},{"uid":"748ef5358a7c2c51","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/748ef5358a7c2c51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045500132,"stop":1670045501048,"duration":916}},{"uid":"d9c7ae8eed48c920","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/d9c7ae8eed48c920","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959122637,"stop":1669959123658,"duration":1021}}]},"tags":[]},"source":"7c4cf00a874fe73.json","parameterValues":["'true'","'WILDBERRIES'"]}