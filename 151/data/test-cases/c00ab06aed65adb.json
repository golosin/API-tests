{"uid":"c00ab06aed65adb","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9686b075d72cff3ac6a1b4945e7576c7","time":{"start":1671687084898,"stop":1671687085742,"duration":844},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az349-735"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":0,"unknown":0,"total":106},"items":[{"uid":"81cd1319f8b4e2a3","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/81cd1319f8b4e2a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600680041,"stop":1671600680904,"duration":863}},{"uid":"61152313cb754971","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/61152313cb754971","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514291490,"stop":1671514292368,"duration":878}},{"uid":"d2746337d0595a75","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/d2746337d0595a75","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427905377,"stop":1671427906636,"duration":1259}},{"uid":"8b0d488d611005e2","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/8b0d488d611005e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341498461,"stop":1671341499746,"duration":1285}},{"uid":"872fa9d73d32701c","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/872fa9d73d32701c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255092693,"stop":1671255093703,"duration":1010}},{"uid":"668dd01b22a87993","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/668dd01b22a87993","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168680562,"stop":1671168681463,"duration":901}},{"uid":"e7de8b11d85cd7b9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/e7de8b11d85cd7b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082303876,"stop":1671082304928,"duration":1052}},{"uid":"c6b732f6f2104c9a","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/c6b732f6f2104c9a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995887515,"stop":1670995888498,"duration":983}},{"uid":"767e979568234c39","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/767e979568234c39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909484221,"stop":1670909485086,"duration":865}},{"uid":"f0561980dccfe78c","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/f0561980dccfe78c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823073800,"stop":1670823074623,"duration":823}},{"uid":"6056a9fb3fb35a2e","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/6056a9fb3fb35a2e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736678298,"stop":1670736679133,"duration":835}},{"uid":"16e83d76e4797802","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/16e83d76e4797802","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650294244,"stop":1670650295478,"duration":1234}},{"uid":"dc74dcfac8cc36f7","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/dc74dcfac8cc36f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563878836,"stop":1670563879953,"duration":1117}},{"uid":"70d1b53259a8fb6b","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/70d1b53259a8fb6b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477476504,"stop":1670477477342,"duration":838}},{"uid":"e2a3c1066d5b7153","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/e2a3c1066d5b7153","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391078163,"stop":1670391079010,"duration":847}},{"uid":"71da489283f9e84f","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/71da489283f9e84f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304714595,"stop":1670304715492,"duration":897}},{"uid":"1895cc04cac58561","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/1895cc04cac58561","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218300133,"stop":1670218301042,"duration":909}},{"uid":"9d098e86921affcd","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/9d098e86921affcd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131880838,"stop":1670131881877,"duration":1039}},{"uid":"d4d3deaf05da3344","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/d4d3deaf05da3344","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045482694,"stop":1670045483568,"duration":874}},{"uid":"8f4234eced3b1356","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/8f4234eced3b1356","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959101488,"stop":1669959102567,"duration":1079}}]},"tags":[]},"source":"c00ab06aed65adb.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","100","100"]}