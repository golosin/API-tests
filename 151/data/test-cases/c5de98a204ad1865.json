{"uid":"c5de98a204ad1865","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"3016b1aaaa2547594f9683d528f8f96b","time":{"start":1671687103828,"stop":1671687104667,"duration":839},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az349-735"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":0,"unknown":0,"total":106},"items":[{"uid":"f13c6502f036c02e","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/f13c6502f036c02e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600699291,"stop":1671600700120,"duration":829}},{"uid":"71d3b1567ce8d4c9","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/71d3b1567ce8d4c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514310650,"stop":1671514311491,"duration":841}},{"uid":"ac069c871fc54d80","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/ac069c871fc54d80","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427933502,"stop":1671427934763,"duration":1261}},{"uid":"6f660f5b505d25dc","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/6f660f5b505d25dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341526332,"stop":1671341527570,"duration":1238}},{"uid":"1922e0cc4818655c","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/1922e0cc4818655c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255114954,"stop":1671255115951,"duration":997}},{"uid":"9516e190b512a95","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/9516e190b512a95","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168701685,"stop":1671168702872,"duration":1187}},{"uid":"51d578ce6d88d0af","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/51d578ce6d88d0af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082326982,"stop":1671082328093,"duration":1111}},{"uid":"1b54010ba64c5b9d","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/1b54010ba64c5b9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995910732,"stop":1670995911729,"duration":997}},{"uid":"cc475e76cffe9b2","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/cc475e76cffe9b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909503613,"stop":1670909504474,"duration":861}},{"uid":"d780a4cd16897c7b","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/d780a4cd16897c7b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823092298,"stop":1670823093111,"duration":813}},{"uid":"5000ddc577a152fd","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/5000ddc577a152fd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736696472,"stop":1670736697281,"duration":809}},{"uid":"d2e6f54922c3e8af","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/d2e6f54922c3e8af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650321754,"stop":1670650322986,"duration":1232}},{"uid":"3aedfecd45f11433","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/3aedfecd45f11433","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563901542,"stop":1670563902560,"duration":1018}},{"uid":"ffaa6574dea72ca2","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/ffaa6574dea72ca2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477495139,"stop":1670477495977,"duration":838}},{"uid":"4cc3ebed91c4cdb7","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/4cc3ebed91c4cdb7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391097438,"stop":1670391098289,"duration":851}},{"uid":"7ed6435523d70bdd","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/7ed6435523d70bdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304734441,"stop":1670304735314,"duration":873}},{"uid":"c8df291472128391","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/c8df291472128391","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218319831,"stop":1670218320714,"duration":883}},{"uid":"b2865d98c40fd229","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/b2865d98c40fd229","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131903739,"stop":1670131904821,"duration":1082}},{"uid":"396e2cd1bf7be9a3","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/396e2cd1bf7be9a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045501906,"stop":1670045502754,"duration":848}},{"uid":"d5cc86b5ed9c7dee","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/d5cc86b5ed9c7dee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959124690,"stop":1669959125722,"duration":1032}}]},"tags":[]},"source":"c5de98a204ad1865.json","parameterValues":["'true'","'WILDBERRIES'","'priceStockRuleProducts'"]}