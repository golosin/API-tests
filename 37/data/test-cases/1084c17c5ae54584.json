{"uid":"1084c17c5ae54584","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"b1ad4e9b518d5e42ac697e9a109c8071","time":{"start":1662532731239,"stop":1662532732336,"duration":1097},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:35: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az504-37"},{"name":"thread","value":"2436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":6,"unknown":0,"total":8},"items":[{"uid":"f2135f32cc93e697","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/f2135f32cc93e697","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446452096,"stop":1662446452836,"duration":740}},{"uid":"5468dae6ee54c850","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/5468dae6ee54c850","status":"passed","time":{"start":1662359163552,"stop":1662359164785,"duration":1233}},{"uid":"26be7624e51f703d","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/26be7624e51f703d","status":"passed","time":{"start":1662270560498,"stop":1662270561846,"duration":1348}},{"uid":"e6ff9fa5fccf0e83","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/e6ff9fa5fccf0e83","status":"passed","time":{"start":1662184034477,"stop":1662184035972,"duration":1495}},{"uid":"429f8e6d16ca05da","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/429f8e6d16ca05da","status":"passed","time":{"start":1662099276471,"stop":1662099277917,"duration":1446}},{"uid":"a3ab7b42c04b4131","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/a3ab7b42c04b4131","status":"passed","time":{"start":1662012164816,"stop":1662012166507,"duration":1691}},{"uid":"6405b3349f7763fc","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/6405b3349f7763fc","status":"passed","time":{"start":1661928404457,"stop":1661928406151,"duration":1694}}]},"tags":[]},"source":"1084c17c5ae54584.json","parameterValues":["'WILDBERRIES'","None","2"]}