{"uid":"40a0bde6e718029","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"22a8adfe226d586632a94fd279a6e285","time":{"start":1662703607699,"stop":1662703608384,"duration":685},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nstock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az311-617"},{"name":"thread","value":"2409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":6,"unknown":0,"total":11},"items":[{"uid":"3c81210ae6767f0b","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/3c81210ae6767f0b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617715511,"stop":1662617716384,"duration":873}},{"uid":"22143f78dfc97f5b","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/22143f78dfc97f5b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617533792,"stop":1662617534473,"duration":681}},{"uid":"12d74fff2e53908d","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/12d74fff2e53908d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532737950,"stop":1662532739076,"duration":1126}},{"uid":"7d10e471f1cf7322","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/7d10e471f1cf7322","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446456448,"stop":1662446457155,"duration":707}},{"uid":"f462c8ff81acc964","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/f462c8ff81acc964","status":"passed","time":{"start":1662359170916,"stop":1662359172209,"duration":1293}},{"uid":"c3f802fb83437602","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/c3f802fb83437602","status":"passed","time":{"start":1662270568010,"stop":1662270569248,"duration":1238}},{"uid":"3bfbdbcc08a6c2d7","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/3bfbdbcc08a6c2d7","status":"passed","time":{"start":1662184043274,"stop":1662184044720,"duration":1446}},{"uid":"b9997748810467cd","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/b9997748810467cd","status":"passed","time":{"start":1662099285521,"stop":1662099286966,"duration":1445}},{"uid":"a89e1812584d018e","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/a89e1812584d018e","status":"passed","time":{"start":1662012175209,"stop":1662012176869,"duration":1660}},{"uid":"333e59092fe58826","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/333e59092fe58826","status":"passed","time":{"start":1661928415075,"stop":1661928416729,"duration":1654}}]},"tags":[]},"source":"40a0bde6e718029.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'","None","2"]}