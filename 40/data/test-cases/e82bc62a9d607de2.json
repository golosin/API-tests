{"uid":"e82bc62a9d607de2","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9686b075d72cff3ac6a1b4945e7576c7","time":{"start":1662703595271,"stop":1662703595968,"duration":697},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az311-617"},{"name":"thread","value":"2409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":6,"unknown":0,"total":11},"items":[{"uid":"195b000312ebc36a","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/195b000312ebc36a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617700423,"stop":1662617701294,"duration":871}},{"uid":"f9d8c3a868bd474f","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/f9d8c3a868bd474f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617521910,"stop":1662617522596,"duration":686}},{"uid":"1adbfaa451674c7f","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/1adbfaa451674c7f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532718910,"stop":1662532720016,"duration":1106}},{"uid":"c5ea0140ffd22508","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/c5ea0140ffd22508","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446444286,"stop":1662446444977,"duration":691}},{"uid":"10e55d9120011346","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/10e55d9120011346","status":"passed","time":{"start":1662359150681,"stop":1662359151708,"duration":1027}},{"uid":"1e9f6ff6718a169a","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/1e9f6ff6718a169a","status":"passed","time":{"start":1662270547338,"stop":1662270548438,"duration":1100}},{"uid":"f8eaf7167691a7f3","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/f8eaf7167691a7f3","status":"passed","time":{"start":1662184018590,"stop":1662184019829,"duration":1239}},{"uid":"56b99b4b5996c622","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/56b99b4b5996c622","status":"passed","time":{"start":1662099260866,"stop":1662099262120,"duration":1254}},{"uid":"cf08e7515cdf0328","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/cf08e7515cdf0328","status":"passed","time":{"start":1662012146180,"stop":1662012147769,"duration":1589}},{"uid":"fec7ce1262de3943","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/fec7ce1262de3943","status":"passed","time":{"start":1661928385993,"stop":1661928387553,"duration":1560}}]},"tags":[]},"source":"e82bc62a9d607de2.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","100","100"]}