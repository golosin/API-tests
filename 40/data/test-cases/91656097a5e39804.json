{"uid":"91656097a5e39804","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9f6fa07e70a4a150fa6581711b8b6490","time":{"start":1662703596818,"stop":1662703597553,"duration":735},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az311-617"},{"name":"thread","value":"2409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"None"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":6,"unknown":0,"total":11},"items":[{"uid":"13857548307de6e2","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/13857548307de6e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617702235,"stop":1662617703136,"duration":901}},{"uid":"247009e06087e91c","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/247009e06087e91c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617523326,"stop":1662617524002,"duration":676}},{"uid":"147410393f2382d7","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/147410393f2382d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532721125,"stop":1662532722215,"duration":1090}},{"uid":"b39c6515588e12f9","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/b39c6515588e12f9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446445688,"stop":1662446446387,"duration":699}},{"uid":"a6d0d0815d21c65c","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/a6d0d0815d21c65c","status":"passed","time":{"start":1662359153007,"stop":1662359154322,"duration":1315}},{"uid":"dc2abf04c09b8eda","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/dc2abf04c09b8eda","status":"passed","time":{"start":1662270549720,"stop":1662270550994,"duration":1274}},{"uid":"c745b717a477711b","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/c745b717a477711b","status":"passed","time":{"start":1662184021385,"stop":1662184023147,"duration":1762}},{"uid":"401456f8bff76b14","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/401456f8bff76b14","status":"passed","time":{"start":1662099263735,"stop":1662099265247,"duration":1512}},{"uid":"5e91635f08c2ba85","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/5e91635f08c2ba85","status":"passed","time":{"start":1662012149543,"stop":1662012151430,"duration":1887}},{"uid":"c1c515d28563b49a","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/c1c515d28563b49a","status":"passed","time":{"start":1661928389413,"stop":1661928391308,"duration":1895}}]},"tags":[]},"source":"91656097a5e39804.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","None","100"]}