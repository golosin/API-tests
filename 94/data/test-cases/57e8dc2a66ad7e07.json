{"uid":"57e8dc2a66ad7e07","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1666763269284,"stop":1666763270028,"duration":744},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az421-284"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":49,"skipped":0,"passed":0,"unknown":0,"total":49},"items":[{"uid":"9cf0cc1cbc026bf","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/9cf0cc1cbc026bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679847233,"stop":1666679847934,"duration":701}},{"uid":"6df566bea6501c46","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/6df566bea6501c46","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593704768,"stop":1666593705454,"duration":686}},{"uid":"d692cb632c04a4bf","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/d692cb632c04a4bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504791715,"stop":1666504792408,"duration":693}},{"uid":"ebeab3ffc65deb91","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/ebeab3ffc65deb91","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418279873,"stop":1666418280744,"duration":871}},{"uid":"3fd830a4cf4e8705","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/3fd830a4cf4e8705","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332230703,"stop":1666332231468,"duration":765}},{"uid":"4d5f28dd3186557f","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/4d5f28dd3186557f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245449083,"stop":1666245449777,"duration":694}},{"uid":"ec9b4bbd507297b5","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/ec9b4bbd507297b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161759326,"stop":1666161760013,"duration":687}},{"uid":"f0d9d2d097dfa415","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/f0d9d2d097dfa415","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075151996,"stop":1666075152678,"duration":682}},{"uid":"eb26f44c56a0e84e","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/eb26f44c56a0e84e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988660678,"stop":1665988661777,"duration":1099}},{"uid":"8e2e68d7c7bb0968","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/8e2e68d7c7bb0968","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899930137,"stop":1665899930830,"duration":693}},{"uid":"c41cf00363da08b1","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/c41cf00363da08b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813739279,"stop":1665813740148,"duration":869}},{"uid":"d529572aae6613b","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/d529572aae6613b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729131792,"stop":1665729132521,"duration":729}},{"uid":"e4305f3eefc59f0a","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/e4305f3eefc59f0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641741902,"stop":1665641742591,"duration":689}},{"uid":"9dca1875fb3aaedf","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/9dca1875fb3aaedf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554509138,"stop":1665554510245,"duration":1107}},{"uid":"5b9b2ce2b6c8c825","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/5b9b2ce2b6c8c825","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469419364,"stop":1665469420051,"duration":687}},{"uid":"770b3084a190c51c","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/770b3084a190c51c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383167024,"stop":1665383167734,"duration":710}},{"uid":"5e78e3d5cea83701","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/5e78e3d5cea83701","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294930323,"stop":1665294931181,"duration":858}},{"uid":"98019926f35bda5d","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/98019926f35bda5d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208219500,"stop":1665208220364,"duration":864}},{"uid":"9d90481b804e3e2e","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/9d90481b804e3e2e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122043480,"stop":1665122044160,"duration":680}},{"uid":"1751b651cb110a1f","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/1751b651cb110a1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035904935,"stop":1665035905642,"duration":707}}]},"tags":[]},"source":"57e8dc2a66ad7e07.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}