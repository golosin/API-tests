{"uid":"5feeef2470ee664d","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1666763265628,"stop":1666763266307,"duration":679},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az421-284"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":49,"skipped":0,"passed":0,"unknown":0,"total":49},"items":[{"uid":"f3ea1a1eb86a8de8","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/f3ea1a1eb86a8de8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679843747,"stop":1666679844436,"duration":689}},{"uid":"d27ca98de092b3f6","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/d27ca98de092b3f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593701329,"stop":1666593702010,"duration":681}},{"uid":"4f49116234cfa8e3","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/4f49116234cfa8e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504787889,"stop":1666504788774,"duration":885}},{"uid":"1458bb45f794abeb","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/1458bb45f794abeb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418275438,"stop":1666418276342,"duration":904}},{"uid":"71f11be1a8bf087e","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/71f11be1a8bf087e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332227119,"stop":1666332227860,"duration":741}},{"uid":"363723c22a756891","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/363723c22a756891","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245445454,"stop":1666245446156,"duration":702}},{"uid":"70950f9fecc12a4d","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/70950f9fecc12a4d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161755850,"stop":1666161756533,"duration":683}},{"uid":"9461397649475824","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/9461397649475824","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075148505,"stop":1666075149230,"duration":725}},{"uid":"d4cbe445155982c1","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/d4cbe445155982c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988655127,"stop":1665988656235,"duration":1108}},{"uid":"f9c40e9646d5e9a5","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/f9c40e9646d5e9a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899926542,"stop":1665899927287,"duration":745}},{"uid":"35dba5b2290863a4","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/35dba5b2290863a4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813734894,"stop":1665813735757,"duration":863}},{"uid":"394ffecf4c677bb6","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/394ffecf4c677bb6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729128192,"stop":1665729128911,"duration":719}},{"uid":"409d6a23bc5c965e","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/409d6a23bc5c965e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641738453,"stop":1665641739136,"duration":683}},{"uid":"ef477d3308833766","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/ef477d3308833766","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554503529,"stop":1665554504636,"duration":1107}},{"uid":"eecc69d3b3e2b8d7","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/eecc69d3b3e2b8d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469415868,"stop":1665469416567,"duration":699}},{"uid":"706fe091d70deaa7","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/706fe091d70deaa7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383163457,"stop":1665383164165,"duration":708}},{"uid":"718ef10c0654e8c9","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/718ef10c0654e8c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294925943,"stop":1665294926804,"duration":861}},{"uid":"9046498e91a6e2d5","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/9046498e91a6e2d5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208215062,"stop":1665208215924,"duration":862}},{"uid":"6a4e4dc0bfbb366f","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/6a4e4dc0bfbb366f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122040046,"stop":1665122040730,"duration":684}},{"uid":"8fdf5fe2b761b228","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/8fdf5fe2b761b228","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035901361,"stop":1665035902070,"duration":709}}]},"tags":[]},"source":"5feeef2470ee664d.json","parameterValues":["'true'","'WILDBERRIES'"]}