{"uid":"175dec7b31757042","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1666763266313,"stop":1666763266998,"duration":685},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az421-284"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":49,"skipped":0,"passed":0,"unknown":0,"total":49},"items":[{"uid":"4bb4ab5acbcce56c","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/4bb4ab5acbcce56c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679844442,"stop":1666679845151,"duration":709}},{"uid":"c968e497f7f86e84","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/c968e497f7f86e84","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593702017,"stop":1666593702702,"duration":685}},{"uid":"78d07e821f3b1449","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/78d07e821f3b1449","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504788780,"stop":1666504789506,"duration":726}},{"uid":"7a99946417b99f4a","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/7a99946417b99f4a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418276348,"stop":1666418277198,"duration":850}},{"uid":"c8fe65124521572e","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/c8fe65124521572e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332227866,"stop":1666332228563,"duration":697}},{"uid":"2b4bf44b5a304b97","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/2b4bf44b5a304b97","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245446163,"stop":1666245446866,"duration":703}},{"uid":"3037f7da1451f708","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/3037f7da1451f708","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161756540,"stop":1666161757230,"duration":690}},{"uid":"4a343118a3606be7","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/4a343118a3606be7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075149236,"stop":1666075149914,"duration":678}},{"uid":"52598d7097b65e83","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/52598d7097b65e83","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988656243,"stop":1665988657341,"duration":1098}},{"uid":"c92c80b45624b88b","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/c92c80b45624b88b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899927293,"stop":1665899927994,"duration":701}},{"uid":"6627b27710482316","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/6627b27710482316","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813735763,"stop":1665813736628,"duration":865}},{"uid":"48839c0a72dd1a2e","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/48839c0a72dd1a2e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729128917,"stop":1665729129610,"duration":693}},{"uid":"9787ba2e5c6aea2f","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/9787ba2e5c6aea2f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641739141,"stop":1665641739844,"duration":703}},{"uid":"f15600fec2ebeb65","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/f15600fec2ebeb65","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554504643,"stop":1665554505767,"duration":1124}},{"uid":"48aaf83a0b5c5843","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/48aaf83a0b5c5843","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469416573,"stop":1665469417253,"duration":680}},{"uid":"6adf35d2f3823015","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/6adf35d2f3823015","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383164171,"stop":1665383164877,"duration":706}},{"uid":"fa42f0f4a1ad3f4a","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/fa42f0f4a1ad3f4a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294926810,"stop":1665294927690,"duration":880}},{"uid":"5a95b737eb6485ab","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/5a95b737eb6485ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208215931,"stop":1665208216796,"duration":865}},{"uid":"6b789825ec726804","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/6b789825ec726804","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122040737,"stop":1665122041414,"duration":677}},{"uid":"2380b8dd64c12a49","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/2380b8dd64c12a49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035902075,"stop":1665035902800,"duration":725}}]},"tags":[]},"source":"175dec7b31757042.json","parameterValues":["'false'","'WILDBERRIES'"]}