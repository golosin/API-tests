{"uid":"606af229f4a8556c","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"b1ad4e9b518d5e42ac697e9a109c8071","time":{"start":1669959112988,"stop":1669959114000,"duration":1012},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az621-364"},{"name":"thread","value":"2486-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":86,"skipped":0,"passed":0,"unknown":0,"total":86},"items":[{"uid":"c5cbf773b1b91e1a","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/c5cbf773b1b91e1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872835893,"stop":1669872837018,"duration":1125}},{"uid":"9c092d6df95b8d28","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/9c092d6df95b8d28","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786391331,"stop":1669786392696,"duration":1365}},{"uid":"1cac7917125871c","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/1cac7917125871c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699960661,"stop":1669699961759,"duration":1098}},{"uid":"bc60217ad8c4bd49","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/bc60217ad8c4bd49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613554462,"stop":1669613555176,"duration":714}},{"uid":"ee4b9d4be61c76b4","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/ee4b9d4be61c76b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527102710,"stop":1669527103418,"duration":708}},{"uid":"692e75018ac82c0d","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/692e75018ac82c0d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440695668,"stop":1669440696373,"duration":705}},{"uid":"a0d3be590229d83","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/a0d3be590229d83","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354340199,"stop":1669354340891,"duration":692}},{"uid":"1c2e35fdbaedd239","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/1c2e35fdbaedd239","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267941472,"stop":1669267942155,"duration":683}},{"uid":"c3218ba32d959941","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/c3218ba32d959941","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181572497,"stop":1669181573839,"duration":1342}},{"uid":"ff0fb456a809ee8","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/ff0fb456a809ee8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095301286,"stop":1669095302059,"duration":773}},{"uid":"f0602ace7d8d9429","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/f0602ace7d8d9429","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008907286,"stop":1669008908409,"duration":1123}},{"uid":"dd4da4dbffd423bf","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/dd4da4dbffd423bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922462919,"stop":1668922464101,"duration":1182}},{"uid":"4671d87af9e92cee","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/4671d87af9e92cee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836036006,"stop":1668836037112,"duration":1106}},{"uid":"1b78635a4e817d48","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/1b78635a4e817d48","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749682507,"stop":1668749683410,"duration":903}},{"uid":"3bed4c29fead8f53","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/3bed4c29fead8f53","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663310862,"stop":1668663311804,"duration":942}},{"uid":"5cb39773596553c9","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/5cb39773596553c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576863591,"stop":1668576864478,"duration":887}},{"uid":"81357504ae6b10ce","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/81357504ae6b10ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490448170,"stop":1668490449113,"duration":943}},{"uid":"6d99d6a2e83ea10e","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/6d99d6a2e83ea10e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404577736,"stop":1668404578458,"duration":722}},{"uid":"214dfcab852b69da","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/214dfcab852b69da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317838116,"stop":1668317839225,"duration":1109}},{"uid":"ff8aa4efed816ba6","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/ff8aa4efed816ba6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231390346,"stop":1668231391108,"duration":762}}]},"tags":[]},"source":"606af229f4a8556c.json","parameterValues":["'WILDBERRIES'","None","2"]}