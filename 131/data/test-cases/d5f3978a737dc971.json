{"uid":"d5f3978a737dc971","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"f3cb77fc5d8b31fdee1c39f79b80f898","time":{"start":1669959135028,"stop":1669959136035,"duration":1007},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az621-364"},{"name":"thread","value":"2486-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":86,"skipped":0,"passed":0,"unknown":0,"total":86},"items":[{"uid":"64224a123d008d14","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/64224a123d008d14","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872859657,"stop":1669872860755,"duration":1098}},{"uid":"e0a2da47508c2f25","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/e0a2da47508c2f25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786415549,"stop":1669786416710,"duration":1161}},{"uid":"6244edac48b452f8","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/6244edac48b452f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699984102,"stop":1669699985269,"duration":1167}},{"uid":"6adfe20617945cb7","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/6adfe20617945cb7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613569473,"stop":1669613570219,"duration":746}},{"uid":"10eec5d1f5de8d8c","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/10eec5d1f5de8d8c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527117502,"stop":1669527118178,"duration":676}},{"uid":"cd31b488606f31a0","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/cd31b488606f31a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440710908,"stop":1669440711615,"duration":707}},{"uid":"c513b9091a1cbbd","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/c513b9091a1cbbd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354355010,"stop":1669354355702,"duration":692}},{"uid":"452761028b2bbf01","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/452761028b2bbf01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267956895,"stop":1669267957586,"duration":691}},{"uid":"5c537a9cc8621847","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/5c537a9cc8621847","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181601481,"stop":1669181603478,"duration":1997}},{"uid":"d90eeb7bb938cecd","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/d90eeb7bb938cecd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095322769,"stop":1669095323463,"duration":694}},{"uid":"6fe5281da96e455a","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/6fe5281da96e455a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008927591,"stop":1669008928695,"duration":1104}},{"uid":"ff31e49939bc3e7f","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/ff31e49939bc3e7f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922486710,"stop":1668922487826,"duration":1116}},{"uid":"1377b3af081ae93d","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/1377b3af081ae93d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836061794,"stop":1668836063075,"duration":1281}},{"uid":"1813dcab7602c4bd","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/1813dcab7602c4bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749701841,"stop":1668749702830,"duration":989}},{"uid":"3b6fa28b8fc77667","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/3b6fa28b8fc77667","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663332488,"stop":1668663333375,"duration":887}},{"uid":"31bb89fe6410a96b","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/31bb89fe6410a96b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576882971,"stop":1668576883844,"duration":873}},{"uid":"18d34c6eb96044f6","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/18d34c6eb96044f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490467451,"stop":1668490468334,"duration":883}},{"uid":"d7226fbfdc2ccbdd","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/d7226fbfdc2ccbdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404592948,"stop":1668404593680,"duration":732}},{"uid":"4ba5cf06d3f120e9","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/4ba5cf06d3f120e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317861917,"stop":1668317863031,"duration":1114}},{"uid":"c1418c75d8f9eb91","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/c1418c75d8f9eb91","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231405108,"stop":1668231405813,"duration":705}}]},"tags":[]},"source":"d5f3978a737dc971.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}