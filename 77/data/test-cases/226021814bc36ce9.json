{"uid":"226021814bc36ce9","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1665294928577,"stop":1665294929435,"duration":858},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az625-57"},{"name":"thread","value":"2499-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":32,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"1737c7a2b188f851","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/1737c7a2b188f851","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208217687,"stop":1665208218592,"duration":905}},{"uid":"f6bdd75a24bc8ebc","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/f6bdd75a24bc8ebc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122042109,"stop":1665122042784,"duration":675}},{"uid":"d8455314b5c6b496","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/d8455314b5c6b496","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035903525,"stop":1665035904221,"duration":696}},{"uid":"22577abea9cd56e3","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/22577abea9cd56e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949876430,"stop":1664949877113,"duration":683}},{"uid":"7e1f383815a0cbde","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/7e1f383815a0cbde","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863291701,"stop":1664863292386,"duration":685}},{"uid":"5abee57602d630fb","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/5abee57602d630fb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776761955,"stop":1664776762827,"duration":872}},{"uid":"561e1a46e568f642","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/561e1a46e568f642","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690390319,"stop":1664690391425,"duration":1106}},{"uid":"8c49e87d68867d0b","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/8c49e87d68867d0b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519858686,"stop":1664519859779,"duration":1093}},{"uid":"6e9309c568a57545","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/6e9309c568a57545","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433539639,"stop":1664433540737,"duration":1098}},{"uid":"8eb6c445ed089e86","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/8eb6c445ed089e86","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346850885,"stop":1664346851760,"duration":875}},{"uid":"692e4b15c049ef2b","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/692e4b15c049ef2b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260027594,"stop":1664260028476,"duration":882}},{"uid":"c8c5450ab41d205a","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/c8c5450ab41d205a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173996112,"stop":1664173996808,"duration":696}},{"uid":"468d62f235295ba7","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/468d62f235295ba7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085270804,"stop":1664085271683,"duration":879}},{"uid":"babb7483b379b87c","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/babb7483b379b87c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999155366,"stop":1663999156488,"duration":1122}},{"uid":"cd05d1b0e688e9d7","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/cd05d1b0e688e9d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914347478,"stop":1663914348165,"duration":687}},{"uid":"6068cf9b1f84d41e","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/6068cf9b1f84d41e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828214500,"stop":1663828215384,"duration":884}},{"uid":"1dd087b1761cc993","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/1dd087b1761cc993","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742173757,"stop":1663742174866,"duration":1109}},{"uid":"423374db0448e526","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/423374db0448e526","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655463829,"stop":1663655464712,"duration":883}},{"uid":"281fe66bc42a6f74","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/281fe66bc42a6f74","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569584643,"stop":1663569585319,"duration":676}},{"uid":"fd5f5ba0b7e38784","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/fd5f5ba0b7e38784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480484306,"stop":1663480485436,"duration":1130}}]},"tags":[]},"source":"226021814bc36ce9.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}