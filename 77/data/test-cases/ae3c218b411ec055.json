{"uid":"ae3c218b411ec055","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1665294929442,"stop":1665294930317,"duration":875},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az625-57"},{"name":"thread","value":"2499-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":32,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"a95757c15800cf9f","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/a95757c15800cf9f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208218601,"stop":1665208219492,"duration":891}},{"uid":"bd3f60ddca537784","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/bd3f60ddca537784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122042792,"stop":1665122043474,"duration":682}},{"uid":"8eae970c1160f8ca","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/8eae970c1160f8ca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035904228,"stop":1665035904929,"duration":701}},{"uid":"aa81c8285c7fc17c","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/aa81c8285c7fc17c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949877120,"stop":1664949877825,"duration":705}},{"uid":"f09ea6ab8dbfe490","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/f09ea6ab8dbfe490","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863292393,"stop":1664863293069,"duration":676}},{"uid":"28b7a6a246695b83","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/28b7a6a246695b83","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776762837,"stop":1664776763704,"duration":867}},{"uid":"24c8a5bc00cd232f","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/24c8a5bc00cd232f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690391434,"stop":1664690392532,"duration":1098}},{"uid":"79a0b4591adc23b9","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/79a0b4591adc23b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519859788,"stop":1664519860927,"duration":1139}},{"uid":"30e339beddb88be","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/30e339beddb88be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433540747,"stop":1664433541879,"duration":1132}},{"uid":"91850f779073bdb1","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/91850f779073bdb1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346851767,"stop":1664346852617,"duration":850}},{"uid":"f924523bc0b9d603","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/f924523bc0b9d603","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260028485,"stop":1664260029346,"duration":861}},{"uid":"dddc251eee3ba64","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/dddc251eee3ba64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173996816,"stop":1664173997514,"duration":698}},{"uid":"2ac52ec8576bf505","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/2ac52ec8576bf505","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085271690,"stop":1664085272599,"duration":909}},{"uid":"a93bff347f0823e9","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/a93bff347f0823e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999156498,"stop":1663999157600,"duration":1102}},{"uid":"ac81839c68fce537","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/ac81839c68fce537","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914348173,"stop":1663914348891,"duration":718}},{"uid":"8b0258bb75b76c5d","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/8b0258bb75b76c5d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828215390,"stop":1663828216302,"duration":912}},{"uid":"9fb0fc373dde3e38","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/9fb0fc373dde3e38","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742174875,"stop":1663742175994,"duration":1119}},{"uid":"aa475f8ee46149ee","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/aa475f8ee46149ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655464719,"stop":1663655465588,"duration":869}},{"uid":"ab90674728190af6","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/ab90674728190af6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569585326,"stop":1663569586014,"duration":688}},{"uid":"ea1ce04547d03576","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/ea1ce04547d03576","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480485444,"stop":1663480486562,"duration":1118}}]},"tags":[]},"source":"ae3c218b411ec055.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}