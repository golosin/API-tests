{"uid":"57b2b67c0fb91cab","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1671859897155,"stop":1671859897987,"duration":832},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az365-737"},{"name":"thread","value":"2508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":108,"skipped":0,"passed":0,"unknown":0,"total":108},"items":[{"uid":"bc17e472cba5f93a","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/bc17e472cba5f93a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773514180,"stop":1671773515306,"duration":1126}},{"uid":"450c7668cda99264","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/450c7668cda99264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687101247,"stop":1671687102111,"duration":864}},{"uid":"a350bf3e515fcaba","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/a350bf3e515fcaba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600696539,"stop":1671600697507,"duration":968}},{"uid":"57839861aaf9e263","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/57839861aaf9e263","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514308083,"stop":1671514308943,"duration":860}},{"uid":"ab915ad2a72414a9","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/ab915ad2a72414a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427929648,"stop":1671427930934,"duration":1286}},{"uid":"e69857e21b026581","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/e69857e21b026581","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341522518,"stop":1671341523763,"duration":1245}},{"uid":"fe812e9ff43d09fe","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/fe812e9ff43d09fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255111960,"stop":1671255112968,"duration":1008}},{"uid":"d4a4cc183d60e06d","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/d4a4cc183d60e06d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168699008,"stop":1671168699871,"duration":863}},{"uid":"f111bada8d3256c9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/f111bada8d3256c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082323733,"stop":1671082324774,"duration":1041}},{"uid":"b6255878ab7582d1","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/b6255878ab7582d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995907652,"stop":1670995908660,"duration":1008}},{"uid":"c21052cec57607d9","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/c21052cec57607d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909501003,"stop":1670909501875,"duration":872}},{"uid":"dc4ad325e6205fc1","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/dc4ad325e6205fc1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823089818,"stop":1670823090635,"duration":817}},{"uid":"e2cbda8c138f91c8","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/e2cbda8c138f91c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736694017,"stop":1670736694817,"duration":800}},{"uid":"bd6e03566b771394","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/bd6e03566b771394","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650318047,"stop":1670650319272,"duration":1225}},{"uid":"e2c5f0a70533f758","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/e2c5f0a70533f758","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563898482,"stop":1670563899486,"duration":1004}},{"uid":"897ae968412789cd","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/897ae968412789cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477492594,"stop":1670477493431,"duration":837}},{"uid":"74aee67590b24013","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/74aee67590b24013","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391094817,"stop":1670391095677,"duration":860}},{"uid":"344dd7035955c1f7","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/344dd7035955c1f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304731744,"stop":1670304732628,"duration":884}},{"uid":"c0d7a78d254834a5","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/c0d7a78d254834a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218317184,"stop":1670218318067,"duration":883}},{"uid":"ae1c2d9ec2e4b40c","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/ae1c2d9ec2e4b40c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131900600,"stop":1670131901630,"duration":1030}}]},"tags":[]},"source":"57b2b67c0fb91cab.json","parameterValues":["'false'","'FEED'"]}