{"uid":"c1418c75d8f9eb91","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"f3cb77fc5d8b31fdee1c39f79b80f898","time":{"start":1668231405108,"stop":1668231405813,"duration":705},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az201-614"},{"name":"thread","value":"2459-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":66,"skipped":0,"passed":0,"unknown":0,"total":66},"items":[{"uid":"65fb15675c0431ab","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/65fb15675c0431ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145244890,"stop":1668145245619,"duration":729}},{"uid":"c094df9b5759c9cb","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/c094df9b5759c9cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058948323,"stop":1668058949213,"duration":890}},{"uid":"2f9abcf8e2505724","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/2f9abcf8e2505724","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972726838,"stop":1667972727575,"duration":737}},{"uid":"249a5e7e548a06ba","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/249a5e7e548a06ba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886155030,"stop":1667886156139,"duration":1109}},{"uid":"14b1324903d54032","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/14b1324903d54032","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799857406,"stop":1667799858312,"duration":906}},{"uid":"1ebab691c7ae0320","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/1ebab691c7ae0320","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712882289,"stop":1667712883044,"duration":755}},{"uid":"d5309f89846cf389","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/d5309f89846cf389","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626485485,"stop":1667626486209,"duration":724}},{"uid":"6d00ea05a1736ee7","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/6d00ea05a1736ee7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540462757,"stop":1667540463634,"duration":877}},{"uid":"1260ebf15dbe8a4f","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/1260ebf15dbe8a4f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454022026,"stop":1667454022911,"duration":885}},{"uid":"93ce67d42eff26af","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/93ce67d42eff26af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368625812,"stop":1667368626523,"duration":711}},{"uid":"daec5d1eea3e3b9e","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/daec5d1eea3e3b9e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282443473,"stop":1667282444171,"duration":698}},{"uid":"1c828d808b5e8f2d","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/1c828d808b5e8f2d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195443740,"stop":1667195444602,"duration":862}},{"uid":"c64a6b0854663e82","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/c64a6b0854663e82","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108565735,"stop":1667108566598,"duration":863}},{"uid":"e85a52fd1ac034a7","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/e85a52fd1ac034a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022073912,"stop":1667022074847,"duration":935}},{"uid":"585520dec04e144f","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/585520dec04e144f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666936000834,"stop":1666936001720,"duration":886}},{"uid":"48d28bf85bce680b","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/48d28bf85bce680b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849495746,"stop":1666849496421,"duration":675}},{"uid":"f772d5d25399b4","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/f772d5d25399b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763274278,"stop":1666763275012,"duration":734}},{"uid":"34d245b26eb245cd","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/34d245b26eb245cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679852105,"stop":1666679852802,"duration":697}},{"uid":"ebc8c30f69bc3de3","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/ebc8c30f69bc3de3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593709620,"stop":1666593710301,"duration":681}},{"uid":"cc24f62de0b05fc6","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/cc24f62de0b05fc6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504796718,"stop":1666504797425,"duration":707}}]},"tags":[]},"source":"c1418c75d8f9eb91.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}