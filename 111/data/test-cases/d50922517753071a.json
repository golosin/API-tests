{"uid":"d50922517753071a","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"dcfc6f447ab1152a67e381672353f11e","time":{"start":1668231400929,"stop":1668231401621,"duration":692},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az201-614"},{"name":"thread","value":"2459-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":66,"skipped":0,"passed":0,"unknown":0,"total":66},"items":[{"uid":"4da5ed96c544ffa3","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/4da5ed96c544ffa3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145240248,"stop":1668145241289,"duration":1041}},{"uid":"60db5df0880b6aa2","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/60db5df0880b6aa2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058942942,"stop":1668058943829,"duration":887}},{"uid":"c942b08ea1ae5000","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/c942b08ea1ae5000","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972722512,"stop":1667972723211,"duration":699}},{"uid":"67a4f6747c11d3c0","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/67a4f6747c11d3c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886148445,"stop":1667886149528,"duration":1083}},{"uid":"1ce4c8a3e937e231","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/1ce4c8a3e937e231","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799852172,"stop":1667799853046,"duration":874}},{"uid":"cb7ce5bfa72521a5","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/cb7ce5bfa72521a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712877959,"stop":1667712878657,"duration":698}},{"uid":"4ad6eed46c99a4a4","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/4ad6eed46c99a4a4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626481133,"stop":1667626481844,"duration":711}},{"uid":"ade8734b88eafd26","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/ade8734b88eafd26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540457465,"stop":1667540458348,"duration":883}},{"uid":"13947d74d67b1930","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/13947d74d67b1930","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454016626,"stop":1667454017499,"duration":873}},{"uid":"7773f94e1742ea68","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/7773f94e1742ea68","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368621257,"stop":1667368621995,"duration":738}},{"uid":"1f988233fd4c53b9","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/1f988233fd4c53b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282439191,"stop":1667282439896,"duration":705}},{"uid":"df3baf553c532cd6","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/df3baf553c532cd6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195438490,"stop":1667195439344,"duration":854}},{"uid":"d9cdd83b402c3bc5","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/d9cdd83b402c3bc5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108560391,"stop":1667108561272,"duration":881}},{"uid":"9369012bdd33dcdc","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/9369012bdd33dcdc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022068437,"stop":1667022069375,"duration":938}},{"uid":"8c32c2e6c2e64096","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/8c32c2e6c2e64096","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935995337,"stop":1666935996221,"duration":884}},{"uid":"c7f00099af2771bd","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/c7f00099af2771bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849491525,"stop":1666849492209,"duration":684}},{"uid":"135d5e8a5ede8acf","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/135d5e8a5ede8acf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763270034,"stop":1666763270767,"duration":733}},{"uid":"7cfbbff16b4857aa","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/7cfbbff16b4857aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679847940,"stop":1666679848623,"duration":683}},{"uid":"23674f7d264aff89","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/23674f7d264aff89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593705462,"stop":1666593706142,"duration":680}},{"uid":"a83c3e2cbe8465ad","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/a83c3e2cbe8465ad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504792414,"stop":1666504793119,"duration":705}}]},"tags":[]},"source":"d50922517753071a.json","parameterValues":["'FEED'"]}