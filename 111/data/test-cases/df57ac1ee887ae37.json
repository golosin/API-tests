{"uid":"df57ac1ee887ae37","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1668231389629,"stop":1668231390327,"duration":698},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az201-614"},{"name":"thread","value":"2459-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":66,"skipped":0,"passed":0,"unknown":0,"total":66},"items":[{"uid":"b5578ab52ecbe63c","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/b5578ab52ecbe63c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145228682,"stop":1668145229364,"duration":682}},{"uid":"e86d7ace5e13b28","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/e86d7ace5e13b28","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058928549,"stop":1668058929428,"duration":879}},{"uid":"176c33b2b8b29fc2","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/176c33b2b8b29fc2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972710232,"stop":1667972711003,"duration":771}},{"uid":"8aecc1d95dc1614a","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/8aecc1d95dc1614a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886130835,"stop":1667886131917,"duration":1082}},{"uid":"a2e5d012d2c4b3a6","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/a2e5d012d2c4b3a6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799838252,"stop":1667799839113,"duration":861}},{"uid":"30b6f2aa138139e0","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/30b6f2aa138139e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712866665,"stop":1667712867359,"duration":694}},{"uid":"f9097a1955163ca3","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/f9097a1955163ca3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626469381,"stop":1667626470109,"duration":728}},{"uid":"ccf908c1373d5930","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/ccf908c1373d5930","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540443237,"stop":1667540444191,"duration":954}},{"uid":"1b3c624d666eabf","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/1b3c624d666eabf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454002276,"stop":1667454003169,"duration":893}},{"uid":"ebf30f584035bc40","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/ebf30f584035bc40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368609672,"stop":1667368610413,"duration":741}},{"uid":"31b2d1b8fc3cf1da","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/31b2d1b8fc3cf1da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282427702,"stop":1667282428428,"duration":726}},{"uid":"2fc3c98c12311316","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/2fc3c98c12311316","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195424293,"stop":1667195425175,"duration":882}},{"uid":"4c5bc6be5d652929","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/4c5bc6be5d652929","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108546162,"stop":1667108547061,"duration":899}},{"uid":"2c4dc0325f1cf341","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/2c4dc0325f1cf341","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022053904,"stop":1667022054856,"duration":952}},{"uid":"b83791e9208df4fb","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/b83791e9208df4fb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935980722,"stop":1666935981620,"duration":898}},{"uid":"f2f6bc0681564b71","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/f2f6bc0681564b71","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849480222,"stop":1666849480938,"duration":716}},{"uid":"6488593042da23a0","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/6488593042da23a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763258592,"stop":1666763259301,"duration":709}},{"uid":"9c42f39bea0e3685","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/9c42f39bea0e3685","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679836785,"stop":1666679837467,"duration":682}},{"uid":"ed27e7be7f611082","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/ed27e7be7f611082","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593694367,"stop":1666593695047,"duration":680}},{"uid":"58ec7bf6c8704c8e","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/58ec7bf6c8704c8e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504780525,"stop":1666504781224,"duration":699}}]},"tags":[]},"source":"df57ac1ee887ae37.json","parameterValues":["'WILDBERRIES'","2","None"]}