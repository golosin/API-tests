{"uid":"3611a6cb91a10d47","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1668231387487,"stop":1668231388196,"duration":709},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az201-614"},{"name":"thread","value":"2459-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":66,"skipped":0,"passed":0,"unknown":0,"total":66},"items":[{"uid":"8af9c7f804f03798","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/8af9c7f804f03798","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145226507,"stop":1668145227241,"duration":734}},{"uid":"2a1e4ff85878767c","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/2a1e4ff85878767c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058925883,"stop":1668058926772,"duration":889}},{"uid":"544620bfcd402c41","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/544620bfcd402c41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972707956,"stop":1667972708706,"duration":750}},{"uid":"6090942201d2d29b","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/6090942201d2d29b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886127530,"stop":1667886128614,"duration":1084}},{"uid":"880fa8c405630b07","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/880fa8c405630b07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799835605,"stop":1667799836495,"duration":890}},{"uid":"e96bbfe04768b786","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/e96bbfe04768b786","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712864534,"stop":1667712865232,"duration":698}},{"uid":"da05df5cd16d1944","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/da05df5cd16d1944","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626467173,"stop":1667626467937,"duration":764}},{"uid":"433275e6c5194264","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/433275e6c5194264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540440595,"stop":1667540441490,"duration":895}},{"uid":"eb2dae2705953bb4","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/eb2dae2705953bb4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667453999599,"stop":1667454000483,"duration":884}},{"uid":"fffa199e5bab83d5","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/fffa199e5bab83d5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368607512,"stop":1667368608214,"duration":702}},{"uid":"a855ea72c31e310d","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/a855ea72c31e310d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282425500,"stop":1667282426248,"duration":748}},{"uid":"66527e0e4ec6c767","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/66527e0e4ec6c767","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195421392,"stop":1667195422330,"duration":938}},{"uid":"761099a99e9b37c6","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/761099a99e9b37c6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108543470,"stop":1667108544374,"duration":904}},{"uid":"a3c343f91dc3ee05","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/a3c343f91dc3ee05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022051255,"stop":1667022052125,"duration":870}},{"uid":"8ff85ff2ad835550","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/8ff85ff2ad835550","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935977988,"stop":1666935978906,"duration":918}},{"uid":"31f9cb7392744af5","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/31f9cb7392744af5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849478009,"stop":1666849478690,"duration":681}},{"uid":"7b160893de20bd","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/7b160893de20bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763256523,"stop":1666763257210,"duration":687}},{"uid":"64d893900eebe51","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/64d893900eebe51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679834712,"stop":1666679835390,"duration":678}},{"uid":"cebad4c5305ad4c0","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/cebad4c5305ad4c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593692280,"stop":1666593692962,"duration":682}},{"uid":"1a218657bd003a77","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/1a218657bd003a77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504778380,"stop":1666504779120,"duration":740}}]},"tags":[]},"source":"3611a6cb91a10d47.json","parameterValues":["'FEED'","2","None"]}