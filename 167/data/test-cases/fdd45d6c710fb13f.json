{"uid":"fdd45d6c710fb13f","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1673069484361,"stop":1673069485245,"duration":884},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az444-247"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":122,"skipped":0,"passed":0,"unknown":0,"total":122},"items":[{"uid":"a3f6b8fd280948f9","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/a3f6b8fd280948f9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983087287,"stop":1672983088143,"duration":856}},{"uid":"bc224523f6dada8","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/bc224523f6dada8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896697601,"stop":1672896698862,"duration":1261}},{"uid":"adbabc36bd729d8","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/adbabc36bd729d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810307134,"stop":1672810308154,"duration":1020}},{"uid":"c6c173032e443f56","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/c6c173032e443f56","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723890172,"stop":1672723891024,"duration":852}},{"uid":"e067765cbf3cf7b1","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/e067765cbf3cf7b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637487439,"stop":1672637488314,"duration":875}},{"uid":"35fe9128a77c217b","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/35fe9128a77c217b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551081870,"stop":1672551082696,"duration":826}},{"uid":"b5a4957fe1828fff","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/b5a4957fe1828fff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464686135,"stop":1672464686970,"duration":835}},{"uid":"bab92e0ffe209fe4","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/bab92e0ffe209fe4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378303084,"stop":1672378304149,"duration":1065}},{"uid":"d264d219379019c","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/d264d219379019c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291891739,"stop":1672291892739,"duration":1000}},{"uid":"6cd517d2940ed6c6","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/6cd517d2940ed6c6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205486581,"stop":1672205487423,"duration":842}},{"uid":"5d89a05238897e16","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/5d89a05238897e16","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119097115,"stop":1672119098354,"duration":1239}},{"uid":"2abffa96cb34d4a7","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/2abffa96cb34d4a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032701857,"stop":1672032703032,"duration":1175}},{"uid":"be24b21ba6445b03","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/be24b21ba6445b03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946300883,"stop":1671946301705,"duration":822}},{"uid":"78db5bf09a6abe7d","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/78db5bf09a6abe7d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859886861,"stop":1671859887701,"duration":840}},{"uid":"c2d20ce274a39676","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/c2d20ce274a39676","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773500475,"stop":1671773501630,"duration":1155}},{"uid":"40a2ab16a61ad717","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/40a2ab16a61ad717","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687090946,"stop":1671687091786,"duration":840}},{"uid":"e78cef07488ef9ae","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/e78cef07488ef9ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600686101,"stop":1671600686984,"duration":883}},{"uid":"a8b120fecd824784","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/a8b120fecd824784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514297615,"stop":1671514298458,"duration":843}},{"uid":"6129e2ceb92441a","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/6129e2ceb92441a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427914285,"stop":1671427915557,"duration":1272}},{"uid":"4b567622617452cd","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/4b567622617452cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341507370,"stop":1671341508604,"duration":1234}}]},"tags":[]},"source":"fdd45d6c710fb13f.json","parameterValues":["'FEED'","2","None"]}