{"uid":"a6a7e61de4009557","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"1b207d3242a7f6cbcd15eeffe3f3477d","time":{"start":1671082333302,"stop":1671082334327,"duration":1025},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az616-154"},{"name":"thread","value":"2521-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":99,"skipped":0,"passed":0,"unknown":0,"total":99},"items":[{"uid":"f7557fbb920a88e9","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/f7557fbb920a88e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995917139,"stop":1670995918118,"duration":979}},{"uid":"558fb6447e77118","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/558fb6447e77118","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909508844,"stop":1670909509679,"duration":835}},{"uid":"2f77716a2e8beba6","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/2f77716a2e8beba6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823097322,"stop":1670823098142,"duration":820}},{"uid":"952e367bfeb3b1de","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/952e367bfeb3b1de","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736701377,"stop":1670736702199,"duration":822}},{"uid":"6afae13fef2bca26","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/6afae13fef2bca26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650329245,"stop":1670650330471,"duration":1226}},{"uid":"68323dbd968c9d6d","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/68323dbd968c9d6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563907712,"stop":1670563908726,"duration":1014}},{"uid":"5a22e39aad05684e","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/5a22e39aad05684e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477500295,"stop":1670477501114,"duration":819}},{"uid":"994c0f365663e45","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/994c0f365663e45","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391102675,"stop":1670391103577,"duration":902}},{"uid":"43b0091d6b559e0","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/43b0091d6b559e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304739852,"stop":1670304740736,"duration":884}},{"uid":"37fac732609916cc","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/37fac732609916cc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218325132,"stop":1670218326008,"duration":876}},{"uid":"c22f51b0741b585a","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/c22f51b0741b585a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131910240,"stop":1670131911256,"duration":1016}},{"uid":"7bb7f715cf5f1081","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/7bb7f715cf5f1081","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045507011,"stop":1670045507849,"duration":838}},{"uid":"1b512c4f1f565000","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/1b512c4f1f565000","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959130874,"stop":1669959131910,"duration":1036}},{"uid":"b71ed0c99249dd","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/b71ed0c99249dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872855132,"stop":1669872856232,"duration":1100}},{"uid":"5a173373fef093f2","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/5a173373fef093f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786411030,"stop":1669786412133,"duration":1103}},{"uid":"10c117593d76198d","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/10c117593d76198d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699979506,"stop":1669699980610,"duration":1104}},{"uid":"9713310a10e4cbb2","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/9713310a10e4cbb2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613566657,"stop":1669613567342,"duration":685}},{"uid":"9b7359c7830dc009","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/9b7359c7830dc009","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527114656,"stop":1669527115362,"duration":706}},{"uid":"280c0cb07f67e3f8","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/280c0cb07f67e3f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440708049,"stop":1669440708744,"duration":695}},{"uid":"2263a95ea53e4d64","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/2263a95ea53e4d64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354352197,"stop":1669354352911,"duration":714}}]},"tags":[]},"source":"a6a7e61de4009557.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}