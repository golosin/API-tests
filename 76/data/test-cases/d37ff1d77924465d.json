{"uid":"d37ff1d77924465d","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1665208206287,"stop":1665208207157,"duration":870},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az489-356"},{"name":"thread","value":"2411-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":31,"skipped":0,"passed":0,"unknown":0,"total":31},"items":[{"uid":"1403f3d2843256ca","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/1403f3d2843256ca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122033021,"stop":1665122033713,"duration":692}},{"uid":"3191c2d1ddddb207","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/3191c2d1ddddb207","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035894207,"stop":1665035894928,"duration":721}},{"uid":"834ac440152d8e2a","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/834ac440152d8e2a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949867392,"stop":1664949868072,"duration":680}},{"uid":"6aea545ff50fa0e9","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/6aea545ff50fa0e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863282663,"stop":1664863283355,"duration":692}},{"uid":"603416c1062e1ef1","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/603416c1062e1ef1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776750340,"stop":1664776751231,"duration":891}},{"uid":"2f96ddab08abec1b","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/2f96ddab08abec1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690375804,"stop":1664690376906,"duration":1102}},{"uid":"f426045ef3071c9a","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/f426045ef3071c9a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519844267,"stop":1664519845364,"duration":1097}},{"uid":"596d2ab49b1969dd","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/596d2ab49b1969dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433525162,"stop":1664433526271,"duration":1109}},{"uid":"dcec8f900f869d1","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/dcec8f900f869d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346839324,"stop":1664346840228,"duration":904}},{"uid":"278dba29a9d1d88f","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/278dba29a9d1d88f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260016149,"stop":1664260017019,"duration":870}},{"uid":"5aa76265730be782","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/5aa76265730be782","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173986853,"stop":1664173987571,"duration":718}},{"uid":"bdbb4670faaa60be","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/bdbb4670faaa60be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085259256,"stop":1664085260135,"duration":879}},{"uid":"32d7a3ac4be3d61c","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/32d7a3ac4be3d61c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999140875,"stop":1663999141978,"duration":1103}},{"uid":"dc36028097eab264","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/dc36028097eab264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914338357,"stop":1663914339100,"duration":743}},{"uid":"72b355a9cee0f444","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/72b355a9cee0f444","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828202745,"stop":1663828203673,"duration":928}},{"uid":"9f64b631a73206d9","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/9f64b631a73206d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742159107,"stop":1663742160202,"duration":1095}},{"uid":"a1065e19e6724cbb","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/a1065e19e6724cbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655452335,"stop":1663655453254,"duration":919}},{"uid":"5dd28a5dcc228a1a","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/5dd28a5dcc228a1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569575689,"stop":1663569576372,"duration":683}},{"uid":"69a7c1572c0f3a3b","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/69a7c1572c0f3a3b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480469771,"stop":1663480470871,"duration":1100}},{"uid":"cf9f94a842660bf6","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/cf9f94a842660bf6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393946988,"stop":1663393947855,"duration":867}}]},"tags":[]},"source":"d37ff1d77924465d.json","parameterValues":["'WILDBERRIES'","2","None"]}