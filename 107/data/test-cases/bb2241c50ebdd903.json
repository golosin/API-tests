{"uid":"bb2241c50ebdd903","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1667886146245,"stop":1667886147331,"duration":1086},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az203-943"},{"name":"thread","value":"2424-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":62,"skipped":0,"passed":0,"unknown":0,"total":62},"items":[{"uid":"de9a570945c73609","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/de9a570945c73609","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799850434,"stop":1667799851299,"duration":865}},{"uid":"467d62db86bb004c","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/467d62db86bb004c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712876558,"stop":1667712877261,"duration":703}},{"uid":"d840741607562342","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/d840741607562342","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626479705,"stop":1667626480407,"duration":702}},{"uid":"a4d6debd42ddf734","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/a4d6debd42ddf734","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540455655,"stop":1667540456543,"duration":888}},{"uid":"6568fe36c256ef61","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/6568fe36c256ef61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454014818,"stop":1667454015711,"duration":893}},{"uid":"383d3fb01e28b98d","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/383d3fb01e28b98d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368619829,"stop":1667368620535,"duration":706}},{"uid":"7b646c61b738e8f3","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/7b646c61b738e8f3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282437773,"stop":1667282438474,"duration":701}},{"uid":"f1d1e10dffa65f71","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/f1d1e10dffa65f71","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195436700,"stop":1667195437591,"duration":891}},{"uid":"a188a2869f99c000","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/a188a2869f99c000","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108558620,"stop":1667108559514,"duration":894}},{"uid":"a8a035212b2c2213","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/a8a035212b2c2213","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022066619,"stop":1667022067506,"duration":887}},{"uid":"17df6748a2598c78","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/17df6748a2598c78","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935993484,"stop":1666935994388,"duration":904}},{"uid":"bb0c54e2b9dafe85","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/bb0c54e2b9dafe85","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849490123,"stop":1666849490826,"duration":703}},{"uid":"bff1d58b8e661c03","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/bff1d58b8e661c03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763268510,"stop":1666763269278,"duration":768}},{"uid":"3c988c6adc168756","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/3c988c6adc168756","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679846547,"stop":1666679847227,"duration":680}},{"uid":"7eb4283352edf229","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/7eb4283352edf229","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593704080,"stop":1666593704760,"duration":680}},{"uid":"8b9b1a3dfcdad0c7","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/8b9b1a3dfcdad0c7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504790996,"stop":1666504791709,"duration":713}},{"uid":"1073371277a1088c","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/1073371277a1088c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418278979,"stop":1666418279868,"duration":889}},{"uid":"9b249219551ed4ba","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/9b249219551ed4ba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332229998,"stop":1666332230696,"duration":698}},{"uid":"2df76584ac77df25","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/2df76584ac77df25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245448386,"stop":1666245449076,"duration":690}},{"uid":"b5b0fa9096d8c3bb","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/b5b0fa9096d8c3bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161758628,"stop":1666161759319,"duration":691}}]},"tags":[]},"source":"bb2241c50ebdd903.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}