{"uid":"afd7231977cef6b8","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1667886139632,"stop":1667886140739,"duration":1107},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az203-943"},{"name":"thread","value":"2424-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":62,"skipped":0,"passed":0,"unknown":0,"total":62},"items":[{"uid":"36f217b471579a07","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/36f217b471579a07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799845202,"stop":1667799846111,"duration":909}},{"uid":"6917a1a0881f5248","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/6917a1a0881f5248","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712872299,"stop":1667712872986,"duration":687}},{"uid":"943528385f8500a7","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/943528385f8500a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626475162,"stop":1667626475944,"duration":782}},{"uid":"c3bdb049ea78dd6e","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/c3bdb049ea78dd6e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540450393,"stop":1667540451262,"duration":869}},{"uid":"8cc7136e54c7f20c","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/8cc7136e54c7f20c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454009465,"stop":1667454010385,"duration":920}},{"uid":"1a7872357ca4547","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/1a7872357ca4547","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368615482,"stop":1667368616198,"duration":716}},{"uid":"52d618c3045063ed","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/52d618c3045063ed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282433390,"stop":1667282434107,"duration":717}},{"uid":"3f694245548fba3d","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/3f694245548fba3d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195431411,"stop":1667195432289,"duration":878}},{"uid":"8c6fb3800b9c2bf","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/8c6fb3800b9c2bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108553298,"stop":1667108554167,"duration":869}},{"uid":"464166b3ccae93e6","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/464166b3ccae93e6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022061105,"stop":1667022062019,"duration":914}},{"uid":"a81b81f5f44469f5","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/a81b81f5f44469f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935988078,"stop":1666935988967,"duration":889}},{"uid":"2126ec60b5c7aad3","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/2126ec60b5c7aad3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849485900,"stop":1666849486580,"duration":680}},{"uid":"b12f588f51172d50","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/b12f588f51172d50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763264223,"stop":1666763264912,"duration":689}},{"uid":"e5d654c696c31cdd","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/e5d654c696c31cdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679842347,"stop":1666679843032,"duration":685}},{"uid":"318e9ebfef71c280","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/318e9ebfef71c280","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593699929,"stop":1666593700616,"duration":687}},{"uid":"9dcf6b61426c5f50","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/9dcf6b61426c5f50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504786245,"stop":1666504787117,"duration":872}},{"uid":"b4305b576f997519","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/b4305b576f997519","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418273680,"stop":1666418274553,"duration":873}},{"uid":"ab126258c2985daa","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/ab126258c2985daa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332225683,"stop":1666332226408,"duration":725}},{"uid":"b6fbcebfbdadcad5","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/b6fbcebfbdadcad5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245444050,"stop":1666245444746,"duration":696}},{"uid":"8bd8bd7f656483a9","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/8bd8bd7f656483a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161754458,"stop":1666161755161,"duration":703}}]},"tags":[]},"source":"afd7231977cef6b8.json","parameterValues":["'true'","'FEED'"]}