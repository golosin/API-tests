{"uid":"9a158e2670e6f811","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1669440693464,"stop":1669440694174,"duration":710},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az41-301"},{"name":"thread","value":"2360-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":80,"skipped":0,"passed":0,"unknown":0,"total":80},"items":[{"uid":"ef85baeedff63dfe","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/ef85baeedff63dfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354338007,"stop":1669354338790,"duration":783}},{"uid":"76e605dc347b63a1","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/76e605dc347b63a1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267939382,"stop":1669267940061,"duration":679}},{"uid":"8ea7752d1d3772bd","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/8ea7752d1d3772bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181568420,"stop":1669181570326,"duration":1906}},{"uid":"7b3b1171ab32a396","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/7b3b1171ab32a396","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095296997,"stop":1669095297726,"duration":729}},{"uid":"6161241fc44446c0","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/6161241fc44446c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008904330,"stop":1669008905270,"duration":940}},{"uid":"5d3d8289a449d8a6","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/5d3d8289a449d8a6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922459407,"stop":1668922460563,"duration":1156}},{"uid":"c01909609fa5dc77","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/c01909609fa5dc77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836032183,"stop":1668836033312,"duration":1129}},{"uid":"513cabb20745b016","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/513cabb20745b016","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749679638,"stop":1668749680697,"duration":1059}},{"uid":"683e3ee3124eb192","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/683e3ee3124eb192","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663306758,"stop":1668663307963,"duration":1205}},{"uid":"771fa2a7ff6659d8","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/771fa2a7ff6659d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576860884,"stop":1668576861808,"duration":924}},{"uid":"c156d604f8df6164","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/c156d604f8df6164","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490445483,"stop":1668490446388,"duration":905}},{"uid":"e7cb4574d8b201e","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/e7cb4574d8b201e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404575613,"stop":1668404576314,"duration":701}},{"uid":"87d7801c50794be","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/87d7801c50794be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317834682,"stop":1668317835824,"duration":1142}},{"uid":"b7e22696a61aab6c","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/b7e22696a61aab6c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231388203,"stop":1668231388900,"duration":697}},{"uid":"9f9e82914ddae07e","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/9f9e82914ddae07e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145227248,"stop":1668145227981,"duration":733}},{"uid":"5e59fc7706341f8b","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/5e59fc7706341f8b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058926781,"stop":1668058927663,"duration":882}},{"uid":"47685f8b13c8b02f","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/47685f8b13c8b02f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972708713,"stop":1667972709454,"duration":741}},{"uid":"76388a0934dea1d9","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/76388a0934dea1d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886128621,"stop":1667886129722,"duration":1101}},{"uid":"91824d3a6dec7dec","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/91824d3a6dec7dec","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799836500,"stop":1667799837374,"duration":874}},{"uid":"424d6f2b1e05779","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/424d6f2b1e05779","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712865240,"stop":1667712865947,"duration":707}}]},"tags":[]},"source":"9a158e2670e6f811.json","parameterValues":["'FEED'","None","2"]}