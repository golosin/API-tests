{"uid":"634ba7780ffabb50","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"f9ead6112a5139ded03988774bdd2dd2","time":{"start":1669440692015,"stop":1669440692728,"duration":713},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az41-301"},{"name":"thread","value":"2360-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":80,"skipped":0,"passed":0,"unknown":0,"total":80},"items":[{"uid":"cf119b69f33ad5b1","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/cf119b69f33ad5b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354336518,"stop":1669354337208,"duration":690}},{"uid":"b48ec8daa18d159c","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/b48ec8daa18d159c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267937985,"stop":1669267938668,"duration":683}},{"uid":"5dff7699243b548f","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/5dff7699243b548f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181564316,"stop":1669181565386,"duration":1070}},{"uid":"623c62d8fef396d6","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/623c62d8fef396d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095295583,"stop":1669095296286,"duration":703}},{"uid":"d55f9cec585d3739","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/d55f9cec585d3739","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008901949,"stop":1669008903421,"duration":1472}},{"uid":"5ecedcafc7993340","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/5ecedcafc7993340","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922457172,"stop":1668922458278,"duration":1106}},{"uid":"6fe91bf1bc607445","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/6fe91bf1bc607445","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836029694,"stop":1668836031059,"duration":1365}},{"uid":"3fc5a2eff89c5c09","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/3fc5a2eff89c5c09","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749677828,"stop":1668749678715,"duration":887}},{"uid":"3def973f81f863b8","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/3def973f81f863b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663304550,"stop":1668663305605,"duration":1055}},{"uid":"61b49ab3ecdfb712","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/61b49ab3ecdfb712","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576859093,"stop":1668576859972,"duration":879}},{"uid":"a6ecf6fe0a002954","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/a6ecf6fe0a002954","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490443686,"stop":1668490444576,"duration":890}},{"uid":"ca8bd1d5456f75b7","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/ca8bd1d5456f75b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404574164,"stop":1668404574900,"duration":736}},{"uid":"16515a22a2f5dbef","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/16515a22a2f5dbef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317832417,"stop":1668317833519,"duration":1102}},{"uid":"62e109ac3433d748","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/62e109ac3433d748","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231386784,"stop":1668231387480,"duration":696}},{"uid":"968aabc86dcd5cdd","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/968aabc86dcd5cdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145225762,"stop":1668145226499,"duration":737}},{"uid":"168c7addc2ce0dad","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/168c7addc2ce0dad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058924980,"stop":1668058925873,"duration":893}},{"uid":"cfa98294ee289be5","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/cfa98294ee289be5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972707182,"stop":1667972707949,"duration":767}},{"uid":"f7aae9ca339e20d3","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/f7aae9ca339e20d3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886126418,"stop":1667886127522,"duration":1104}},{"uid":"862486354576d0fc","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/862486354576d0fc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799834730,"stop":1667799835600,"duration":870}},{"uid":"27ee078e3fe914a3","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/27ee078e3fe914a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712863830,"stop":1667712864526,"duration":696}}]},"tags":[]},"source":"634ba7780ffabb50.json","parameterValues":["'FEED'","2","2"]}