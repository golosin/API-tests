{"uid":"35d90b06ed42915f","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"721fed86dac7424827c27c8f3be62f82","time":{"start":1668922481077,"stop":1668922482204,"duration":1127},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n            token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\n        elif representation == 'WILDBERRIES':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:31: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az502-625"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":74,"skipped":0,"passed":0,"unknown":0,"total":74},"items":[{"uid":"1ada03a795de9c4e","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/1ada03a795de9c4e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836055338,"stop":1668836056838,"duration":1500}},{"uid":"733d22d95707f2e3","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/733d22d95707f2e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749697091,"stop":1668749698076,"duration":985}},{"uid":"c69a5e12d1bf617c","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/c69a5e12d1bf617c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663327075,"stop":1668663327980,"duration":905}},{"uid":"f1f265a82c8362c0","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/f1f265a82c8362c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576878557,"stop":1668576879454,"duration":897}},{"uid":"2ea0cdb0df0bd992","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/2ea0cdb0df0bd992","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490462960,"stop":1668490463841,"duration":881}},{"uid":"56dfa2f4bf82ae52","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/56dfa2f4bf82ae52","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404589371,"stop":1668404590091,"duration":720}},{"uid":"3bfba6f98bfedcdd","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/3bfba6f98bfedcdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317856290,"stop":1668317857419,"duration":1129}},{"uid":"48c167d05ed9ba27","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/48c167d05ed9ba27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231401628,"stop":1668231402313,"duration":685}},{"uid":"bb74e24b1cb34f39","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/bb74e24b1cb34f39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145241296,"stop":1668145242005,"duration":709}},{"uid":"5656ab1d938d27e","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/5656ab1d938d27e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058943838,"stop":1668058944736,"duration":898}},{"uid":"2b2a7e708fb0e69e","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/2b2a7e708fb0e69e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972723219,"stop":1667972723925,"duration":706}},{"uid":"6d7e38d4ebc1c20e","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/6d7e38d4ebc1c20e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886149536,"stop":1667886150619,"duration":1083}},{"uid":"8becdde785374d96","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/8becdde785374d96","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799853050,"stop":1667799853910,"duration":860}},{"uid":"99a32f0380c5c13f","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/99a32f0380c5c13f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712878666,"stop":1667712879412,"duration":746}},{"uid":"a6db7afe8bef7224","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/a6db7afe8bef7224","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626481850,"stop":1667626482557,"duration":707}},{"uid":"70e9b245472e3fc4","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/70e9b245472e3fc4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540458356,"stop":1667540459208,"duration":852}},{"uid":"6ff4ff0f3c8f8d4","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/6ff4ff0f3c8f8d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454017508,"stop":1667454018398,"duration":890}},{"uid":"412eaa79a135b4fe","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/412eaa79a135b4fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368622002,"stop":1667368622818,"duration":816}},{"uid":"7abc3043ad1ac03c","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/7abc3043ad1ac03c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282439903,"stop":1667282440612,"duration":709}},{"uid":"a92cc66e51c1bfa1","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/a92cc66e51c1bfa1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195439351,"stop":1667195440231,"duration":880}}]},"tags":[]},"source":"35d90b06ed42915f.json","parameterValues":["'WILDBERRIES'"]}