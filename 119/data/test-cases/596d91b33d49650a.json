{"uid":"596d91b33d49650a","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1668922461687,"stop":1668922462900,"duration":1213},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az502-625"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":74,"skipped":0,"passed":0,"unknown":0,"total":74},"items":[{"uid":"e921a83a3d3bbe41","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/e921a83a3d3bbe41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836034445,"stop":1668836035986,"duration":1541}},{"uid":"33e24b05b59159ae","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/33e24b05b59159ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749681582,"stop":1668749682491,"duration":909}},{"uid":"9adff4218943be3a","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/9adff4218943be3a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663309978,"stop":1668663310847,"duration":869}},{"uid":"feeee01941a52c60","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/feeee01941a52c60","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576862689,"stop":1668576863576,"duration":887}},{"uid":"d4e7ee5e17889e96","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/d4e7ee5e17889e96","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490447284,"stop":1668490448151,"duration":867}},{"uid":"c8b19b65c8d0e96f","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/c8b19b65c8d0e96f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404577024,"stop":1668404577712,"duration":688}},{"uid":"ea59197dca81a527","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/ea59197dca81a527","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317836951,"stop":1668317838099,"duration":1148}},{"uid":"df57ac1ee887ae37","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/df57ac1ee887ae37","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231389629,"stop":1668231390327,"duration":698}},{"uid":"b5578ab52ecbe63c","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/b5578ab52ecbe63c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145228682,"stop":1668145229364,"duration":682}},{"uid":"e86d7ace5e13b28","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/e86d7ace5e13b28","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058928549,"stop":1668058929428,"duration":879}},{"uid":"176c33b2b8b29fc2","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/176c33b2b8b29fc2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972710232,"stop":1667972711003,"duration":771}},{"uid":"8aecc1d95dc1614a","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/8aecc1d95dc1614a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886130835,"stop":1667886131917,"duration":1082}},{"uid":"a2e5d012d2c4b3a6","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/a2e5d012d2c4b3a6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799838252,"stop":1667799839113,"duration":861}},{"uid":"30b6f2aa138139e0","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/30b6f2aa138139e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712866665,"stop":1667712867359,"duration":694}},{"uid":"f9097a1955163ca3","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/f9097a1955163ca3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626469381,"stop":1667626470109,"duration":728}},{"uid":"ccf908c1373d5930","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/ccf908c1373d5930","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540443237,"stop":1667540444191,"duration":954}},{"uid":"1b3c624d666eabf","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/1b3c624d666eabf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454002276,"stop":1667454003169,"duration":893}},{"uid":"ebf30f584035bc40","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/ebf30f584035bc40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368609672,"stop":1667368610413,"duration":741}},{"uid":"31b2d1b8fc3cf1da","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/31b2d1b8fc3cf1da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282427702,"stop":1667282428428,"duration":726}},{"uid":"2fc3c98c12311316","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/2fc3c98c12311316","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195424293,"stop":1667195425175,"duration":882}}]},"tags":[]},"source":"596d91b33d49650a.json","parameterValues":["'WILDBERRIES'","2","None"]}