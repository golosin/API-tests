{"uid":"8a77b924045eb113","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1668922474396,"stop":1668922475514,"duration":1118},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az502-625"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":74,"skipped":0,"passed":0,"unknown":0,"total":74},"items":[{"uid":"1b9ac20da789829","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/1b9ac20da789829","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836048193,"stop":1668836049296,"duration":1103}},{"uid":"ce8da125139770e8","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/ce8da125139770e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749691721,"stop":1668749692597,"duration":876}},{"uid":"f86512617a4390d","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/f86512617a4390d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663321208,"stop":1668663322140,"duration":932}},{"uid":"cc2b41eea7549b07","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/cc2b41eea7549b07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576872417,"stop":1668576873284,"duration":867}},{"uid":"35a6dac5b2657943","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/35a6dac5b2657943","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490457581,"stop":1668490458518,"duration":937}},{"uid":"b1be958109a0d10b","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/b1be958109a0d10b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404585041,"stop":1668404585737,"duration":696}},{"uid":"e83455fbece09092","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/e83455fbece09092","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317849450,"stop":1668317850582,"duration":1132}},{"uid":"f0a0f59d5dd0ca3f","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/f0a0f59d5dd0ca3f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231397439,"stop":1668231398134,"duration":695}},{"uid":"74e6185166a7bcbf","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/74e6185166a7bcbf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145236337,"stop":1668145237053,"duration":716}},{"uid":"6cfcc1a1ba3f4a1d","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/6cfcc1a1ba3f4a1d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058938525,"stop":1668058939395,"duration":870}},{"uid":"b1d927cde51f6780","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/b1d927cde51f6780","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972718775,"stop":1667972719603,"duration":828}},{"uid":"34d0c3a248efc0ab","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/34d0c3a248efc0ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886142933,"stop":1667886144015,"duration":1082}},{"uid":"c7fa2862c831afe4","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/c7fa2862c831afe4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799847832,"stop":1667799848698,"duration":866}},{"uid":"8725859770863ddf","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/8725859770863ddf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712874425,"stop":1667712875119,"duration":694}},{"uid":"34ca91175c048749","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/34ca91175c048749","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626477472,"stop":1667626478219,"duration":747}},{"uid":"16ef609a22881292","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/16ef609a22881292","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540453021,"stop":1667540453872,"duration":851}},{"uid":"8b3013c3224e5013","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/8b3013c3224e5013","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454012167,"stop":1667454013050,"duration":883}},{"uid":"87d1c1e23edc48f8","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/87d1c1e23edc48f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368617650,"stop":1667368618367,"duration":717}},{"uid":"87a2f426194a8912","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/87a2f426194a8912","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282435644,"stop":1667282436350,"duration":706}},{"uid":"571a929914176c0a","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/571a929914176c0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195434089,"stop":1667195434953,"duration":864}}]},"tags":[]},"source":"8a77b924045eb113.json","parameterValues":["'false'","'WILDBERRIES'"]}