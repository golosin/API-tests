{"uid":"12a0b99de52bd35c","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1673155899267,"stop":1673155900098,"duration":831},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az563-993"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":123,"skipped":0,"passed":0,"unknown":0,"total":123},"items":[{"uid":"d2ed61f0cd21f9e4","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/d2ed61f0cd21f9e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069499737,"stop":1673069500587,"duration":850}},{"uid":"6eecb2d080a66dc1","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/6eecb2d080a66dc1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983102573,"stop":1672983103413,"duration":840}},{"uid":"41af26c6e8453430","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/41af26c6e8453430","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896720282,"stop":1672896721505,"duration":1223}},{"uid":"4ecb8247eb72e442","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/4ecb8247eb72e442","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810325674,"stop":1672810326744,"duration":1070}},{"uid":"404dd8044216a389","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/404dd8044216a389","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723905710,"stop":1672723906559,"duration":849}},{"uid":"63c81ed68dd8b562","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/63c81ed68dd8b562","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637502704,"stop":1672637503544,"duration":840}},{"uid":"b1986828c19d0f52","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/b1986828c19d0f52","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551096575,"stop":1672551097368,"duration":793}},{"uid":"894e60dc01cc663e","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/894e60dc01cc663e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464701436,"stop":1672464702277,"duration":841}},{"uid":"65d3d1bf1ef9bb87","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/65d3d1bf1ef9bb87","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378322141,"stop":1672378323223,"duration":1082}},{"uid":"1f59d68669f2b27","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/1f59d68669f2b27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291910215,"stop":1672291911226,"duration":1011}},{"uid":"5f7871b8785a5e24","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/5f7871b8785a5e24","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205501724,"stop":1672205502565,"duration":841}},{"uid":"9c629f79e8b862c3","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/9c629f79e8b862c3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119119814,"stop":1672119121077,"duration":1263}},{"uid":"5389ea4a0f7bda47","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/5389ea4a0f7bda47","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032722836,"stop":1672032723937,"duration":1101}},{"uid":"79de29d1ca4f5509","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/79de29d1ca4f5509","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946315871,"stop":1671946316679,"duration":808}},{"uid":"e1ca0be44936a4c4","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/e1ca0be44936a4c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859902249,"stop":1671859903091,"duration":842}},{"uid":"2a6924c7977769e1","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/2a6924c7977769e1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773521092,"stop":1671773522198,"duration":1106}},{"uid":"a974c878c0ed1308","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/a974c878c0ed1308","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687106407,"stop":1671687107265,"duration":858}},{"uid":"238fd8ebb6f897b7","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/238fd8ebb6f897b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600701834,"stop":1671600702694,"duration":860}},{"uid":"36547bb7004a2e2f","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/36547bb7004a2e2f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514313204,"stop":1671514314062,"duration":858}},{"uid":"158543969a274f41","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/158543969a274f41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427937313,"stop":1671427938582,"duration":1269}}]},"tags":[]},"source":"12a0b99de52bd35c.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}