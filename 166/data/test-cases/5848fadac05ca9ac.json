{"uid":"5848fadac05ca9ac","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"89764c0620f8a4cd02275f46d5feb195","time":{"start":1672983107650,"stop":1672983108503,"duration":853},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n            token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\n        elif representation == 'WILDBERRIES':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][17]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:31: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az442-189"},{"name":"thread","value":"2497-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":121,"skipped":0,"passed":0,"unknown":0,"total":121},"items":[{"uid":"ff5eab74ba278d41","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/ff5eab74ba278d41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896727754,"stop":1672896728987,"duration":1233}},{"uid":"46dbd9de1ce032d7","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/46dbd9de1ce032d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810331865,"stop":1672810332886,"duration":1021}},{"uid":"8af3510336121688","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/8af3510336121688","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723910851,"stop":1672723911703,"duration":852}},{"uid":"dfd99f860679bde3","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/dfd99f860679bde3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637507777,"stop":1672637508618,"duration":841}},{"uid":"6925e4bcf88df0ce","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/6925e4bcf88df0ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551101454,"stop":1672551102259,"duration":805}},{"uid":"34ed386eacbe6f93","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/34ed386eacbe6f93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464706540,"stop":1672464707383,"duration":843}},{"uid":"25cc4f846dae627b","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/25cc4f846dae627b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378328531,"stop":1672378329578,"duration":1047}},{"uid":"3cca16a52b2b2375","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/3cca16a52b2b2375","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291916313,"stop":1672291917336,"duration":1023}},{"uid":"61aebc011c06724d","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/61aebc011c06724d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205506750,"stop":1672205507599,"duration":849}},{"uid":"a8ab2a14606c09f8","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/a8ab2a14606c09f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119127393,"stop":1672119128655,"duration":1262}},{"uid":"752eede4c484f7fe","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/752eede4c484f7fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032729594,"stop":1672032730712,"duration":1118}},{"uid":"2883e49ef115b74e","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/2883e49ef115b74e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946320821,"stop":1671946321641,"duration":820}},{"uid":"144c05359a72a785","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/144c05359a72a785","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859907330,"stop":1671859908179,"duration":849}},{"uid":"b737acacb21e01bb","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/b737acacb21e01bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773528032,"stop":1671773529150,"duration":1118}},{"uid":"235db1e0941d956b","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/235db1e0941d956b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687111555,"stop":1671687112386,"duration":831}},{"uid":"c158d86be93ff51b","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/c158d86be93ff51b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600707302,"stop":1671600708146,"duration":844}},{"uid":"3d7a547df9524e1f","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/3d7a547df9524e1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514318375,"stop":1671514319212,"duration":837}},{"uid":"a24c97c33218c826","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/a24c97c33218c826","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427944987,"stop":1671427946236,"duration":1249}},{"uid":"622879397f838bdb","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/622879397f838bdb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341537620,"stop":1671341538882,"duration":1262}},{"uid":"15eec5426e3658e8","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/15eec5426e3658e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255124078,"stop":1671255125110,"duration":1032}}]},"tags":[]},"source":"5848fadac05ca9ac.json","parameterValues":["'WILDBERRIES'"]}