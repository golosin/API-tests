{"uid":"47fdecb35a4e268f","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"f3cb77fc5d8b31fdee1c39f79b80f898","time":{"start":1672983108511,"stop":1672983109334,"duration":823},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az442-189"},{"name":"thread","value":"2497-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":121,"skipped":0,"passed":0,"unknown":0,"total":121},"items":[{"uid":"a1835dee640219c4","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/a1835dee640219c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896728995,"stop":1672896730217,"duration":1222}},{"uid":"6008da0288c71047","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/6008da0288c71047","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810332893,"stop":1672810333946,"duration":1053}},{"uid":"80bbf66a94507d85","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/80bbf66a94507d85","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723911713,"stop":1672723912568,"duration":855}},{"uid":"e90fdb129004138d","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/e90fdb129004138d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637508625,"stop":1672637509459,"duration":834}},{"uid":"b17861b621076cc2","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/b17861b621076cc2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551102267,"stop":1672551103074,"duration":807}},{"uid":"914f1e6cf59f2139","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/914f1e6cf59f2139","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464707391,"stop":1672464708260,"duration":869}},{"uid":"ef1dc0d67a7bbcf6","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/ef1dc0d67a7bbcf6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378329587,"stop":1672378330645,"duration":1058}},{"uid":"7294530ee318ce10","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/7294530ee318ce10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291917344,"stop":1672291918358,"duration":1014}},{"uid":"f9f0a6e7a1e03cf8","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/f9f0a6e7a1e03cf8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205507606,"stop":1672205508439,"duration":833}},{"uid":"38f56c1dc277e7da","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/38f56c1dc277e7da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119128665,"stop":1672119129923,"duration":1258}},{"uid":"4797c9a49ad9d1c4","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/4797c9a49ad9d1c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032730719,"stop":1672032731825,"duration":1106}},{"uid":"cc7492b9d60ae7f3","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/cc7492b9d60ae7f3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946321648,"stop":1671946322514,"duration":866}},{"uid":"518588055b564b18","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/518588055b564b18","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859908186,"stop":1671859909024,"duration":838}},{"uid":"a3c38f68641799cb","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/a3c38f68641799cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773529158,"stop":1671773530278,"duration":1120}},{"uid":"34a80f48f34a1feb","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/34a80f48f34a1feb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687112395,"stop":1671687113255,"duration":860}},{"uid":"8e14cef7527de7d7","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/8e14cef7527de7d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600708154,"stop":1671600708985,"duration":831}},{"uid":"a674792ad4b359ee","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/a674792ad4b359ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514319221,"stop":1671514320090,"duration":869}},{"uid":"42d68f2795de5dda","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/42d68f2795de5dda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427946245,"stop":1671427947551,"duration":1306}},{"uid":"6f8e1ff3a166883","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/6f8e1ff3a166883","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341538891,"stop":1671341540115,"duration":1224}},{"uid":"ccfe5dfdac90c9b5","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/ccfe5dfdac90c9b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255125118,"stop":1671255126111,"duration":993}}]},"tags":[]},"source":"47fdecb35a4e268f.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}