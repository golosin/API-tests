{"uid":"f0035779a85c5fde","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1666418266491,"stop":1666418267393,"duration":902},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az302-31"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":45,"skipped":0,"passed":0,"unknown":0,"total":45},"items":[{"uid":"da6cef453a831c9f","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/da6cef453a831c9f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332219791,"stop":1666332220518,"duration":727}},{"uid":"dcdeab6ffd7f2859","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/dcdeab6ffd7f2859","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245438170,"stop":1666245438901,"duration":731}},{"uid":"3a4c487e7ee2843","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/3a4c487e7ee2843","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161748926,"stop":1666161749598,"duration":672}},{"uid":"fa3050592d97628f","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/fa3050592d97628f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075141619,"stop":1666075142302,"duration":683}},{"uid":"9f76a3c80bdd87dc","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/9f76a3c80bdd87dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988644050,"stop":1665988645147,"duration":1097}},{"uid":"b63ecf6cc6dcc492","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/b63ecf6cc6dcc492","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899919059,"stop":1665899919801,"duration":742}},{"uid":"da1c44a2c760eccc","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/da1c44a2c760eccc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813726041,"stop":1665813726923,"duration":882}},{"uid":"dd0588f435e8533f","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/dd0588f435e8533f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729120236,"stop":1665729120932,"duration":696}},{"uid":"fe39fd835423fe4e","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/fe39fd835423fe4e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641731534,"stop":1665641732219,"duration":685}},{"uid":"be997e06542df904","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/be997e06542df904","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554492396,"stop":1665554493507,"duration":1111}},{"uid":"dfc5331c4c0e7763","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/dfc5331c4c0e7763","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469408843,"stop":1665469409531,"duration":688}},{"uid":"442c9b4502aaccfe","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/442c9b4502aaccfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383156173,"stop":1665383156886,"duration":713}},{"uid":"736e4def4cfb7281","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/736e4def4cfb7281","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294917187,"stop":1665294918054,"duration":867}},{"uid":"d37ff1d77924465d","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/d37ff1d77924465d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208206287,"stop":1665208207157,"duration":870}},{"uid":"1403f3d2843256ca","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/1403f3d2843256ca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122033021,"stop":1665122033713,"duration":692}},{"uid":"3191c2d1ddddb207","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/3191c2d1ddddb207","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035894207,"stop":1665035894928,"duration":721}},{"uid":"834ac440152d8e2a","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/834ac440152d8e2a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949867392,"stop":1664949868072,"duration":680}},{"uid":"6aea545ff50fa0e9","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/6aea545ff50fa0e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863282663,"stop":1664863283355,"duration":692}},{"uid":"603416c1062e1ef1","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/603416c1062e1ef1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776750340,"stop":1664776751231,"duration":891}},{"uid":"2f96ddab08abec1b","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/2f96ddab08abec1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690375804,"stop":1664690376906,"duration":1102}}]},"tags":[]},"source":"f0035779a85c5fde.json","parameterValues":["'WILDBERRIES'","2","None"]}