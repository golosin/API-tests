{"uid":"ecc8697c48afe552","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1665729118838,"stop":1665729119522,"duration":684},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az353-963"},{"name":"thread","value":"2434-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":37,"skipped":0,"passed":0,"unknown":0,"total":37},"items":[{"uid":"596e70db28465e49","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/596e70db28465e49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641730154,"stop":1665641730837,"duration":683}},{"uid":"dbe3d58c460bcc04","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/dbe3d58c460bcc04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554490136,"stop":1665554491267,"duration":1131}},{"uid":"88cb24d1adf98c17","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/88cb24d1adf98c17","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469407444,"stop":1665469408140,"duration":696}},{"uid":"2b442606b4968740","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2b442606b4968740","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383154743,"stop":1665383155459,"duration":716}},{"uid":"a37c55331f8db3f7","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/a37c55331f8db3f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294915467,"stop":1665294916315,"duration":848}},{"uid":"7eb51185fc5ffe0d","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/7eb51185fc5ffe0d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208204493,"stop":1665208205366,"duration":873}},{"uid":"756ba78681aa1657","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/756ba78681aa1657","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122031654,"stop":1665122032325,"duration":671}},{"uid":"ab63aa1a919b73f9","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/ab63aa1a919b73f9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035892778,"stop":1665035893483,"duration":705}},{"uid":"3b54b3e5b4297a22","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/3b54b3e5b4297a22","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949865993,"stop":1664949866693,"duration":700}},{"uid":"c9d9f0e40e2bde","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/c9d9f0e40e2bde","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863281302,"stop":1664863281982,"duration":680}},{"uid":"e0dd3671984b9784","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/e0dd3671984b9784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776748585,"stop":1664776749448,"duration":863}},{"uid":"4f21d260ffa5e8d1","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/4f21d260ffa5e8d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690373596,"stop":1664690374686,"duration":1090}},{"uid":"7dd3873d42f7393c","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/7dd3873d42f7393c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519842054,"stop":1664519843158,"duration":1104}},{"uid":"b2e566fb32a51f27","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/b2e566fb32a51f27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433522941,"stop":1664433524047,"duration":1106}},{"uid":"fd3de52d57ecf71e","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/fd3de52d57ecf71e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346837577,"stop":1664346838442,"duration":865}},{"uid":"11870d176abf40cc","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/11870d176abf40cc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260014408,"stop":1664260015279,"duration":871}},{"uid":"489a886ffae54a56","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/489a886ffae54a56","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173985395,"stop":1664173986111,"duration":716}},{"uid":"f0f0f0d0f6556b26","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/f0f0f0d0f6556b26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085257465,"stop":1664085258360,"duration":895}},{"uid":"5bbeb24e935dd1d6","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/5bbeb24e935dd1d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999138653,"stop":1663999139758,"duration":1105}},{"uid":"79b35830bb2af8ad","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/79b35830bb2af8ad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914336932,"stop":1663914337635,"duration":703}}]},"tags":[]},"source":"ecc8697c48afe552.json","parameterValues":["'FEED'","None","2"]}