{"uid":"9ba5879b2af3e16f","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1670995909711,"stop":1670995910725,"duration":1014},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az206-959"},{"name":"thread","value":"2416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":98,"skipped":0,"passed":0,"unknown":0,"total":98},"items":[{"uid":"e457d2eb87df60d0","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/e457d2eb87df60d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909502737,"stop":1670909503604,"duration":867}},{"uid":"60f32e7162dba909","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/60f32e7162dba909","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823091477,"stop":1670823092291,"duration":814}},{"uid":"bf6803fcd7aab0bb","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/bf6803fcd7aab0bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736695634,"stop":1670736696465,"duration":831}},{"uid":"2702b59259e55d33","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/2702b59259e55d33","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650320530,"stop":1670650321747,"duration":1217}},{"uid":"b38188695475ef03","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/b38188695475ef03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563900524,"stop":1670563901537,"duration":1013}},{"uid":"55f970c714bfd451","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/55f970c714bfd451","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477494274,"stop":1670477495132,"duration":858}},{"uid":"7dd7bedc32137334","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/7dd7bedc32137334","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391096549,"stop":1670391097433,"duration":884}},{"uid":"204ee302eef4b45c","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/204ee302eef4b45c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304733548,"stop":1670304734434,"duration":886}},{"uid":"623f168e1f32af24","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/623f168e1f32af24","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218318957,"stop":1670218319824,"duration":867}},{"uid":"bde7e6b59aa0ef85","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/bde7e6b59aa0ef85","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131902687,"stop":1670131903731,"duration":1044}},{"uid":"8091025d4c9be9d9","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/8091025d4c9be9d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045501054,"stop":1670045501900,"duration":846}},{"uid":"19778268ad7623bf","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/19778268ad7623bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959123664,"stop":1669959124685,"duration":1021}},{"uid":"e7f9d62e8b34c34f","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/e7f9d62e8b34c34f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872847282,"stop":1669872848415,"duration":1133}},{"uid":"30eab5619dc9cefd","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/30eab5619dc9cefd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786403052,"stop":1669786404153,"duration":1101}},{"uid":"6b46a032878ca3ab","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/6b46a032878ca3ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699971756,"stop":1669699972845,"duration":1089}},{"uid":"29c7435fa87756aa","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/29c7435fa87756aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613561687,"stop":1669613562436,"duration":749}},{"uid":"a2212b8c432c895b","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/a2212b8c432c895b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527109741,"stop":1669527110429,"duration":688}},{"uid":"ea398cd01e409d04","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/ea398cd01e409d04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440702825,"stop":1669440703535,"duration":710}},{"uid":"2e03d4afeaf81f42","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/2e03d4afeaf81f42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354347255,"stop":1669354347944,"duration":689}},{"uid":"9693cf47836b9e1b","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/9693cf47836b9e1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267948782,"stop":1669267949467,"duration":685}}]},"tags":[]},"source":"9ba5879b2af3e16f.json","parameterValues":["'false'","'WILDBERRIES'"]}