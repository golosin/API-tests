{"uid":"8f6dd78d5af05dae","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9f6fa07e70a4a150fa6581711b8b6490","time":{"start":1670995889610,"stop":1670995890659,"duration":1049},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az206-959"},{"name":"thread","value":"2416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"None"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":98,"skipped":0,"passed":0,"unknown":0,"total":98},"items":[{"uid":"390185ef068d31b8","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/390185ef068d31b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909485968,"stop":1670909486857,"duration":889}},{"uid":"e7eb360dc2508ecd","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/e7eb360dc2508ecd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823075515,"stop":1670823076319,"duration":804}},{"uid":"c275b8c8ae7540","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/c275b8c8ae7540","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736679983,"stop":1670736680791,"duration":808}},{"uid":"79d0b3c97a2d2105","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/79d0b3c97a2d2105","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650296756,"stop":1670650297971,"duration":1215}},{"uid":"61c4dd3ba6554ae9","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/61c4dd3ba6554ae9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563881037,"stop":1670563882058,"duration":1021}},{"uid":"3d21a6f68515c655","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/3d21a6f68515c655","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477478237,"stop":1670477479082,"duration":845}},{"uid":"a0f3a7b5f683d2d8","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/a0f3a7b5f683d2d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391079930,"stop":1670391080833,"duration":903}},{"uid":"1c77719837c8f93d","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/1c77719837c8f93d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304716425,"stop":1670304717306,"duration":881}},{"uid":"42b56e609459c695","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/42b56e609459c695","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218301972,"stop":1670218302858,"duration":886}},{"uid":"2bc2f62b58c5557b","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/2bc2f62b58c5557b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131882937,"stop":1670131883957,"duration":1020}},{"uid":"2aa01a60aab0040b","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/2aa01a60aab0040b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045484464,"stop":1670045485330,"duration":866}},{"uid":"9a3e303254df2662","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/9a3e303254df2662","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959103630,"stop":1669959104672,"duration":1042}},{"uid":"4dfefb6843398905","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/4dfefb6843398905","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872825801,"stop":1669872826897,"duration":1096}},{"uid":"d90ae1247c0ab338","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/d90ae1247c0ab338","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786380782,"stop":1669786381949,"duration":1167}},{"uid":"e48bbb4a7ad9a906","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/e48bbb4a7ad9a906","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699950678,"stop":1669699951795,"duration":1117}},{"uid":"a6916a8e6e734c12","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/a6916a8e6e734c12","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613548033,"stop":1669613548736,"duration":703}},{"uid":"2ce18f17fa39ad44","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/2ce18f17fa39ad44","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527096307,"stop":1669527097034,"duration":727}},{"uid":"1a249d64c50ab13","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/1a249d64c50ab13","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440689058,"stop":1669440689787,"duration":729}},{"uid":"f27f3367241c2804","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/f27f3367241c2804","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354333703,"stop":1669354334403,"duration":700}},{"uid":"c14961564a69781c","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/c14961564a69781c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267935174,"stop":1669267935868,"duration":694}}]},"tags":[]},"source":"8f6dd78d5af05dae.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","None","100"]}