{"uid":"2980522c658785aa","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1670995919150,"stop":1670995920152,"duration":1002},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az206-959"},{"name":"thread","value":"2416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":98,"skipped":0,"passed":0,"unknown":0,"total":98},"items":[{"uid":"88eabae872c6218d","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/88eabae872c6218d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909510570,"stop":1670909511422,"duration":852}},{"uid":"8b645088bde6c725","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/8b645088bde6c725","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823098970,"stop":1670823099799,"duration":829}},{"uid":"f4cb8ef78507241d","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/f4cb8ef78507241d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736703022,"stop":1670736703840,"duration":818}},{"uid":"5e13d308d8783e7e","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/5e13d308d8783e7e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650331737,"stop":1670650332957,"duration":1220}},{"uid":"77108ad8bf52280b","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/77108ad8bf52280b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563909807,"stop":1670563910822,"duration":1015}},{"uid":"20924911aa77a447","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/20924911aa77a447","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477501968,"stop":1670477502822,"duration":854}},{"uid":"1ed8496ffae331fe","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/1ed8496ffae331fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391104439,"stop":1670391105287,"duration":848}},{"uid":"7fbb290c484f7866","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/7fbb290c484f7866","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304741625,"stop":1670304742529,"duration":904}},{"uid":"e5950f0db8f837de","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/e5950f0db8f837de","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218326891,"stop":1670218327784,"duration":893}},{"uid":"2dacb9defe22fdc5","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/2dacb9defe22fdc5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131912321,"stop":1670131913373,"duration":1052}},{"uid":"a5018d2909bd3d0e","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/a5018d2909bd3d0e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045508714,"stop":1670045509555,"duration":841}},{"uid":"b047310855ad6af9","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/b047310855ad6af9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959132926,"stop":1669959133949,"duration":1023}},{"uid":"a6451b6904318fa5","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/a6451b6904318fa5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872857374,"stop":1669872858502,"duration":1128}},{"uid":"5683c0c9fe1d75c","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/5683c0c9fe1d75c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786413258,"stop":1669786414372,"duration":1114}},{"uid":"f2fc70fa784c0fb5","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/f2fc70fa784c0fb5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699981732,"stop":1669699982869,"duration":1137}},{"uid":"31cd0210e2564d88","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/31cd0210e2564d88","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613568055,"stop":1669613568751,"duration":696}},{"uid":"ebdedf840ed48a72","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/ebdedf840ed48a72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527116106,"stop":1669527116798,"duration":692}},{"uid":"e45705035ea46685","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/e45705035ea46685","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440709485,"stop":1669440710200,"duration":715}},{"uid":"b61d73b772da675b","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/b61d73b772da675b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354353611,"stop":1669354354299,"duration":688}},{"uid":"62d4926a8c0434d2","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/62d4926a8c0434d2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267955307,"stop":1669267955994,"duration":687}}]},"tags":[]},"source":"2980522c658785aa.json","parameterValues":["'FEED'"]}