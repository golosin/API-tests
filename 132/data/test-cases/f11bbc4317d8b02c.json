{"uid":"f11bbc4317d8b02c","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1670045511261,"stop":1670045512101,"duration":840},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az545-99"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":87,"skipped":0,"passed":0,"unknown":0,"total":87},"items":[{"uid":"302b895c893f3cda","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/302b895c893f3cda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959136042,"stop":1669959137094,"duration":1052}},{"uid":"b11d0e9c5a235b05","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/b11d0e9c5a235b05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872860764,"stop":1669872861892,"duration":1128}},{"uid":"81b556946e4ca3d6","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/81b556946e4ca3d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786416718,"stop":1669786417855,"duration":1137}},{"uid":"5c8947e3ee3d8b5a","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/5c8947e3ee3d8b5a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699985277,"stop":1669699986500,"duration":1223}},{"uid":"c27fd808def40d61","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/c27fd808def40d61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613570228,"stop":1669613570917,"duration":689}},{"uid":"e5368a564ba1db00","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/e5368a564ba1db00","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527118189,"stop":1669527118870,"duration":681}},{"uid":"e2d50f2f071796b7","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/e2d50f2f071796b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440711623,"stop":1669440712329,"duration":706}},{"uid":"b60d793571c54353","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/b60d793571c54353","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354355712,"stop":1669354356415,"duration":703}},{"uid":"e8b78c47596639a3","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/e8b78c47596639a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267957594,"stop":1669267958287,"duration":693}},{"uid":"4bbe469fa6969964","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/4bbe469fa6969964","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181603487,"stop":1669181605196,"duration":1709}},{"uid":"acc99955c5544531","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/acc99955c5544531","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095323479,"stop":1669095324197,"duration":718}},{"uid":"8dc50022d85454c8","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/8dc50022d85454c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008928706,"stop":1669008929600,"duration":894}},{"uid":"e86f29daaadefe01","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/e86f29daaadefe01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922487835,"stop":1668922488939,"duration":1104}},{"uid":"78b1dae20c19dfe0","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/78b1dae20c19dfe0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836063084,"stop":1668836064212,"duration":1128}},{"uid":"fdbbbfa5b39cd967","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/fdbbbfa5b39cd967","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749702838,"stop":1668749704751,"duration":1913}},{"uid":"3be6eb707c8d8601","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/3be6eb707c8d8601","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663333383,"stop":1668663334244,"duration":861}},{"uid":"9f7928a07e0d47d4","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/9f7928a07e0d47d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576883851,"stop":1668576884748,"duration":897}},{"uid":"fb454b8c2243fdb8","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/fb454b8c2243fdb8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490468343,"stop":1668490469218,"duration":875}},{"uid":"c32eddd303958d5e","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/c32eddd303958d5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404593690,"stop":1668404594396,"duration":706}},{"uid":"685f189e23dc1ee","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/685f189e23dc1ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317863041,"stop":1668317864145,"duration":1104}}]},"tags":[]},"source":"f11bbc4317d8b02c.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}