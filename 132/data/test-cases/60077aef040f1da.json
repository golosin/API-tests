{"uid":"60077aef040f1da","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"2123d06f5e8568dabdf52ca04ea00773","time":{"start":1670045483598,"stop":1670045484458,"duration":860},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = None, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az545-99"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":87,"skipped":0,"passed":0,"unknown":0,"total":87},"items":[{"uid":"26c00978f7e085b1","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/26c00978f7e085b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959102597,"stop":1669959103624,"duration":1027}},{"uid":"804879ec7f99e022","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/804879ec7f99e022","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872824685,"stop":1669872825794,"duration":1109}},{"uid":"b7d24d1d896323b6","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/b7d24d1d896323b6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786379650,"stop":1669786380775,"duration":1125}},{"uid":"77f02f120ad8365","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/77f02f120ad8365","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699949576,"stop":1669699950672,"duration":1096}},{"uid":"84ffc95f44834e27","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/84ffc95f44834e27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613547334,"stop":1669613548023,"duration":689}},{"uid":"21a3762094e15aa8","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/21a3762094e15aa8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527095598,"stop":1669527096299,"duration":701}},{"uid":"69e9aa1dc3a934cb","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/69e9aa1dc3a934cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440688321,"stop":1669440689051,"duration":730}},{"uid":"4cfaee1524d257da","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/4cfaee1524d257da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354333009,"stop":1669354333694,"duration":685}},{"uid":"675f0ef3203fb346","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/675f0ef3203fb346","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267934463,"stop":1669267935167,"duration":704}},{"uid":"2d04309c7aacc0ef","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/2d04309c7aacc0ef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181556259,"stop":1669181557492,"duration":1233}},{"uid":"a5dadf42b92c10c4","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/a5dadf42b92c10c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095289347,"stop":1669095290038,"duration":691}},{"uid":"dee4c53a9372d1a3","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/dee4c53a9372d1a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008897247,"stop":1669008898156,"duration":909}},{"uid":"2c620953da7a3ee2","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/2c620953da7a3ee2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922451462,"stop":1668922452612,"duration":1150}},{"uid":"32e43fd9e7827d3c","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/32e43fd9e7827d3c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836023818,"stop":1668836025101,"duration":1283}},{"uid":"80df776d4cde134a","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/80df776d4cde134a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749672886,"stop":1668749673815,"duration":929}},{"uid":"15c9595b151c81d0","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/15c9595b151c81d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663298811,"stop":1668663299674,"duration":863}},{"uid":"9d7e9ac2a700006a","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/9d7e9ac2a700006a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576854477,"stop":1668576855395,"duration":918}},{"uid":"a6426409137471ab","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/a6426409137471ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490439015,"stop":1668490439920,"duration":905}},{"uid":"e6fc05ebcb8cbb50","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/e6fc05ebcb8cbb50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404570603,"stop":1668404571304,"duration":701}},{"uid":"814f33864f916fc9","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/814f33864f916fc9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317826761,"stop":1668317827864,"duration":1103}}]},"tags":[]},"source":"60077aef040f1da.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","100","None"]}