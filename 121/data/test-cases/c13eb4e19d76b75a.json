{"uid":"c13eb4e19d76b75a","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1669095310364,"stop":1669095311066,"duration":702},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az241-751"},{"name":"thread","value":"2462-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":76,"skipped":0,"passed":0,"unknown":0,"total":76},"items":[{"uid":"e6664ff784f8eda","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/e6664ff784f8eda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008915003,"stop":1669008915875,"duration":872}},{"uid":"a18245e0c1e7557a","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/a18245e0c1e7557a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922472148,"stop":1668922473259,"duration":1111}},{"uid":"996bfb0b6086cae2","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/996bfb0b6086cae2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836045894,"stop":1668836047024,"duration":1130}},{"uid":"346451eacc7551c2","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/346451eacc7551c2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749689909,"stop":1668749690834,"duration":925}},{"uid":"459976c6863eb3d1","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/459976c6863eb3d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663319328,"stop":1668663320285,"duration":957}},{"uid":"9101e2b3e95b8c18","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/9101e2b3e95b8c18","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576870678,"stop":1668576871547,"duration":869}},{"uid":"9f28375c5838bf0b","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/9f28375c5838bf0b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490455711,"stop":1668490456663,"duration":952}},{"uid":"f83c04c6965d0d09","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/f83c04c6965d0d09","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404583584,"stop":1668404584294,"duration":710}},{"uid":"e788f017f0c7264","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/e788f017f0c7264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317847161,"stop":1668317848291,"duration":1130}},{"uid":"6b9c80a5e2b466ae","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/6b9c80a5e2b466ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231396003,"stop":1668231396687,"duration":684}},{"uid":"1c3216c3a3b7cb9b","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/1c3216c3a3b7cb9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145234955,"stop":1668145235640,"duration":685}},{"uid":"f884aecf0f7392b9","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/f884aecf0f7392b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058936646,"stop":1668058937555,"duration":909}},{"uid":"5740fe93ed03a8b7","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/5740fe93ed03a8b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972717245,"stop":1667972717963,"duration":718}},{"uid":"41b986a7c483a8de","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/41b986a7c483a8de","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886140745,"stop":1667886141823,"duration":1078}},{"uid":"b314b62fa0b1e6b9","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/b314b62fa0b1e6b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799846116,"stop":1667799846967,"duration":851}},{"uid":"81baf79a40860eb2","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/81baf79a40860eb2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712872995,"stop":1667712873699,"duration":704}},{"uid":"ea7a500197df4f8f","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/ea7a500197df4f8f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626475950,"stop":1667626476696,"duration":746}},{"uid":"a825c31e84369392","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/a825c31e84369392","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540451268,"stop":1667540452144,"duration":876}},{"uid":"a3cd19cbca622b89","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/a3cd19cbca622b89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454010394,"stop":1667454011261,"duration":867}},{"uid":"889994897641175f","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/889994897641175f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368616203,"stop":1667368616918,"duration":715}}]},"tags":[]},"source":"c13eb4e19d76b75a.json","parameterValues":["'false'","'FEED'"]}