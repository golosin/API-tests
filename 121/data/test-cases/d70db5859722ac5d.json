{"uid":"d70db5859722ac5d","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1669095313616,"stop":1669095314351,"duration":735},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az241-751"},{"name":"thread","value":"2462-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":76,"skipped":0,"passed":0,"unknown":0,"total":76},"items":[{"uid":"a98919d22791165e","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/a98919d22791165e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008918765,"stop":1669008919628,"duration":863}},{"uid":"c8328594855f9073","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/c8328594855f9073","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922476627,"stop":1668922477722,"duration":1095}},{"uid":"3b743a0e3fc27196","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/3b743a0e3fc27196","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836050414,"stop":1668836051557,"duration":1143}},{"uid":"aa9891ad737a89e4","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/aa9891ad737a89e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749693500,"stop":1668749694374,"duration":874}},{"uid":"afb3b68eac46ced2","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/afb3b68eac46ced2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663323456,"stop":1668663324346,"duration":890}},{"uid":"5973ddea44f098ba","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/5973ddea44f098ba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576874179,"stop":1668576875168,"duration":989}},{"uid":"d172196b705e202","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/d172196b705e202","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490459416,"stop":1668490460294,"duration":878}},{"uid":"a8f90f537f0f47c9","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/a8f90f537f0f47c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404586489,"stop":1668404587201,"duration":712}},{"uid":"52b41b851b49fa04","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/52b41b851b49fa04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317851714,"stop":1668317852834,"duration":1120}},{"uid":"b8b706669cc6aa6d","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/b8b706669cc6aa6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231398828,"stop":1668231399535,"duration":707}},{"uid":"4cf9c09bc9e5a194","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/4cf9c09bc9e5a194","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145237837,"stop":1668145238519,"duration":682}},{"uid":"ea5fc519637af40d","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/ea5fc519637af40d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058940295,"stop":1668058941169,"duration":874}},{"uid":"399e0075a502ca50","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/399e0075a502ca50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972720329,"stop":1667972721041,"duration":712}},{"uid":"5ee7a1f669e2d3c8","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/5ee7a1f669e2d3c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886145137,"stop":1667886146237,"duration":1100}},{"uid":"a6bc2406843512f6","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/a6bc2406843512f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799849569,"stop":1667799850429,"duration":860}},{"uid":"52e82fcb7b97e964","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/52e82fcb7b97e964","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712875843,"stop":1667712876550,"duration":707}},{"uid":"61800a4d0a57847e","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/61800a4d0a57847e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626478967,"stop":1667626479699,"duration":732}},{"uid":"46f4b2d7fc8452bf","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/46f4b2d7fc8452bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540454748,"stop":1667540455648,"duration":900}},{"uid":"7a07a04823eb5894","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/7a07a04823eb5894","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454013959,"stop":1667454014811,"duration":852}},{"uid":"2c00689dc80945af","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/2c00689dc80945af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368619097,"stop":1667368619823,"duration":726}}]},"tags":[]},"source":"d70db5859722ac5d.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}