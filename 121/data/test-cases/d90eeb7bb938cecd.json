{"uid":"d90eeb7bb938cecd","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"f3cb77fc5d8b31fdee1c39f79b80f898","time":{"start":1669095322769,"stop":1669095323463,"duration":694},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az241-751"},{"name":"thread","value":"2462-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":76,"skipped":0,"passed":0,"unknown":0,"total":76},"items":[{"uid":"6fe5281da96e455a","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/6fe5281da96e455a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008927591,"stop":1669008928695,"duration":1104}},{"uid":"ff31e49939bc3e7f","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/ff31e49939bc3e7f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922486710,"stop":1668922487826,"duration":1116}},{"uid":"1377b3af081ae93d","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/1377b3af081ae93d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836061794,"stop":1668836063075,"duration":1281}},{"uid":"1813dcab7602c4bd","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/1813dcab7602c4bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749701841,"stop":1668749702830,"duration":989}},{"uid":"3b6fa28b8fc77667","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/3b6fa28b8fc77667","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663332488,"stop":1668663333375,"duration":887}},{"uid":"31bb89fe6410a96b","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/31bb89fe6410a96b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576882971,"stop":1668576883844,"duration":873}},{"uid":"18d34c6eb96044f6","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/18d34c6eb96044f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490467451,"stop":1668490468334,"duration":883}},{"uid":"d7226fbfdc2ccbdd","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/d7226fbfdc2ccbdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404592948,"stop":1668404593680,"duration":732}},{"uid":"4ba5cf06d3f120e9","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/4ba5cf06d3f120e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317861917,"stop":1668317863031,"duration":1114}},{"uid":"c1418c75d8f9eb91","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/c1418c75d8f9eb91","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231405108,"stop":1668231405813,"duration":705}},{"uid":"65fb15675c0431ab","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/65fb15675c0431ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145244890,"stop":1668145245619,"duration":729}},{"uid":"c094df9b5759c9cb","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/c094df9b5759c9cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058948323,"stop":1668058949213,"duration":890}},{"uid":"2f9abcf8e2505724","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/2f9abcf8e2505724","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972726838,"stop":1667972727575,"duration":737}},{"uid":"249a5e7e548a06ba","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/249a5e7e548a06ba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886155030,"stop":1667886156139,"duration":1109}},{"uid":"14b1324903d54032","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/14b1324903d54032","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799857406,"stop":1667799858312,"duration":906}},{"uid":"1ebab691c7ae0320","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/1ebab691c7ae0320","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712882289,"stop":1667712883044,"duration":755}},{"uid":"d5309f89846cf389","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/d5309f89846cf389","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626485485,"stop":1667626486209,"duration":724}},{"uid":"6d00ea05a1736ee7","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/6d00ea05a1736ee7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540462757,"stop":1667540463634,"duration":877}},{"uid":"1260ebf15dbe8a4f","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/1260ebf15dbe8a4f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454022026,"stop":1667454022911,"duration":885}},{"uid":"93ce67d42eff26af","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/93ce67d42eff26af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368625812,"stop":1667368626523,"duration":711}}]},"tags":[]},"source":"d90eeb7bb938cecd.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'"]}