{"uid":"473c6d8da16cffda","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1670650304271,"stop":1670650305528,"duration":1257},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az254-821"},{"name":"thread","value":"2480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":94,"skipped":0,"passed":0,"unknown":0,"total":94},"items":[{"uid":"eb0eb48a5164ccb6","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/eb0eb48a5164ccb6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563887178,"stop":1670563888210,"duration":1032}},{"uid":"26763bb4251d0d26","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/26763bb4251d0d26","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477483297,"stop":1670477484139,"duration":842}},{"uid":"5b3f693f5878d40e","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/5b3f693f5878d40e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391085168,"stop":1670391086035,"duration":867}},{"uid":"42d428c815f2ba30","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/42d428c815f2ba30","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304721756,"stop":1670304722696,"duration":940}},{"uid":"257e7d1d25922178","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/257e7d1d25922178","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218307310,"stop":1670218308179,"duration":869}},{"uid":"d013ad9bc99a9b77","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/d013ad9bc99a9b77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131889138,"stop":1670131890189,"duration":1051}},{"uid":"422da24e0b8c7474","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/422da24e0b8c7474","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045489624,"stop":1670045490514,"duration":890}},{"uid":"96a8651b0bfe5224","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/96a8651b0bfe5224","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959109844,"stop":1669959110884,"duration":1040}},{"uid":"d921636dcbeabefc","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/d921636dcbeabefc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872832526,"stop":1669872833650,"duration":1124}},{"uid":"d434d0b90bf784ff","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/d434d0b90bf784ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786387669,"stop":1669786388793,"duration":1124}},{"uid":"22d5b6824ca0d758","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/22d5b6824ca0d758","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699957331,"stop":1669699958430,"duration":1099}},{"uid":"60d5f6c5b529754d","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/60d5f6c5b529754d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613552317,"stop":1669613553041,"duration":724}},{"uid":"14d88b8b8cdce377","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/14d88b8b8cdce377","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527100588,"stop":1669527101289,"duration":701}},{"uid":"9a158e2670e6f811","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/9a158e2670e6f811","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440693464,"stop":1669440694174,"duration":710}},{"uid":"ef85baeedff63dfe","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/ef85baeedff63dfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354338007,"stop":1669354338790,"duration":783}},{"uid":"76e605dc347b63a1","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/76e605dc347b63a1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267939382,"stop":1669267940061,"duration":679}},{"uid":"8ea7752d1d3772bd","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/8ea7752d1d3772bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181568420,"stop":1669181570326,"duration":1906}},{"uid":"7b3b1171ab32a396","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/7b3b1171ab32a396","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095296997,"stop":1669095297726,"duration":729}},{"uid":"6161241fc44446c0","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/6161241fc44446c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008904330,"stop":1669008905270,"duration":940}},{"uid":"5d3d8289a449d8a6","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/5d3d8289a449d8a6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922459407,"stop":1668922460563,"duration":1156}}]},"tags":[]},"source":"473c6d8da16cffda.json","parameterValues":["'FEED'","None","2"]}