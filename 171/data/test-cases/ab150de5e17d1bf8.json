{"uid":"ab150de5e17d1bf8","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1673415115794,"stop":1673415116809,"duration":1015},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az567-893"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":126,"skipped":0,"passed":0,"unknown":0,"total":126},"items":[{"uid":"9330eb09dcb521c8","reportUrl":"https://golosin.github.io/API-tests/170//#testresult/9330eb09dcb521c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673328721490,"stop":1673328722755,"duration":1265}},{"uid":"a214c7ce95cfd44a","reportUrl":"https://golosin.github.io/API-tests/169//#testresult/a214c7ce95cfd44a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673242333944,"stop":1673242335083,"duration":1139}},{"uid":"520e43aaffa64c68","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/520e43aaffa64c68","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155895918,"stop":1673155896747,"duration":829}},{"uid":"3c2b218da41a3688","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/3c2b218da41a3688","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069496349,"stop":1673069497202,"duration":853}},{"uid":"8cfdad1fb6107171","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/8cfdad1fb6107171","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983099223,"stop":1672983100057,"duration":834}},{"uid":"a21a03d7d930a8a3","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/a21a03d7d930a8a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896715342,"stop":1672896716584,"duration":1242}},{"uid":"da6aa7b9fb1676ce","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/da6aa7b9fb1676ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810321506,"stop":1672810322518,"duration":1012}},{"uid":"d62a54647d8a3354","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/d62a54647d8a3354","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723902191,"stop":1672723903044,"duration":853}},{"uid":"1e58af6aa0ff55e0","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/1e58af6aa0ff55e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637499327,"stop":1672637500161,"duration":834}},{"uid":"ae1583a481b6106b","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/ae1583a481b6106b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551093314,"stop":1672551094126,"duration":812}},{"uid":"99eaad0540b518a0","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/99eaad0540b518a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464698044,"stop":1672464698888,"duration":844}},{"uid":"1822b016f6d26390","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/1822b016f6d26390","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378317915,"stop":1672378318992,"duration":1077}},{"uid":"48939eb73d997495","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/48939eb73d997495","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291906108,"stop":1672291907120,"duration":1012}},{"uid":"2fef7ea817dbaca8","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/2fef7ea817dbaca8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205498353,"stop":1672205499190,"duration":837}},{"uid":"29f859e804c64383","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/29f859e804c64383","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119114782,"stop":1672119116041,"duration":1259}},{"uid":"ecbc649d3b46ea1a","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/ecbc649d3b46ea1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032718347,"stop":1672032719486,"duration":1139}},{"uid":"9b665dceba43d088","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/9b665dceba43d088","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946312472,"stop":1671946313295,"duration":823}},{"uid":"5fca3bb4b62c5504","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/5fca3bb4b62c5504","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859898846,"stop":1671859899678,"duration":832}},{"uid":"18112a3634587d61","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/18112a3634587d61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773516459,"stop":1671773517590,"duration":1131}},{"uid":"2e773572ea791c44","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/2e773572ea791c44","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687102991,"stop":1671687103822,"duration":831}}]},"tags":[]},"source":"ab150de5e17d1bf8.json","parameterValues":["'false'","'WILDBERRIES'"]}