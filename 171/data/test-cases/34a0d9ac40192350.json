{"uid":"34a0d9ac40192350","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1673415118830,"stop":1673415119834,"duration":1004},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az567-893"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":126,"skipped":0,"passed":0,"unknown":0,"total":126},"items":[{"uid":"da3dc9091ec1aea1","reportUrl":"https://golosin.github.io/API-tests/170//#testresult/da3dc9091ec1aea1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673328725271,"stop":1673328726519,"duration":1248}},{"uid":"e93d49946821d94f","reportUrl":"https://golosin.github.io/API-tests/169//#testresult/e93d49946821d94f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673242337370,"stop":1673242338498,"duration":1128}},{"uid":"537b3b6acee45841","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/537b3b6acee45841","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155898436,"stop":1673155899261,"duration":825}},{"uid":"3a7bbc8e071e3941","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/3a7bbc8e071e3941","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069498895,"stop":1673069499731,"duration":836}},{"uid":"a041789ae3c923fc","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/a041789ae3c923fc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983101733,"stop":1672983102567,"duration":834}},{"uid":"125f8247d55abb77","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/125f8247d55abb77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896719061,"stop":1672896720276,"duration":1215}},{"uid":"90a884be2816423","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/90a884be2816423","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810324555,"stop":1672810325668,"duration":1113}},{"uid":"8c11a1c64ffdf646","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/8c11a1c64ffdf646","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723904758,"stop":1672723905702,"duration":944}},{"uid":"f56b095b7c67653c","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/f56b095b7c67653c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637501866,"stop":1672637502699,"duration":833}},{"uid":"68ee6fae91a7a81a","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/68ee6fae91a7a81a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551095765,"stop":1672551096568,"duration":803}},{"uid":"5b5befc99c1b187e","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/5b5befc99c1b187e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464700586,"stop":1672464701430,"duration":844}},{"uid":"4bc7ad9785616f05","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/4bc7ad9785616f05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378321101,"stop":1672378322133,"duration":1032}},{"uid":"89fbdc0dba0ddc31","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/89fbdc0dba0ddc31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291909177,"stop":1672291910209,"duration":1032}},{"uid":"a0f5000fcef136b2","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/a0f5000fcef136b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205500864,"stop":1672205501718,"duration":854}},{"uid":"36ee4a9f692d1bc2","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/36ee4a9f692d1bc2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119118573,"stop":1672119119806,"duration":1233}},{"uid":"fe07043e723f2518","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/fe07043e723f2518","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032721718,"stop":1672032722830,"duration":1112}},{"uid":"7b6b63784d3d889a","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/7b6b63784d3d889a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946315052,"stop":1671946315865,"duration":813}},{"uid":"6fe7e1800e120d45","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/6fe7e1800e120d45","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859901383,"stop":1671859902242,"duration":859}},{"uid":"7bc2c536bb9cc6e5","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/7bc2c536bb9cc6e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773519933,"stop":1671773521085,"duration":1152}},{"uid":"1598634a7554fb55","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/1598634a7554fb55","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687105549,"stop":1671687106398,"duration":849}}]},"tags":[]},"source":"34a0d9ac40192350.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}