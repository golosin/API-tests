{"uid":"a3434de211391d7f","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1673415123936,"stop":1673415124950,"duration":1014},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az567-893"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":126,"skipped":0,"passed":0,"unknown":0,"total":126},"items":[{"uid":"3eb566b143a3680b","reportUrl":"https://golosin.github.io/API-tests/170//#testresult/3eb566b143a3680b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673328731567,"stop":1673328732817,"duration":1250}},{"uid":"78afd9dd5eb7782","reportUrl":"https://golosin.github.io/API-tests/169//#testresult/78afd9dd5eb7782","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673242343048,"stop":1673242344193,"duration":1145}},{"uid":"fd75612501762a7b","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/fd75612501762a7b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155902623,"stop":1673155903464,"duration":841}},{"uid":"960e3ea64d86f2f0","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/960e3ea64d86f2f0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069503169,"stop":1673069504008,"duration":839}},{"uid":"282d1412839d4b39","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/282d1412839d4b39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983105958,"stop":1672983106794,"duration":836}},{"uid":"3ea6e8e44a1c25bf","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/3ea6e8e44a1c25bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896725231,"stop":1672896726488,"duration":1257}},{"uid":"c912a399cb93ca1f","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/c912a399cb93ca1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810329831,"stop":1672810330843,"duration":1012}},{"uid":"26419a102abbd6d3","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/26419a102abbd6d3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723909125,"stop":1672723909960,"duration":835}},{"uid":"8b732648c51be954","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/8b732648c51be954","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637506095,"stop":1672637506926,"duration":831}},{"uid":"1a3a27e9fd32b764","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/1a3a27e9fd32b764","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551099835,"stop":1672551100641,"duration":806}},{"uid":"7f42a8d50946ff7d","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/7f42a8d50946ff7d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464704846,"stop":1672464705684,"duration":838}},{"uid":"9c6e0cad7f92507c","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/9c6e0cad7f92507c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378326422,"stop":1672378327477,"duration":1055}},{"uid":"3622549801fb7076","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/3622549801fb7076","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291914272,"stop":1672291915306,"duration":1034}},{"uid":"e7b280f71d924586","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/e7b280f71d924586","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205505083,"stop":1672205505905,"duration":822}},{"uid":"b36df428c7946b27","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/b36df428c7946b27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119124880,"stop":1672119126132,"duration":1252}},{"uid":"87eb39126b1bcbf5","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/87eb39126b1bcbf5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032727349,"stop":1672032728462,"duration":1113}},{"uid":"82b6bb22014733ef","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/82b6bb22014733ef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946319154,"stop":1671946319983,"duration":829}},{"uid":"9623004266e7750e","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/9623004266e7750e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859905621,"stop":1671859906476,"duration":855}},{"uid":"489e923e26dd147c","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/489e923e26dd147c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773525698,"stop":1671773526890,"duration":1192}},{"uid":"8150c1e28ccb614c","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/8150c1e28ccb614c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687109850,"stop":1671687110680,"duration":830}}]},"tags":[]},"source":"a3434de211391d7f.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}