{"uid":"f117ba086f4b3acf","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1673415112745,"stop":1673415113752,"duration":1007},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az567-893"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":126,"skipped":0,"passed":0,"unknown":0,"total":126},"items":[{"uid":"cb8538a893fb2216","reportUrl":"https://golosin.github.io/API-tests/170//#testresult/cb8538a893fb2216","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673328717656,"stop":1673328718909,"duration":1253}},{"uid":"4e843e226d42996a","reportUrl":"https://golosin.github.io/API-tests/169//#testresult/4e843e226d42996a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673242330511,"stop":1673242331631,"duration":1120}},{"uid":"6e97b74d82be3af5","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/6e97b74d82be3af5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155893416,"stop":1673155894242,"duration":826}},{"uid":"2794189bd4fe7ed","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/2794189bd4fe7ed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069493768,"stop":1673069494602,"duration":834}},{"uid":"394b68d61afec086","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/394b68d61afec086","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983096663,"stop":1672983097505,"duration":842}},{"uid":"27f5f0689f117dc9","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/27f5f0689f117dc9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896711584,"stop":1672896712834,"duration":1250}},{"uid":"5f27dfbe123a6e94","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/5f27dfbe123a6e94","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810318415,"stop":1672810319420,"duration":1005}},{"uid":"b8f59ca9d42e8ac5","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/b8f59ca9d42e8ac5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723899621,"stop":1672723900470,"duration":849}},{"uid":"594724948c2b8595","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/594724948c2b8595","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637496802,"stop":1672637497639,"duration":837}},{"uid":"d53165ed53ee9f61","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/d53165ed53ee9f61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551090895,"stop":1672551091695,"duration":800}},{"uid":"7e284f0087e7f304","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/7e284f0087e7f304","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464695508,"stop":1672464696349,"duration":841}},{"uid":"616a9fe5c054422f","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/616a9fe5c054422f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378314706,"stop":1672378315746,"duration":1040}},{"uid":"1b600d36b9f4fc75","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/1b600d36b9f4fc75","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291903036,"stop":1672291904053,"duration":1017}},{"uid":"380d2de787e54e49","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/380d2de787e54e49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205495835,"stop":1672205496670,"duration":835}},{"uid":"e4f0df2ec95e468f","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/e4f0df2ec95e468f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119111020,"stop":1672119112270,"duration":1250}},{"uid":"b18796c8df9c6dd5","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/b18796c8df9c6dd5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032714880,"stop":1672032715998,"duration":1118}},{"uid":"cab6fadcf00be6d","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/cab6fadcf00be6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946309997,"stop":1671946310812,"duration":815}},{"uid":"9851f951b8f7a156","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/9851f951b8f7a156","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859896263,"stop":1671859897149,"duration":886}},{"uid":"36e3a3d491014f7c","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/36e3a3d491014f7c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773513048,"stop":1671773514175,"duration":1127}},{"uid":"9c53f9aca99f6c56","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/9c53f9aca99f6c56","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687100393,"stop":1671687101240,"duration":847}}]},"tags":[]},"source":"f117ba086f4b3acf.json","parameterValues":["'true'","'FEED'"]}