{"uid":"4df8eebaf01abf63","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"3016b1aaaa2547594f9683d528f8f96b","time":{"start":1662789520918,"stop":1662789521622,"duration":704},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az133-181"},{"name":"thread","value":"2437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":6,"unknown":0,"total":12},"items":[{"uid":"97b7d433eb649004","reportUrl":"https://golosin.github.io/API-tests/40//#testresult/97b7d433eb649004","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662703611265,"stop":1662703611956,"duration":691}},{"uid":"9b4ca08cd400b0ce","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/9b4ca08cd400b0ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617719943,"stop":1662617720808,"duration":865}},{"uid":"811c50ed5770eea3","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/811c50ed5770eea3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617537288,"stop":1662617537998,"duration":710}},{"uid":"774588f9d024537e","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/774588f9d024537e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532743564,"stop":1662532744716,"duration":1152}},{"uid":"e86dfe821e8693b6","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/e86dfe821e8693b6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446460011,"stop":1662446460770,"duration":759}},{"uid":"f9c30313d7e401ed","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/f9c30313d7e401ed","status":"passed","time":{"start":1662359177246,"stop":1662359178433,"duration":1187}},{"uid":"8c7961bc32837323","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/8c7961bc32837323","status":"passed","time":{"start":1662270574556,"stop":1662270575723,"duration":1167}},{"uid":"ed6502badc4ff7ea","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/ed6502badc4ff7ea","status":"passed","time":{"start":1662184050611,"stop":1662184052129,"duration":1518}},{"uid":"2d469c4c973365fb","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/2d469c4c973365fb","status":"passed","time":{"start":1662099293120,"stop":1662099294615,"duration":1495}},{"uid":"93589564f3c5415b","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/93589564f3c5415b","status":"passed","time":{"start":1662012184052,"stop":1662012185973,"duration":1921}},{"uid":"b8a4478af564ce63","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/b8a4478af564ce63","status":"passed","time":{"start":1661928423811,"stop":1661928425728,"duration":1917}}]},"tags":[]},"source":"4df8eebaf01abf63.json","parameterValues":["'true'","'WILDBERRIES'","'priceStockRuleProducts'"]}