{"uid":"f17f18558ab494c2","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"f9ead6112a5139ded03988774bdd2dd2","time":{"start":1662789509330,"stop":1662789510057,"duration":727},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:35: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az133-181"},{"name":"thread","value":"2437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":6,"unknown":0,"total":12},"items":[{"uid":"f186fa9009017911","reportUrl":"https://golosin.github.io/API-tests/40//#testresult/f186fa9009017911","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662703599714,"stop":1662703600422,"duration":708}},{"uid":"a70ad296dbb3678b","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/a70ad296dbb3678b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617705772,"stop":1662617706681,"duration":909}},{"uid":"4ec8849587e3bf99","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/4ec8849587e3bf99","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617526107,"stop":1662617526814,"duration":707}},{"uid":"e5a9f464e2d0caed","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/e5a9f464e2d0caed","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532725557,"stop":1662532726700,"duration":1143}},{"uid":"8d14091d4b329480","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/8d14091d4b329480","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446448511,"stop":1662446449238,"duration":727}},{"uid":"7e2d0d54ff7897fb","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/7e2d0d54ff7897fb","status":"passed","time":{"start":1662359157940,"stop":1662359158831,"duration":891}},{"uid":"5ea9e0d45593c0d1","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/5ea9e0d45593c0d1","status":"passed","time":{"start":1662270554780,"stop":1662270555717,"duration":937}},{"uid":"7ac8958149bc063b","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/7ac8958149bc063b","status":"passed","time":{"start":1662184027716,"stop":1662184028820,"duration":1104}},{"uid":"18244ca29694f985","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/18244ca29694f985","status":"passed","time":{"start":1662099269715,"stop":1662099270826,"duration":1111}},{"uid":"44e307f55399ce5c","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/44e307f55399ce5c","status":"passed","time":{"start":1662012156612,"stop":1662012158097,"duration":1485}},{"uid":"ed1da001be09a728","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/ed1da001be09a728","status":"passed","time":{"start":1661928396439,"stop":1661928397795,"duration":1356}}]},"tags":[]},"source":"f17f18558ab494c2.json","parameterValues":["'FEED'","2","2"]}