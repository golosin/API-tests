{"uid":"f06a852faebfd510","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1662789512271,"stop":1662789513019,"duration":748},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:35: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az133-181"},{"name":"thread","value":"2437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":6,"unknown":0,"total":12},"items":[{"uid":"7afb3cc5d5c3c591","reportUrl":"https://golosin.github.io/API-tests/40//#testresult/7afb3cc5d5c3c591","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662703602630,"stop":1662703603337,"duration":707}},{"uid":"fe30e36c50fc073c","reportUrl":"https://golosin.github.io/API-tests/39//#testresult/fe30e36c50fc073c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617709317,"stop":1662617710196,"duration":879}},{"uid":"625090c971a78a4","reportUrl":"https://golosin.github.io/API-tests/38//#testresult/625090c971a78a4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662617528924,"stop":1662617529611,"duration":687}},{"uid":"ac4a6efe047a6c73","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/ac4a6efe047a6c73","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532730075,"stop":1662532731232,"duration":1157}},{"uid":"ab05ce64f1312e","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/ab05ce64f1312e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446451378,"stop":1662446452090,"duration":712}},{"uid":"58bc1e9e26fff40e","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/58bc1e9e26fff40e","status":"passed","time":{"start":1662359162139,"stop":1662359163549,"duration":1410}},{"uid":"f8c3870964dfd460","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/f8c3870964dfd460","status":"passed","time":{"start":1662270559099,"stop":1662270560496,"duration":1397}},{"uid":"dbe0b3e47d54e699","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/dbe0b3e47d54e699","status":"passed","time":{"start":1662184032879,"stop":1662184034472,"duration":1593}},{"uid":"af7bcbe54f0c0ea5","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/af7bcbe54f0c0ea5","status":"passed","time":{"start":1662099274757,"stop":1662099276467,"duration":1710}},{"uid":"5d234e79c6fc6734","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/5d234e79c6fc6734","status":"passed","time":{"start":1662012162940,"stop":1662012164812,"duration":1872}},{"uid":"94bdad0fb6434aff","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/94bdad0fb6434aff","status":"passed","time":{"start":1661928402607,"stop":1661928404454,"duration":1847}}]},"tags":[]},"source":"f06a852faebfd510.json","parameterValues":["'WILDBERRIES'","2","None"]}