{"uid":"dc92e53d3da455f5","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1666245444753,"stop":1666245445445,"duration":692},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az628-388"},{"name":"thread","value":"2454-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":43,"skipped":0,"passed":0,"unknown":0,"total":43},"items":[{"uid":"be1c4b845c983f9b","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/be1c4b845c983f9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161755167,"stop":1666161755844,"duration":677}},{"uid":"11342feb25eeffbb","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/11342feb25eeffbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075147819,"stop":1666075148499,"duration":680}},{"uid":"747343e533288b8f","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/747343e533288b8f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988654016,"stop":1665988655119,"duration":1103}},{"uid":"3744b00ae7f790f3","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/3744b00ae7f790f3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899925759,"stop":1665899926536,"duration":777}},{"uid":"c4a96409ca85d543","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/c4a96409ca85d543","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813734016,"stop":1665813734887,"duration":871}},{"uid":"cdabb41d91f75132","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/cdabb41d91f75132","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729127357,"stop":1665729128186,"duration":829}},{"uid":"c8c76be4bdce3d04","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/c8c76be4bdce3d04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641737761,"stop":1665641738446,"duration":685}},{"uid":"a7cc3fe3a004ecbb","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/a7cc3fe3a004ecbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554502417,"stop":1665554503521,"duration":1104}},{"uid":"cced87b4ead65263","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/cced87b4ead65263","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469415173,"stop":1665469415861,"duration":688}},{"uid":"994df7a66a0095e7","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/994df7a66a0095e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383162744,"stop":1665383163451,"duration":707}},{"uid":"29ee53f545f65741","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/29ee53f545f65741","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294925071,"stop":1665294925937,"duration":866}},{"uid":"4b08709f6cccb991","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/4b08709f6cccb991","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208214213,"stop":1665208215055,"duration":842}},{"uid":"cb55dfec2840d93a","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/cb55dfec2840d93a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122039361,"stop":1665122040040,"duration":679}},{"uid":"6aa638441b33c55d","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/6aa638441b33c55d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035900655,"stop":1665035901356,"duration":701}},{"uid":"fd18b9c7c0ff71c6","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/fd18b9c7c0ff71c6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949873636,"stop":1664949874316,"duration":680}},{"uid":"347e8c2e350f946e","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/347e8c2e350f946e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863288924,"stop":1664863289601,"duration":677}},{"uid":"e92499951abd1be9","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/e92499951abd1be9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776758346,"stop":1664776759218,"duration":872}},{"uid":"29b6e3eddcbf9b42","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/29b6e3eddcbf9b42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690385831,"stop":1664690386943,"duration":1112}},{"uid":"17e6484be925c51a","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/17e6484be925c51a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519854257,"stop":1664519855361,"duration":1104}},{"uid":"c742ed036abd2f21","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/c742ed036abd2f21","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433535204,"stop":1664433536309,"duration":1105}}]},"tags":[]},"source":"dc92e53d3da455f5.json","parameterValues":["'false'","'FEED'"]}