{"uid":"8c4568454edbd22a","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"f9ead6112a5139ded03988774bdd2dd2","time":{"start":1672119095825,"stop":1672119097108,"duration":1283},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.3"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az456-801"},{"name":"thread","value":"2519-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":111,"skipped":0,"passed":0,"unknown":0,"total":111},"items":[{"uid":"c615a8e8e6fc09da","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/c615a8e8e6fc09da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032700713,"stop":1672032701851,"duration":1138}},{"uid":"6817e0f6e9ba27b8","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/6817e0f6e9ba27b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946300064,"stop":1671946300877,"duration":813}},{"uid":"803267645247453d","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/803267645247453d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859886002,"stop":1671859886855,"duration":853}},{"uid":"df169d5675bf7d58","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/df169d5675bf7d58","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773499332,"stop":1671773500469,"duration":1137}},{"uid":"3ce1afa1bddde5b8","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/3ce1afa1bddde5b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687090095,"stop":1671687090935,"duration":840}},{"uid":"9256fff89d307e05","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/9256fff89d307e05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600685248,"stop":1671600686095,"duration":847}},{"uid":"9268ca566d53671f","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/9268ca566d53671f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514296738,"stop":1671514297607,"duration":869}},{"uid":"2eecb11f4a066113","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/2eecb11f4a066113","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427913006,"stop":1671427914276,"duration":1270}},{"uid":"2b95c3a33e83a7da","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/2b95c3a33e83a7da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341506102,"stop":1671341507361,"duration":1259}},{"uid":"e8c8a5e95ee39728","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/e8c8a5e95ee39728","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255098768,"stop":1671255099774,"duration":1006}},{"uid":"220c05f0c4a58460","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/220c05f0c4a58460","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168686725,"stop":1671168687595,"duration":870}},{"uid":"53e27d0ed8599749","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/53e27d0ed8599749","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082310178,"stop":1671082311190,"duration":1012}},{"uid":"39e27285450aff76","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/39e27285450aff76","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995894010,"stop":1670995894988,"duration":978}},{"uid":"59ef9e7a6b66caf3","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/59ef9e7a6b66caf3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909489487,"stop":1670909490354,"duration":867}},{"uid":"5ce1a4e66b9e113a","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/5ce1a4e66b9e113a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823078869,"stop":1670823079749,"duration":880}},{"uid":"a5c25540a2457a13","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/a5c25540a2457a13","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736683235,"stop":1670736684044,"duration":809}},{"uid":"5be659128b48f502","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/5be659128b48f502","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650301767,"stop":1670650302994,"duration":1227}},{"uid":"b376562bfa367192","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/b376562bfa367192","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563885122,"stop":1670563886148,"duration":1026}},{"uid":"ded0af3ca50b3209","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/ded0af3ca50b3209","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477481622,"stop":1670477482448,"duration":826}},{"uid":"a3eafd01198c83e1","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/a3eafd01198c83e1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391083471,"stop":1670391084315,"duration":844}}]},"tags":[]},"source":"8c4568454edbd22a.json","parameterValues":["'FEED'","2","2"]}