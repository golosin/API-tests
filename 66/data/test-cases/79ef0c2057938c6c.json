{"uid":"79ef0c2057938c6c","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1664346852624,"stop":1664346853526,"duration":902},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az91-871"},{"name":"thread","value":"2393-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"3d41b1755669bda9","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/3d41b1755669bda9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260029356,"stop":1664260030223,"duration":867}},{"uid":"279a81f6bc99a184","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/279a81f6bc99a184","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173997520,"stop":1664173998210,"duration":690}},{"uid":"e6908195cd8cfce6","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/e6908195cd8cfce6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085272605,"stop":1664085273542,"duration":937}},{"uid":"5b6f9d9f0c251b9d","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/5b6f9d9f0c251b9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999157610,"stop":1663999158731,"duration":1121}},{"uid":"adcf6d34ce056c03","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/adcf6d34ce056c03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914348899,"stop":1663914349583,"duration":684}},{"uid":"30f0abc2f7a84397","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/30f0abc2f7a84397","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828216308,"stop":1663828217190,"duration":882}},{"uid":"4a6e673000bbeb20","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/4a6e673000bbeb20","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742176002,"stop":1663742177118,"duration":1116}},{"uid":"24fbb0a7b80c95e8","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/24fbb0a7b80c95e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655465594,"stop":1663655466474,"duration":880}},{"uid":"19b62368a899c615","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/19b62368a899c615","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569586021,"stop":1663569586701,"duration":680}},{"uid":"98330ff61e2c74e5","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/98330ff61e2c74e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480486571,"stop":1663480487679,"duration":1108}},{"uid":"513c087f394ddc0d","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/513c087f394ddc0d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393960218,"stop":1663393961076,"duration":858}},{"uid":"416d51a4fd203fab","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/416d51a4fd203fab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309763543,"stop":1663309764222,"duration":679}},{"uid":"f5067643dc1b7a2a","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/f5067643dc1b7a2a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222539787,"stop":1663222540484,"duration":697}},{"uid":"491f773787b2bac0","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/491f773787b2bac0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137100212,"stop":1663137101106,"duration":894}},{"uid":"be35038455d6246f","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/be35038455d6246f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050985633,"stop":1663050986354,"duration":721}},{"uid":"77cff4e7c8276557","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/77cff4e7c8276557","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964785917,"stop":1662964786649,"duration":732}},{"uid":"22b4483db5727701","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/22b4483db5727701","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875608597,"stop":1662875609283,"duration":686}},{"uid":"c7836c44cd064b60","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/c7836c44cd064b60","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845425543,"stop":1662845426432,"duration":889}},{"uid":"b4f84eeb0e2f7b8c","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/b4f84eeb0e2f7b8c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840110262,"stop":1662840110983,"duration":721}},{"uid":"bd211dff188d39f5","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/bd211dff188d39f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840077603,"stop":1662840078484,"duration":881}}]},"tags":[]},"source":"79ef0c2057938c6c.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}