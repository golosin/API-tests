{"uid":"18fd3eb1ba35ec44","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1664346846464,"stop":1664346847330,"duration":866},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az91-871"},{"name":"thread","value":"2393-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"bb629ffebc0cdd1e","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/bb629ffebc0cdd1e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260023212,"stop":1664260024072,"duration":860}},{"uid":"b2c6baa4cb4e2b07","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/b2c6baa4cb4e2b07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173992553,"stop":1664173993261,"duration":708}},{"uid":"aa3f8c3388593532","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/aa3f8c3388593532","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085266343,"stop":1664085267244,"duration":901}},{"uid":"e009b8f270484a6a","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/e009b8f270484a6a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999149791,"stop":1663999150891,"duration":1100}},{"uid":"6e42b066aef2715e","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/6e42b066aef2715e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914343982,"stop":1663914344670,"duration":688}},{"uid":"ae65f5f317a686af","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/ae65f5f317a686af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828210041,"stop":1663828210941,"duration":900}},{"uid":"f695915157f86b24","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/f695915157f86b24","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742168087,"stop":1663742169200,"duration":1113}},{"uid":"8f4219e80e988d5e","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/8f4219e80e988d5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655459439,"stop":1663655460311,"duration":872}},{"uid":"1542ef5af68e55d3","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/1542ef5af68e55d3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569581214,"stop":1663569581886,"duration":672}},{"uid":"8d5faa956117506a","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/8d5faa956117506a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480478717,"stop":1663480479826,"duration":1109}},{"uid":"f468bbe8669929db","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/f468bbe8669929db","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393954038,"stop":1663393954899,"duration":861}},{"uid":"20d2e3ef5bbb3674","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/20d2e3ef5bbb3674","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309758659,"stop":1663309759355,"duration":696}},{"uid":"3ffb15c1aaeb8a49","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/3ffb15c1aaeb8a49","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222534809,"stop":1663222535509,"duration":700}},{"uid":"dca65555122ac695","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/dca65555122ac695","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137093893,"stop":1663137094782,"duration":889}},{"uid":"a27b73a54d65ff6c","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/a27b73a54d65ff6c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050980672,"stop":1663050981378,"duration":706}},{"uid":"837e2af09c9fce05","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/837e2af09c9fce05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964780910,"stop":1662964781609,"duration":699}},{"uid":"c205b712afc8060","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/c205b712afc8060","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875603606,"stop":1662875604318,"duration":712}},{"uid":"1199dfbce0fdc41d","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/1199dfbce0fdc41d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845419087,"stop":1662845420005,"duration":918}},{"uid":"c954384fd1da2d61","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/c954384fd1da2d61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840105055,"stop":1662840105769,"duration":714}},{"uid":"455d94235241311c","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/455d94235241311c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840071225,"stop":1662840072130,"duration":905}}]},"tags":[]},"source":"18fd3eb1ba35ec44.json","parameterValues":["'true'","'FEED'"]}