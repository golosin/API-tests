{"uid":"da9d7c2f8d337976","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1666075154756,"stop":1666075155432,"duration":676},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az198-290"},{"name":"thread","value":"2458-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":41,"skipped":0,"passed":0,"unknown":0,"total":41},"items":[{"uid":"34f3e87d2da353a7","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/34f3e87d2da353a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988665136,"stop":1665988666231,"duration":1095}},{"uid":"7fbf66771cb861a6","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/7fbf66771cb861a6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899933013,"stop":1665899933754,"duration":741}},{"uid":"9c981f40428ef016","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/9c981f40428ef016","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813742828,"stop":1665813743707,"duration":879}},{"uid":"a01b7c75a223975b","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/a01b7c75a223975b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729134679,"stop":1665729135401,"duration":722}},{"uid":"7b447c443667eb81","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/7b447c443667eb81","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641744715,"stop":1665641745413,"duration":698}},{"uid":"7b57b60a91dd8b20","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/7b57b60a91dd8b20","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554513585,"stop":1665554514688,"duration":1103}},{"uid":"692c981037d55777","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/692c981037d55777","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469422196,"stop":1665469422871,"duration":675}},{"uid":"d17e3ee788062930","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/d17e3ee788062930","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383169923,"stop":1665383170645,"duration":722}},{"uid":"5fbf501b7c3e3f6b","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/5fbf501b7c3e3f6b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294933842,"stop":1665294934714,"duration":872}},{"uid":"ad1c17a765095adb","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/ad1c17a765095adb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208222980,"stop":1665208223853,"duration":873}},{"uid":"f02d2006a79d2c33","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/f02d2006a79d2c33","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122046248,"stop":1665122046946,"duration":698}},{"uid":"8326e806d3a9112a","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/8326e806d3a9112a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035907752,"stop":1665035908470,"duration":718}},{"uid":"715cea9646acc982","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/715cea9646acc982","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949880631,"stop":1664949881325,"duration":694}},{"uid":"7a627e8895a75ab","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/7a627e8895a75ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863295846,"stop":1664863296572,"duration":726}},{"uid":"81e76a6e0695f220","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/81e76a6e0695f220","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776767260,"stop":1664776768158,"duration":898}},{"uid":"2cded17d10d85515","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/2cded17d10d85515","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690396996,"stop":1664690398107,"duration":1111}},{"uid":"5bf70efbb20d6cee","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/5bf70efbb20d6cee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519865367,"stop":1664519866473,"duration":1106}},{"uid":"a0d95c49f5807cc9","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/a0d95c49f5807cc9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433546334,"stop":1664433547420,"duration":1086}},{"uid":"904d44d840426647","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/904d44d840426647","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346855720,"stop":1664346856621,"duration":901}},{"uid":"44cf3de345584cc7","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/44cf3de345584cc7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260032870,"stop":1664260033740,"duration":870}}]},"tags":[]},"source":"da9d7c2f8d337976.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}