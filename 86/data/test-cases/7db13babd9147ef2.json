{"uid":"7db13babd9147ef2","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"c68cd23a5574698c3519dd2ee8880360","time":{"start":1666075140927,"stop":1666075141612,"duration":685},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az198-290"},{"name":"thread","value":"2458-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":41,"skipped":0,"passed":0,"unknown":0,"total":41},"items":[{"uid":"931174edbab1899","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/931174edbab1899","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988642927,"stop":1665988644043,"duration":1116}},{"uid":"d0201b22060ddfb9","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/d0201b22060ddfb9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899918326,"stop":1665899919053,"duration":727}},{"uid":"445e14d61cf89f97","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/445e14d61cf89f97","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813725126,"stop":1665813726034,"duration":908}},{"uid":"a8b92e5ab1d86027","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/a8b92e5ab1d86027","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729119529,"stop":1665729120230,"duration":701}},{"uid":"5571c7dbab7b4026","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/5571c7dbab7b4026","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641730844,"stop":1665641731528,"duration":684}},{"uid":"b162b74400cad9ea","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/b162b74400cad9ea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554491275,"stop":1665554492388,"duration":1113}},{"uid":"58152f6270c06db9","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/58152f6270c06db9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469408148,"stop":1665469408836,"duration":688}},{"uid":"b07ffd9af576a651","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/b07ffd9af576a651","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383155466,"stop":1665383156166,"duration":700}},{"uid":"66a07941a6d82711","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/66a07941a6d82711","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294916321,"stop":1665294917181,"duration":860}},{"uid":"6b48d9689efb74b1","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/6b48d9689efb74b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208205374,"stop":1665208206278,"duration":904}},{"uid":"d46280ef027219f3","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/d46280ef027219f3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122032331,"stop":1665122033014,"duration":683}},{"uid":"ce3d02a1cebb0325","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/ce3d02a1cebb0325","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035893489,"stop":1665035894201,"duration":712}},{"uid":"374c2aee6dc6f112","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/374c2aee6dc6f112","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949866700,"stop":1664949867386,"duration":686}},{"uid":"2d32b8e2c7863a86","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/2d32b8e2c7863a86","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863281990,"stop":1664863282656,"duration":666}},{"uid":"a9e7ba3904abf1f5","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/a9e7ba3904abf1f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776749457,"stop":1664776750332,"duration":875}},{"uid":"8440f19a4f3534bd","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/8440f19a4f3534bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690374694,"stop":1664690375797,"duration":1103}},{"uid":"8b253a052c84ced8","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/8b253a052c84ced8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519843166,"stop":1664519844261,"duration":1095}},{"uid":"409b5944cea7ef37","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/409b5944cea7ef37","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433524057,"stop":1664433525153,"duration":1096}},{"uid":"a6f7d653eda4c97d","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/a6f7d653eda4c97d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346838449,"stop":1664346839317,"duration":868}},{"uid":"2916cdddd326cd65","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/2916cdddd326cd65","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260015287,"stop":1664260016141,"duration":854}}]},"tags":[]},"source":"7db13babd9147ef2.json","parameterValues":["'WILDBERRIES'","2","2"]}