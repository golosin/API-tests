{"uid":"3620f1afb7ade072","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"3016b1aaaa2547594f9683d528f8f96b","time":{"start":1665469417260,"stop":1665469417967,"duration":707},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az167-86"},{"name":"thread","value":"2450-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":34,"skipped":0,"passed":0,"unknown":0,"total":34},"items":[{"uid":"2b22b57d94625b36","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2b22b57d94625b36","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383164883,"stop":1665383165590,"duration":707}},{"uid":"1f920f459fffc5a3","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/1f920f459fffc5a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294927696,"stop":1665294928571,"duration":875}},{"uid":"74ed874dc5d696e3","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/74ed874dc5d696e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208216803,"stop":1665208217679,"duration":876}},{"uid":"167a212e99d8d817","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/167a212e99d8d817","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122041421,"stop":1665122042101,"duration":680}},{"uid":"c320f3dd81d7cd0d","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/c320f3dd81d7cd0d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035902805,"stop":1665035903519,"duration":714}},{"uid":"8422ec79a8799e57","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/8422ec79a8799e57","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949875702,"stop":1664949876423,"duration":721}},{"uid":"71e55abe67d30e14","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/71e55abe67d30e14","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863291015,"stop":1664863291693,"duration":678}},{"uid":"12076f515ec858e1","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/12076f515ec858e1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776761053,"stop":1664776761942,"duration":889}},{"uid":"140b78d415294632","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/140b78d415294632","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690389192,"stop":1664690390312,"duration":1120}},{"uid":"69e62371e6a229ae","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/69e62371e6a229ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519857581,"stop":1664519858678,"duration":1097}},{"uid":"cea3d1484ceaffd8","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/cea3d1484ceaffd8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433538540,"stop":1664433539631,"duration":1091}},{"uid":"5def9d13983a84da","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/5def9d13983a84da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346849971,"stop":1664346850879,"duration":908}},{"uid":"e679ed7d1313ca6b","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/e679ed7d1313ca6b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260026719,"stop":1664260027586,"duration":867}},{"uid":"21f803bc48bc720f","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/21f803bc48bc720f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173995392,"stop":1664173996106,"duration":714}},{"uid":"7d7cfed4fa49694d","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/7d7cfed4fa49694d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085269927,"stop":1664085270798,"duration":871}},{"uid":"714849b744cb4ae7","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/714849b744cb4ae7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999154248,"stop":1663999155357,"duration":1109}},{"uid":"7ebd2064954d1347","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/7ebd2064954d1347","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914346786,"stop":1663914347471,"duration":685}},{"uid":"e18808e90b250632","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/e18808e90b250632","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828213625,"stop":1663828214494,"duration":869}},{"uid":"b7b2b3651b60894","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/b7b2b3651b60894","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742172623,"stop":1663742173746,"duration":1123}},{"uid":"3caa0225428a30dc","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/3caa0225428a30dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655462958,"stop":1663655463824,"duration":866}}]},"tags":[]},"source":"3620f1afb7ade072.json","parameterValues":["'true'","'WILDBERRIES'","'priceStockRuleProducts'"]}