{"uid":"69e62371e6a229ae","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"3016b1aaaa2547594f9683d528f8f96b","time":{"start":1664519857581,"stop":1664519858678,"duration":1097},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az451-748"},{"name":"thread","value":"2451-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":24,"skipped":0,"passed":0,"unknown":0,"total":24},"items":[{"uid":"cea3d1484ceaffd8","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/cea3d1484ceaffd8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433538540,"stop":1664433539631,"duration":1091}},{"uid":"5def9d13983a84da","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/5def9d13983a84da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346849971,"stop":1664346850879,"duration":908}},{"uid":"e679ed7d1313ca6b","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/e679ed7d1313ca6b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260026719,"stop":1664260027586,"duration":867}},{"uid":"21f803bc48bc720f","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/21f803bc48bc720f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173995392,"stop":1664173996106,"duration":714}},{"uid":"7d7cfed4fa49694d","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/7d7cfed4fa49694d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085269927,"stop":1664085270798,"duration":871}},{"uid":"714849b744cb4ae7","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/714849b744cb4ae7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999154248,"stop":1663999155357,"duration":1109}},{"uid":"7ebd2064954d1347","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/7ebd2064954d1347","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914346786,"stop":1663914347471,"duration":685}},{"uid":"e18808e90b250632","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/e18808e90b250632","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828213625,"stop":1663828214494,"duration":869}},{"uid":"b7b2b3651b60894","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/b7b2b3651b60894","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742172623,"stop":1663742173746,"duration":1123}},{"uid":"3caa0225428a30dc","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/3caa0225428a30dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655462958,"stop":1663655463824,"duration":866}},{"uid":"9e3dc4ede58f9e73","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/9e3dc4ede58f9e73","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569583954,"stop":1663569584637,"duration":683}},{"uid":"9343b1d81d374e3a","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/9343b1d81d374e3a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480483180,"stop":1663480484299,"duration":1119}},{"uid":"7d8ce9289cf6ff68","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/7d8ce9289cf6ff68","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393957583,"stop":1663393958460,"duration":877}},{"uid":"bc3e25731b2c441b","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/bc3e25731b2c441b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309761458,"stop":1663309762153,"duration":695}},{"uid":"c2a37e603259b9a","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/c2a37e603259b9a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222537654,"stop":1663222538358,"duration":704}},{"uid":"5121c343c8cba6d","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/5121c343c8cba6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137097500,"stop":1663137098389,"duration":889}},{"uid":"83361d3970e1f743","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/83361d3970e1f743","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050983516,"stop":1663050984214,"duration":698}},{"uid":"580403eef876add3","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/580403eef876add3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964783785,"stop":1662964784476,"duration":691}},{"uid":"61eec96ad54e9873","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/61eec96ad54e9873","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875606470,"stop":1662875607209,"duration":739}},{"uid":"3b3a16c23a951a64","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/3b3a16c23a951a64","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845422747,"stop":1662845423673,"duration":926}}]},"tags":[]},"source":"69e62371e6a229ae.json","parameterValues":["'true'","'WILDBERRIES'","'priceStockRuleProducts'"]}