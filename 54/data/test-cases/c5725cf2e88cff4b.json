{"uid":"c5725cf2e88cff4b","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"dcfc6f447ab1152a67e381672353f11e","time":{"start":1663309764228,"stop":1663309764910,"duration":682},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.0.9"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az348-166"},{"name":"thread","value":"2431-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"4a10fc46b6131b8b","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/4a10fc46b6131b8b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222540491,"stop":1663222541203,"duration":712}},{"uid":"d70362167aa2527","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/d70362167aa2527","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137101114,"stop":1663137102003,"duration":889}},{"uid":"b149c676287b017e","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/b149c676287b017e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050986360,"stop":1663050987051,"duration":691}},{"uid":"5e580e969164f877","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/5e580e969164f877","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964786655,"stop":1662964787381,"duration":726}},{"uid":"ca4ec1a61ba3cb97","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/ca4ec1a61ba3cb97","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875609289,"stop":1662875610013,"duration":724}},{"uid":"98697576b1a7bbb0","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/98697576b1a7bbb0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845426439,"stop":1662845427337,"duration":898}},{"uid":"c186726699db7aaa","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/c186726699db7aaa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840110990,"stop":1662840111688,"duration":698}},{"uid":"efb815f1712a1187","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/efb815f1712a1187","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840078493,"stop":1662840079383,"duration":890}},{"uid":"ffe7c0455de699c","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/ffe7c0455de699c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838771289,"stop":1662838771997,"duration":708}}]},"tags":[]},"source":"c5725cf2e88cff4b.json","parameterValues":["'FEED'"]}