{"uid":"3c988c6adc168756","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1666679846547,"stop":1666679847227,"duration":680},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az628-278"},{"name":"thread","value":"2470-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":48,"skipped":0,"passed":0,"unknown":0,"total":48},"items":[{"uid":"7eb4283352edf229","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/7eb4283352edf229","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593704080,"stop":1666593704760,"duration":680}},{"uid":"8b9b1a3dfcdad0c7","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/8b9b1a3dfcdad0c7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504790996,"stop":1666504791709,"duration":713}},{"uid":"1073371277a1088c","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/1073371277a1088c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418278979,"stop":1666418279868,"duration":889}},{"uid":"9b249219551ed4ba","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/9b249219551ed4ba","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332229998,"stop":1666332230696,"duration":698}},{"uid":"2df76584ac77df25","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/2df76584ac77df25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245448386,"stop":1666245449076,"duration":690}},{"uid":"b5b0fa9096d8c3bb","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/b5b0fa9096d8c3bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161758628,"stop":1666161759319,"duration":691}},{"uid":"f774e0ce2f64b768","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/f774e0ce2f64b768","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075151304,"stop":1666075151990,"duration":686}},{"uid":"51289d033b3f5b5b","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/51289d033b3f5b5b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988659557,"stop":1665988660670,"duration":1113}},{"uid":"670e3f4968cfa944","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/670e3f4968cfa944","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899929431,"stop":1665899930131,"duration":700}},{"uid":"110de65657805c10","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/110de65657805c10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813738388,"stop":1665813739273,"duration":885}},{"uid":"860d9bff63332ef6","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/860d9bff63332ef6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729131048,"stop":1665729131785,"duration":737}},{"uid":"5c69d37c1dae6ceb","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/5c69d37c1dae6ceb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641741218,"stop":1665641741896,"duration":678}},{"uid":"790a15983ffc3815","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/790a15983ffc3815","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554508029,"stop":1665554509130,"duration":1101}},{"uid":"b1b8dfb13d04af85","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/b1b8dfb13d04af85","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469418680,"stop":1665469419357,"duration":677}},{"uid":"2771ec84fd63ec94","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2771ec84fd63ec94","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383166309,"stop":1665383167018,"duration":709}},{"uid":"ae3c218b411ec055","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/ae3c218b411ec055","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294929442,"stop":1665294930317,"duration":875}},{"uid":"a95757c15800cf9f","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/a95757c15800cf9f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208218601,"stop":1665208219492,"duration":891}},{"uid":"bd3f60ddca537784","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/bd3f60ddca537784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122042792,"stop":1665122043474,"duration":682}},{"uid":"8eae970c1160f8ca","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/8eae970c1160f8ca","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035904228,"stop":1665035904929,"duration":701}},{"uid":"aa81c8285c7fc17c","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/aa81c8285c7fc17c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949877120,"stop":1664949877825,"duration":705}}]},"tags":[]},"source":"3c988c6adc168756.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}