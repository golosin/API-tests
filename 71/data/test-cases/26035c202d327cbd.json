{"uid":"26035c202d327cbd","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1664776770823,"stop":1664776771694,"duration":871},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az465-738"},{"name":"thread","value":"2478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"6d06e544ae3cc431","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/6d06e544ae3cc431","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690401459,"stop":1664690402692,"duration":1233}},{"uid":"454a1e45253a4a89","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/454a1e45253a4a89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519869798,"stop":1664519870894,"duration":1096}},{"uid":"71722cb4923f2ae8","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/71722cb4923f2ae8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433550796,"stop":1664433551890,"duration":1094}},{"uid":"aa78990242c627a0","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/aa78990242c627a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346859264,"stop":1664346860129,"duration":865}},{"uid":"a7c8fb055c9fc728","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/a7c8fb055c9fc728","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260036418,"stop":1664260037275,"duration":857}},{"uid":"db83dfc83a005ec3","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/db83dfc83a005ec3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664174003162,"stop":1664174003855,"duration":693}},{"uid":"8459564ec9298d52","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/8459564ec9298d52","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085279759,"stop":1664085280629,"duration":870}},{"uid":"11243c6d4a0c79f8","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/11243c6d4a0c79f8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999166565,"stop":1663999167695,"duration":1130}},{"uid":"6842a6672904dd0","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/6842a6672904dd0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914354526,"stop":1663914355215,"duration":689}},{"uid":"a108b2b6afc59a81","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/a108b2b6afc59a81","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828223444,"stop":1663828224309,"duration":865}},{"uid":"b77d478c8665b0f0","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/b77d478c8665b0f0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742184971,"stop":1663742186100,"duration":1129}},{"uid":"e35c7de94b75ad7e","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/e35c7de94b75ad7e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655472656,"stop":1663655473529,"duration":873}},{"uid":"909edebc2ad2fa22","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/909edebc2ad2fa22","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569591540,"stop":1663569592222,"duration":682}},{"uid":"fbefd7c080c61f2","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/fbefd7c080c61f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480495619,"stop":1663480496770,"duration":1151}},{"uid":"a02900bf441bb50a","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/a02900bf441bb50a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393967332,"stop":1663393968223,"duration":891}},{"uid":"f9200820946f55ff","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/f9200820946f55ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309769147,"stop":1663309769828,"duration":681}},{"uid":"8667e1eaa1ffd75f","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/8667e1eaa1ffd75f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222545680,"stop":1663222546383,"duration":703}},{"uid":"398e0f336fca0609","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/398e0f336fca0609","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137107415,"stop":1663137108298,"duration":883}},{"uid":"a27ff79e652f6964","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/a27ff79e652f6964","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050991336,"stop":1663050992048,"duration":712}},{"uid":"99a5d6666fa5d1f","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/99a5d6666fa5d1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964791701,"stop":1662964792401,"duration":700}}]},"tags":[]},"source":"26035c202d327cbd.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}