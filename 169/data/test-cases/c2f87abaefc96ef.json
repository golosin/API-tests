{"uid":"c2f87abaefc96ef","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1673242319043,"stop":1673242320161,"duration":1118},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az434-172"},{"name":"thread","value":"2610-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":124,"skipped":0,"passed":0,"unknown":0,"total":124},"items":[{"uid":"17b8fe6b680d320f","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/17b8fe6b680d320f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155884934,"stop":1673155885776,"duration":842}},{"uid":"36bb5e9efd7d9516","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/36bb5e9efd7d9516","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069485260,"stop":1673069486105,"duration":845}},{"uid":"b0b0aa411111304c","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/b0b0aa411111304c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983088162,"stop":1672983088991,"duration":829}},{"uid":"907d61d394b7b5e7","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/907d61d394b7b5e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896698881,"stop":1672896700144,"duration":1263}},{"uid":"70fc232ba87e1630","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/70fc232ba87e1630","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810308169,"stop":1672810309183,"duration":1014}},{"uid":"aaf8187c8d09c02c","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/aaf8187c8d09c02c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723891044,"stop":1672723891881,"duration":837}},{"uid":"e510807ad2903c","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/e510807ad2903c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637488329,"stop":1672637489179,"duration":850}},{"uid":"68e6d95c10a1b178","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/68e6d95c10a1b178","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551082717,"stop":1672551083534,"duration":817}},{"uid":"4371f9ecdb1dd303","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/4371f9ecdb1dd303","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464686991,"stop":1672464687858,"duration":867}},{"uid":"90593d4c1e470885","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/90593d4c1e470885","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378304169,"stop":1672378305206,"duration":1037}},{"uid":"356b8ea16e953b4d","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/356b8ea16e953b4d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291892754,"stop":1672291893779,"duration":1025}},{"uid":"2d47153f30ba73c6","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/2d47153f30ba73c6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205487438,"stop":1672205488264,"duration":826}},{"uid":"f42dae221dd8dd38","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/f42dae221dd8dd38","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119098375,"stop":1672119099647,"duration":1272}},{"uid":"2f4e713ca6cb1cb9","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/2f4e713ca6cb1cb9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032703047,"stop":1672032704171,"duration":1124}},{"uid":"2a15125515e9f667","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/2a15125515e9f667","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946301719,"stop":1671946302541,"duration":822}},{"uid":"4fe24121b9ea802f","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/4fe24121b9ea802f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859887717,"stop":1671859888560,"duration":843}},{"uid":"d9fd9504e35563e5","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/d9fd9504e35563e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773501645,"stop":1671773502783,"duration":1138}},{"uid":"ba071c718a08b804","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/ba071c718a08b804","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687091806,"stop":1671687092698,"duration":892}},{"uid":"bd6ba2bed60a2866","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/bd6ba2bed60a2866","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600686990,"stop":1671600687836,"duration":846}},{"uid":"81ec51fb7f2fa3d0","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/81ec51fb7f2fa3d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514298467,"stop":1671514299318,"duration":851}}]},"tags":[]},"source":"c2f87abaefc96ef.json","parameterValues":["'FEED'","None","2"]}