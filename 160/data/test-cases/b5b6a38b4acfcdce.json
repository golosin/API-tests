{"uid":"b5b6a38b4acfcdce","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1672464697202,"stop":1672464698038,"duration":836},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az370-243"},{"name":"thread","value":"2558-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":115,"skipped":0,"passed":0,"unknown":0,"total":115},"items":[{"uid":"8a2fcb7e8c1bfca9","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/8a2fcb7e8c1bfca9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378316861,"stop":1672378317907,"duration":1046}},{"uid":"b2f581a78515b6b6","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/b2f581a78515b6b6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291905073,"stop":1672291906103,"duration":1030}},{"uid":"eabd5f3ab048b179","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/eabd5f3ab048b179","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205497524,"stop":1672205498348,"duration":824}},{"uid":"c81537e2ef5ef708","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/c81537e2ef5ef708","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119113527,"stop":1672119114776,"duration":1249}},{"uid":"71e0e4277e1ae650","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/71e0e4277e1ae650","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032717194,"stop":1672032718341,"duration":1147}},{"uid":"8e4917524409ea69","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/8e4917524409ea69","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946311646,"stop":1671946312467,"duration":821}},{"uid":"3e3e13d17ad4d103","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/3e3e13d17ad4d103","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859897995,"stop":1671859898840,"duration":845}},{"uid":"598585090319a169","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/598585090319a169","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773515313,"stop":1671773516454,"duration":1141}},{"uid":"7c4cf00a874fe73","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/7c4cf00a874fe73","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687102119,"stop":1671687102985,"duration":866}},{"uid":"80e623e7645022d5","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/80e623e7645022d5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600697512,"stop":1671600698375,"duration":863}},{"uid":"b6592166474de415","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/b6592166474de415","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514308950,"stop":1671514309794,"duration":844}},{"uid":"7343f5ab7ac03382","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/7343f5ab7ac03382","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427930942,"stop":1671427932206,"duration":1264}},{"uid":"6f737f548590b9fd","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/6f737f548590b9fd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341523771,"stop":1671341525027,"duration":1256}},{"uid":"425d7b7bc68b62d","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/425d7b7bc68b62d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255112974,"stop":1671255113962,"duration":988}},{"uid":"e9ded5b3afc62dc6","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/e9ded5b3afc62dc6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168699880,"stop":1671168700752,"duration":872}},{"uid":"da252f48b50adac9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/da252f48b50adac9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082324781,"stop":1671082325841,"duration":1060}},{"uid":"cd22ebfcd0ac113b","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/cd22ebfcd0ac113b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995908666,"stop":1670995909703,"duration":1037}},{"uid":"efe27c5962bfbfc4","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/efe27c5962bfbfc4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909501883,"stop":1670909502728,"duration":845}},{"uid":"218ba1e6dc581828","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/218ba1e6dc581828","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823090642,"stop":1670823091470,"duration":828}},{"uid":"8d97f63118f6b5fc","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/8d97f63118f6b5fc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736694824,"stop":1670736695627,"duration":803}}]},"tags":[]},"source":"b5b6a38b4acfcdce.json","parameterValues":["'true'","'WILDBERRIES'"]}