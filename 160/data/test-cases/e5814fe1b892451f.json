{"uid":"e5814fe1b892451f","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"c68cd23a5574698c3519dd2ee8880360","time":{"start":1672464687865,"stop":1672464688704,"duration":839},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az370-243"},{"name":"thread","value":"2558-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":115,"skipped":0,"passed":0,"unknown":0,"total":115},"items":[{"uid":"e9d06d0c695674f9","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/e9d06d0c695674f9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378305214,"stop":1672378306248,"duration":1034}},{"uid":"3838db4a485b96cb","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/3838db4a485b96cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291893785,"stop":1672291894820,"duration":1035}},{"uid":"d67aae41e051588d","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/d67aae41e051588d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205488270,"stop":1672205489099,"duration":829}},{"uid":"88aebbedcd557e7c","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/88aebbedcd557e7c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119099655,"stop":1672119100901,"duration":1246}},{"uid":"8bfab2ff832b5b03","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/8bfab2ff832b5b03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032704177,"stop":1672032705442,"duration":1265}},{"uid":"ccf19d69037e83a","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/ccf19d69037e83a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946302548,"stop":1671946303363,"duration":815}},{"uid":"9535459ca5778e3c","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/9535459ca5778e3c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859888566,"stop":1671859889438,"duration":872}},{"uid":"913530a2fb93ad04","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/913530a2fb93ad04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773502789,"stop":1671773503947,"duration":1158}},{"uid":"a2c35e4ff9ac0a89","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/a2c35e4ff9ac0a89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687092705,"stop":1671687093556,"duration":851}},{"uid":"1e6d95868d1413c4","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/1e6d95868d1413c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600687842,"stop":1671600688690,"duration":848}},{"uid":"c56f3f7826d75be6","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/c56f3f7826d75be6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514299329,"stop":1671514300199,"duration":870}},{"uid":"a59a1275ab2c641","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/a59a1275ab2c641","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427916859,"stop":1671427918152,"duration":1293}},{"uid":"f6547f3e9d6eac42","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/f6547f3e9d6eac42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341509860,"stop":1671341511123,"duration":1263}},{"uid":"9829d07fd8a07d53","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/9829d07fd8a07d53","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255101790,"stop":1671255102822,"duration":1032}},{"uid":"da6e1c7fec161b48","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/da6e1c7fec161b48","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168689388,"stop":1671168690520,"duration":1132}},{"uid":"f2c12d9d8c4af893","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/f2c12d9d8c4af893","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082313224,"stop":1671082314260,"duration":1036}},{"uid":"367778fa6fdfc106","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/367778fa6fdfc106","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995897072,"stop":1670995898134,"duration":1062}},{"uid":"3b9890736806401f","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/3b9890736806401f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909492153,"stop":1670909493032,"duration":879}},{"uid":"76f869503d86a082","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/76f869503d86a082","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823081509,"stop":1670823082352,"duration":843}},{"uid":"b2f904909c929f51","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/b2f904909c929f51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736685677,"stop":1670736686494,"duration":817}}]},"tags":[]},"source":"e5814fe1b892451f.json","parameterValues":["'WILDBERRIES'","2","2"]}