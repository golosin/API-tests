{"uid":"5b9a201d7958757f","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1663137094790,"stop":1663137095664,"duration":874},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.0.9"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az459-635"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"e1ddc5cb3bcb0f67","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/e1ddc5cb3bcb0f67","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050981384,"stop":1663050982081,"duration":697}},{"uid":"b4d3695df0ddb4b4","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/b4d3695df0ddb4b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964781616,"stop":1662964782339,"duration":723}},{"uid":"f0bd601da9b89979","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/f0bd601da9b89979","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875604325,"stop":1662875605017,"duration":692}},{"uid":"8f51320a571f99e6","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/8f51320a571f99e6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845420013,"stop":1662845420926,"duration":913}},{"uid":"9eae1bd01bb6bc1a","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/9eae1bd01bb6bc1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840105776,"stop":1662840106531,"duration":755}},{"uid":"cef24c1d54549d17","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/cef24c1d54549d17","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840072140,"stop":1662840073024,"duration":884}},{"uid":"364df79202cc793c","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/364df79202cc793c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838766241,"stop":1662838766937,"duration":696}}]},"tags":[]},"source":"5b9a201d7958757f.json","parameterValues":["'false'","'FEED'"]}