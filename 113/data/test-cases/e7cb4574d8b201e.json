{"uid":"e7cb4574d8b201e","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"23513f4be8e5f79d4614a4470cdcdcbf","time":{"start":1668404575613,"stop":1668404576314,"duration":701},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az127-410"},{"name":"thread","value":"2464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":68,"skipped":0,"passed":0,"unknown":0,"total":68},"items":[{"uid":"87d7801c50794be","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/87d7801c50794be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317834682,"stop":1668317835824,"duration":1142}},{"uid":"b7e22696a61aab6c","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/b7e22696a61aab6c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231388203,"stop":1668231388900,"duration":697}},{"uid":"9f9e82914ddae07e","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/9f9e82914ddae07e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145227248,"stop":1668145227981,"duration":733}},{"uid":"5e59fc7706341f8b","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/5e59fc7706341f8b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058926781,"stop":1668058927663,"duration":882}},{"uid":"47685f8b13c8b02f","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/47685f8b13c8b02f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972708713,"stop":1667972709454,"duration":741}},{"uid":"76388a0934dea1d9","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/76388a0934dea1d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886128621,"stop":1667886129722,"duration":1101}},{"uid":"91824d3a6dec7dec","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/91824d3a6dec7dec","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799836500,"stop":1667799837374,"duration":874}},{"uid":"424d6f2b1e05779","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/424d6f2b1e05779","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712865240,"stop":1667712865947,"duration":707}},{"uid":"24df36698fac8c0b","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/24df36698fac8c0b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626467943,"stop":1667626468653,"duration":710}},{"uid":"54e3e621f1459d3e","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/54e3e621f1459d3e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540441497,"stop":1667540442353,"duration":856}},{"uid":"bd7ad49ebcd75837","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/bd7ad49ebcd75837","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454000490,"stop":1667454001359,"duration":869}},{"uid":"74bb35c463f9eac0","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/74bb35c463f9eac0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368608220,"stop":1667368608932,"duration":712}},{"uid":"5bd966cb258356e9","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/5bd966cb258356e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282426254,"stop":1667282426981,"duration":727}},{"uid":"9edcf425a2973409","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/9edcf425a2973409","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195422336,"stop":1667195423287,"duration":951}},{"uid":"595059259ce79231","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/595059259ce79231","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108544382,"stop":1667108545244,"duration":862}},{"uid":"3e6023dab1506df7","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/3e6023dab1506df7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022052131,"stop":1667022053013,"duration":882}},{"uid":"ef5b2f8131bfb772","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/ef5b2f8131bfb772","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935978914,"stop":1666935979813,"duration":899}},{"uid":"426a039f1782060a","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/426a039f1782060a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849478697,"stop":1666849479468,"duration":771}},{"uid":"b439d1c5290293bf","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/b439d1c5290293bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763257216,"stop":1666763257899,"duration":683}},{"uid":"393e74c2b53d1fb1","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/393e74c2b53d1fb1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679835396,"stop":1666679836080,"duration":684}}]},"tags":[]},"source":"e7cb4574d8b201e.json","parameterValues":["'FEED'","None","2"]}