{"uid":"be4efd563e19a852","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_category_feed_pm","historyId":"f3558b5b710adc3c9b4bfbd0f01bb5d8","time":{"start":1666504795270,"stop":1666504795976,"duration":706},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_category_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n>           token_category = response_body['data']['products']['pageInfo']['filters'][16]['widget']['attrs'][1]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:29: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az204-707"},{"name":"thread","value":"2457-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":46,"skipped":0,"passed":0,"unknown":0,"total":46},"items":[{"uid":"512c827832f58144","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/512c827832f58144","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418284651,"stop":1666418285584,"duration":933}},{"uid":"823bbb55036df11a","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/823bbb55036df11a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332234354,"stop":1666332235117,"duration":763}},{"uid":"90d93535e054c750","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/90d93535e054c750","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245452637,"stop":1666245453481,"duration":844}},{"uid":"1f92336ee79d506d","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/1f92336ee79d506d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161762769,"stop":1666161763495,"duration":726}},{"uid":"340310308a6d68a","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/340310308a6d68a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075155439,"stop":1666075156119,"duration":680}},{"uid":"97af64ac2e47e66c","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/97af64ac2e47e66c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988666242,"stop":1665988667347,"duration":1105}},{"uid":"3c225e3ee8009834","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/3c225e3ee8009834","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899933761,"stop":1665899934465,"duration":704}},{"uid":"59102e74396efc01","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/59102e74396efc01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813743716,"stop":1665813744610,"duration":894}},{"uid":"44522d53369999e0","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/44522d53369999e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729135409,"stop":1665729136106,"duration":697}},{"uid":"fe955f8fd3ee9b57","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/fe955f8fd3ee9b57","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641745420,"stop":1665641746102,"duration":682}},{"uid":"245b79bc9c2ed738","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/245b79bc9c2ed738","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554514697,"stop":1665554515805,"duration":1108}},{"uid":"499f4546ba6d5f14","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/499f4546ba6d5f14","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469422879,"stop":1665469423562,"duration":683}},{"uid":"a2fef0e236ee486d","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/a2fef0e236ee486d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383170653,"stop":1665383171366,"duration":713}},{"uid":"acae5547643fb295","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/acae5547643fb295","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294934721,"stop":1665294935585,"duration":864}},{"uid":"322cf9a93a9d2d25","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/322cf9a93a9d2d25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208223863,"stop":1665208224770,"duration":907}},{"uid":"b5cde8bf33868623","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/b5cde8bf33868623","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122046954,"stop":1665122047645,"duration":691}},{"uid":"ca36c222b7e4f4ab","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/ca36c222b7e4f4ab","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035908477,"stop":1665035909189,"duration":712}},{"uid":"6ba50f6030e21f7f","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/6ba50f6030e21f7f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949881333,"stop":1664949882032,"duration":699}},{"uid":"ea537309193d321","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/ea537309193d321","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863296579,"stop":1664863297258,"duration":679}},{"uid":"fe75419b50da08c2","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/fe75419b50da08c2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776768167,"stop":1664776769034,"duration":867}}]},"tags":[]},"source":"be4efd563e19a852.json","parameterValues":["'FEED'"]}