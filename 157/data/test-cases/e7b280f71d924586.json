{"uid":"e7b280f71d924586","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1672205505083,"stop":1672205505905,"duration":822},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.3"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az189-385"},{"name":"thread","value":"2466-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":112,"skipped":0,"passed":0,"unknown":0,"total":112},"items":[{"uid":"b36df428c7946b27","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/b36df428c7946b27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119124880,"stop":1672119126132,"duration":1252}},{"uid":"87eb39126b1bcbf5","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/87eb39126b1bcbf5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032727349,"stop":1672032728462,"duration":1113}},{"uid":"82b6bb22014733ef","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/82b6bb22014733ef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946319154,"stop":1671946319983,"duration":829}},{"uid":"9623004266e7750e","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/9623004266e7750e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859905621,"stop":1671859906476,"duration":855}},{"uid":"489e923e26dd147c","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/489e923e26dd147c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773525698,"stop":1671773526890,"duration":1192}},{"uid":"8150c1e28ccb614c","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/8150c1e28ccb614c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687109850,"stop":1671687110680,"duration":830}},{"uid":"e1a4b321c2f10289","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/e1a4b321c2f10289","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600705597,"stop":1671600706445,"duration":848}},{"uid":"7cc0b29602961baf","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/7cc0b29602961baf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514316661,"stop":1671514317512,"duration":851}},{"uid":"415a31d9bf52d768","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/415a31d9bf52d768","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427942393,"stop":1671427943654,"duration":1261}},{"uid":"dabd1e7b5e7b815","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/dabd1e7b5e7b815","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341535125,"stop":1671341536360,"duration":1235}},{"uid":"f2fa467a39d8ea9c","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/f2fa467a39d8ea9c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255122061,"stop":1671255123060,"duration":999}},{"uid":"ea1b4695c551d95","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/ea1b4695c551d95","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168708143,"stop":1671168709015,"duration":872}},{"uid":"2b667a019f0d4b09","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/2b667a019f0d4b09","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082334336,"stop":1671082335394,"duration":1058}},{"uid":"168605315b96bf0a","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/168605315b96bf0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995918126,"stop":1670995919141,"duration":1015}},{"uid":"fa032e0c4f797709","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/fa032e0c4f797709","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909509689,"stop":1670909510560,"duration":871}},{"uid":"5c27799fb8829a39","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/5c27799fb8829a39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823098150,"stop":1670823098961,"duration":811}},{"uid":"78b842330277f81e","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/78b842330277f81e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736702207,"stop":1670736703013,"duration":806}},{"uid":"4d97f5958f612c12","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/4d97f5958f612c12","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650330480,"stop":1670650331728,"duration":1248}},{"uid":"a84f4fc2e55c82d4","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/a84f4fc2e55c82d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563908733,"stop":1670563909800,"duration":1067}},{"uid":"57c9f3deed579554","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/57c9f3deed579554","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477501121,"stop":1670477501959,"duration":838}}]},"tags":[]},"source":"e7b280f71d924586.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}