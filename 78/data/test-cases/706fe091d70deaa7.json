{"uid":"706fe091d70deaa7","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1665383163457,"stop":1665383164165,"duration":708},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az177-244"},{"name":"thread","value":"2547-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":33,"skipped":0,"passed":0,"unknown":0,"total":33},"items":[{"uid":"718ef10c0654e8c9","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/718ef10c0654e8c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294925943,"stop":1665294926804,"duration":861}},{"uid":"9046498e91a6e2d5","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/9046498e91a6e2d5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208215062,"stop":1665208215924,"duration":862}},{"uid":"6a4e4dc0bfbb366f","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/6a4e4dc0bfbb366f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122040046,"stop":1665122040730,"duration":684}},{"uid":"8fdf5fe2b761b228","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/8fdf5fe2b761b228","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035901361,"stop":1665035902070,"duration":709}},{"uid":"598b9abac9c55839","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/598b9abac9c55839","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949874325,"stop":1664949875002,"duration":677}},{"uid":"85d3f65d5743b1dd","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/85d3f65d5743b1dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863289607,"stop":1664863290321,"duration":714}},{"uid":"b13bdedb84a0b30f","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/b13bdedb84a0b30f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776759225,"stop":1664776760116,"duration":891}},{"uid":"47334cbbc0189cdc","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/47334cbbc0189cdc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690386949,"stop":1664690388060,"duration":1111}},{"uid":"11c2397a3a8335a3","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/11c2397a3a8335a3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519855367,"stop":1664519856462,"duration":1095}},{"uid":"fd7bedce17a365a","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/fd7bedce17a365a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433536319,"stop":1664433537426,"duration":1107}},{"uid":"7bad392e7f311e02","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/7bad392e7f311e02","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346848223,"stop":1664346849102,"duration":879}},{"uid":"4cecfc21e3f0999a","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/4cecfc21e3f0999a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260024937,"stop":1664260025813,"duration":876}},{"uid":"8166075dfc0d9af3","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/8166075dfc0d9af3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173993979,"stop":1664173994670,"duration":691}},{"uid":"db31869375f60e2d","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/db31869375f60e2d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085268116,"stop":1664085269034,"duration":918}},{"uid":"64aac16bbb0a7fff","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/64aac16bbb0a7fff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999152017,"stop":1663999153117,"duration":1100}},{"uid":"c02fba7287209e5e","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/c02fba7287209e5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914345387,"stop":1663914346071,"duration":684}},{"uid":"a3a8853dee5d7642","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/a3a8853dee5d7642","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828211834,"stop":1663828212718,"duration":884}},{"uid":"546420a38d71fb10","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/546420a38d71fb10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742170330,"stop":1663742171448,"duration":1118}},{"uid":"5bdfe927ce83efd5","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/5bdfe927ce83efd5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655461195,"stop":1663655462075,"duration":880}},{"uid":"a794fc8b62d0582e","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/a794fc8b62d0582e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569582583,"stop":1663569583263,"duration":680}}]},"tags":[]},"source":"706fe091d70deaa7.json","parameterValues":["'true'","'WILDBERRIES'"]}