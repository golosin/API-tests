{"uid":"e72a493fd9febcf8","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1666849489407,"stop":1666849490116,"duration":709},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az201-788"},{"name":"thread","value":"2432-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":50,"skipped":0,"passed":0,"unknown":0,"total":50},"items":[{"uid":"1422d3348981b98a","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/1422d3348981b98a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763267710,"stop":1666763268502,"duration":792}},{"uid":"aa9481c080b07206","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/aa9481c080b07206","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679845866,"stop":1666679846539,"duration":673}},{"uid":"f489f76718eceb79","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/f489f76718eceb79","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593703400,"stop":1666593704072,"duration":672}},{"uid":"cb399f16f3e3a70d","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/cb399f16f3e3a70d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504790296,"stop":1666504790989,"duration":693}},{"uid":"e4af26cf7208f1b2","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/e4af26cf7208f1b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418278090,"stop":1666418278972,"duration":882}},{"uid":"1c4477aed0b2d467","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/1c4477aed0b2d467","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332229277,"stop":1666332229991,"duration":714}},{"uid":"93f19b55d68129be","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/93f19b55d68129be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245447663,"stop":1666245448377,"duration":714}},{"uid":"6b21bbba04d25811","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/6b21bbba04d25811","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161757930,"stop":1666161758619,"duration":689}},{"uid":"f41d7dd4db8b0775","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/f41d7dd4db8b0775","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075150609,"stop":1666075151297,"duration":688}},{"uid":"a7c4801bf74755c","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/a7c4801bf74755c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988658451,"stop":1665988659548,"duration":1097}},{"uid":"f93b65233cc97099","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/f93b65233cc97099","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899928712,"stop":1665899929425,"duration":713}},{"uid":"5be60eb198d0393b","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/5be60eb198d0393b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813737507,"stop":1665813738381,"duration":874}},{"uid":"c26ff769af9d490c","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/c26ff769af9d490c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729130321,"stop":1665729131040,"duration":719}},{"uid":"d0dde909ece0227d","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/d0dde909ece0227d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641740530,"stop":1665641741211,"duration":681}},{"uid":"9d0994cde913c152","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/9d0994cde913c152","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554506877,"stop":1665554508020,"duration":1143}},{"uid":"a8942c158c29718c","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/a8942c158c29718c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469417974,"stop":1665469418672,"duration":698}},{"uid":"a46125308bb9bc55","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/a46125308bb9bc55","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383165596,"stop":1665383166302,"duration":706}},{"uid":"226021814bc36ce9","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/226021814bc36ce9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294928577,"stop":1665294929435,"duration":858}},{"uid":"1737c7a2b188f851","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/1737c7a2b188f851","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208217687,"stop":1665208218592,"duration":905}},{"uid":"f6bdd75a24bc8ebc","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/f6bdd75a24bc8ebc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122042109,"stop":1665122042784,"duration":675}}]},"tags":[]},"source":"e72a493fd9febcf8.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}