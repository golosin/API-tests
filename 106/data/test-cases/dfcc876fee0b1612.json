{"uid":"dfcc876fee0b1612","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1667799854784,"stop":1667799855644,"duration":860},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az365-424"},{"name":"thread","value":"2484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":61,"skipped":0,"passed":0,"unknown":0,"total":61},"items":[{"uid":"a4cdaa50a550fd93","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/a4cdaa50a550fd93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712880148,"stop":1667712880855,"duration":707}},{"uid":"2ced73864e8f2b58","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/2ced73864e8f2b58","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626483270,"stop":1667626484038,"duration":768}},{"uid":"39614f203aec941b","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/39614f203aec941b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540460095,"stop":1667540460960,"duration":865}},{"uid":"edad679ecd56d915","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/edad679ecd56d915","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454019310,"stop":1667454020192,"duration":882}},{"uid":"879e039ee8ebaa62","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/879e039ee8ebaa62","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368623595,"stop":1667368624333,"duration":738}},{"uid":"4d0754059c6afdf5","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/4d0754059c6afdf5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282441337,"stop":1667282442046,"duration":709}},{"uid":"975798551822e9e2","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/975798551822e9e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195441114,"stop":1667195441993,"duration":879}},{"uid":"70d4ccd03ba86c6e","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/70d4ccd03ba86c6e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108563058,"stop":1667108563919,"duration":861}},{"uid":"7cb65df9edb7fd9d","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/7cb65df9edb7fd9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022071211,"stop":1667022072116,"duration":905}},{"uid":"c0b01830723cf5e8","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/c0b01830723cf5e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935998078,"stop":1666935998995,"duration":917}},{"uid":"51ad12286b888152","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/51ad12286b888152","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849493614,"stop":1666849494312,"duration":698}},{"uid":"cf5eb66d9dbbdf44","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/cf5eb66d9dbbdf44","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763272177,"stop":1666763272867,"duration":690}},{"uid":"4966fc54866b16ac","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/4966fc54866b16ac","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679850004,"stop":1666679850687,"duration":683}},{"uid":"6d97c339a7c9e84c","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/6d97c339a7c9e84c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593707544,"stop":1666593708222,"duration":678}},{"uid":"7fc4a33c78e3d38c","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/7fc4a33c78e3d38c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504794537,"stop":1666504795263,"duration":726}},{"uid":"a970ba166fa15d3","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/a970ba166fa15d3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418283732,"stop":1666418284644,"duration":912}},{"uid":"b7dd30eb06f2f183","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/b7dd30eb06f2f183","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332233639,"stop":1666332234347,"duration":708}},{"uid":"4736be89533a4c","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/4736be89533a4c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245451911,"stop":1666245452627,"duration":716}},{"uid":"f491eb9dcb77e90c","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/f491eb9dcb77e90c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161762083,"stop":1666161762761,"duration":678}},{"uid":"da9d7c2f8d337976","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/da9d7c2f8d337976","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075154756,"stop":1666075155432,"duration":676}}]},"tags":[]},"source":"dfcc876fee0b1612.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}