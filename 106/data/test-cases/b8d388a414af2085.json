{"uid":"b8d388a414af2085","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1667799851303,"stop":1667799852168,"duration":865},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az365-424"},{"name":"thread","value":"2484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":61,"skipped":0,"passed":0,"unknown":0,"total":61},"items":[{"uid":"106895d04aa087cb","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/106895d04aa087cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712877269,"stop":1667712877950,"duration":681}},{"uid":"55b4808780014c32","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/55b4808780014c32","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626480413,"stop":1667626481127,"duration":714}},{"uid":"2a0b61f2e5ca93da","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/2a0b61f2e5ca93da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540456550,"stop":1667540457457,"duration":907}},{"uid":"b59e19cf07e1a17a","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/b59e19cf07e1a17a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454015719,"stop":1667454016616,"duration":897}},{"uid":"8b9ba54f017b30f6","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/8b9ba54f017b30f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368620541,"stop":1667368621251,"duration":710}},{"uid":"aaea85a27bc6379b","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/aaea85a27bc6379b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282438481,"stop":1667282439185,"duration":704}},{"uid":"9ef7c8c4bb7c78d8","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/9ef7c8c4bb7c78d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195437597,"stop":1667195438484,"duration":887}},{"uid":"cd5bcde045f6cbd4","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/cd5bcde045f6cbd4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108559522,"stop":1667108560382,"duration":860}},{"uid":"49d52989f2ae6cb5","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/49d52989f2ae6cb5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022067512,"stop":1667022068431,"duration":919}},{"uid":"cfb6d848f6218ff0","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/cfb6d848f6218ff0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935994398,"stop":1666935995330,"duration":932}},{"uid":"6205cece5c126f86","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/6205cece5c126f86","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849490832,"stop":1666849491519,"duration":687}},{"uid":"57e8dc2a66ad7e07","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/57e8dc2a66ad7e07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763269284,"stop":1666763270028,"duration":744}},{"uid":"9cf0cc1cbc026bf","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/9cf0cc1cbc026bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679847233,"stop":1666679847934,"duration":701}},{"uid":"6df566bea6501c46","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/6df566bea6501c46","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593704768,"stop":1666593705454,"duration":686}},{"uid":"d692cb632c04a4bf","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/d692cb632c04a4bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504791715,"stop":1666504792408,"duration":693}},{"uid":"ebeab3ffc65deb91","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/ebeab3ffc65deb91","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418279873,"stop":1666418280744,"duration":871}},{"uid":"3fd830a4cf4e8705","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/3fd830a4cf4e8705","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332230703,"stop":1666332231468,"duration":765}},{"uid":"4d5f28dd3186557f","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/4d5f28dd3186557f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245449083,"stop":1666245449777,"duration":694}},{"uid":"ec9b4bbd507297b5","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/ec9b4bbd507297b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161759326,"stop":1666161760013,"duration":687}},{"uid":"f0d9d2d097dfa415","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/f0d9d2d097dfa415","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075151996,"stop":1666075152678,"duration":682}}]},"tags":[]},"source":"b8d388a414af2085.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}