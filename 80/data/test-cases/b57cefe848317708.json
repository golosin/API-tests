{"uid":"b57cefe848317708","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1665554489028,"stop":1665554490129,"duration":1101},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az449-85"},{"name":"thread","value":"2476-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":0,"unknown":0,"total":35},"items":[{"uid":"8e39cf3f4aeb8bdd","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/8e39cf3f4aeb8bdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469406747,"stop":1665469407438,"duration":691}},{"uid":"2a7e2db272757d","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2a7e2db272757d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383154019,"stop":1665383154737,"duration":718}},{"uid":"77257ef3bd95da23","reportUrl":"https://golosin.github.io/API-tests/77//#testresult/77257ef3bd95da23","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665294914594,"stop":1665294915461,"duration":867}},{"uid":"fac32dfd4af8a695","reportUrl":"https://golosin.github.io/API-tests/76//#testresult/fac32dfd4af8a695","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665208203618,"stop":1665208204485,"duration":867}},{"uid":"1f4dc54ed2503acb","reportUrl":"https://golosin.github.io/API-tests/75//#testresult/1f4dc54ed2503acb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665122030960,"stop":1665122031647,"duration":687}},{"uid":"b7a9d9c673146108","reportUrl":"https://golosin.github.io/API-tests/74//#testresult/b7a9d9c673146108","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665035892079,"stop":1665035892773,"duration":694}},{"uid":"7afabae20cbaa96c","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/7afabae20cbaa96c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949865312,"stop":1664949865986,"duration":674}},{"uid":"dbb4e5f2224172dd","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/dbb4e5f2224172dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863280619,"stop":1664863281295,"duration":676}},{"uid":"48fbeab09b62dca7","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/48fbeab09b62dca7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776747678,"stop":1664776748577,"duration":899}},{"uid":"ca3d299fcc6361e3","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/ca3d299fcc6361e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690372480,"stop":1664690373588,"duration":1108}},{"uid":"32ea4005f53f6222","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/32ea4005f53f6222","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519840941,"stop":1664519842045,"duration":1104}},{"uid":"ecb5e7e011ebbcfa","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/ecb5e7e011ebbcfa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433521837,"stop":1664433522934,"duration":1097}},{"uid":"93043db0c4b1c3c3","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/93043db0c4b1c3c3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346836702,"stop":1664346837570,"duration":868}},{"uid":"34a43a7e2fa739cc","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/34a43a7e2fa739cc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260013516,"stop":1664260014400,"duration":884}},{"uid":"c2299d66561a6697","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/c2299d66561a6697","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173984671,"stop":1664173985388,"duration":717}},{"uid":"fa17e509ca050020","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/fa17e509ca050020","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085256588,"stop":1664085257459,"duration":871}},{"uid":"9524a72e3b58d369","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/9524a72e3b58d369","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999137533,"stop":1663999138645,"duration":1112}},{"uid":"d8a3d70184a5c681","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/d8a3d70184a5c681","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914336231,"stop":1663914336923,"duration":692}},{"uid":"897dc61ae7412213","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/897dc61ae7412213","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828200019,"stop":1663828200897,"duration":878}},{"uid":"8dc5b23df5852d6e","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/8dc5b23df5852d6e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742155740,"stop":1663742156857,"duration":1117}}]},"tags":[]},"source":"b57cefe848317708.json","parameterValues":["'FEED'","2","None"]}