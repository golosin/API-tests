{"uid":"1d02521fcdf397e","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1671427934770,"stop":1671427936030,"duration":1260},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az178-813"},{"name":"thread","value":"2467-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":103,"skipped":0,"passed":0,"unknown":0,"total":103},"items":[{"uid":"63b09a241045bab9","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/63b09a241045bab9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341527578,"stop":1671341528813,"duration":1235}},{"uid":"c481753909966f6f","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/c481753909966f6f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255115957,"stop":1671255116988,"duration":1031}},{"uid":"5575aaa909fb213e","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/5575aaa909fb213e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168702880,"stop":1671168703759,"duration":879}},{"uid":"cd4226adc7dd758","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/cd4226adc7dd758","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082328101,"stop":1671082329131,"duration":1030}},{"uid":"3f014fa541815488","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/3f014fa541815488","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995911735,"stop":1670995913125,"duration":1390}},{"uid":"72ab0613ef2ebce3","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/72ab0613ef2ebce3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909504482,"stop":1670909505326,"duration":844}},{"uid":"fbd31d538b375617","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/fbd31d538b375617","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823093118,"stop":1670823093950,"duration":832}},{"uid":"23fb55b8d6df91fc","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/23fb55b8d6df91fc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736697287,"stop":1670736698116,"duration":829}},{"uid":"7d5e7c96eb701805","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/7d5e7c96eb701805","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650322995,"stop":1670650324273,"duration":1278}},{"uid":"7e6a56bfd174f08d","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/7e6a56bfd174f08d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563902566,"stop":1670563903593,"duration":1027}},{"uid":"d734c347e1e848cb","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/d734c347e1e848cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477495983,"stop":1670477496860,"duration":877}},{"uid":"52fb037ba51d1c69","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/52fb037ba51d1c69","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391098295,"stop":1670391099197,"duration":902}},{"uid":"9e8aa699ab08f100","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/9e8aa699ab08f100","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304735323,"stop":1670304736260,"duration":937}},{"uid":"2bcf221907c71014","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/2bcf221907c71014","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218320722,"stop":1670218321590,"duration":868}},{"uid":"1c627200e2b04a4c","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/1c627200e2b04a4c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131904829,"stop":1670131905888,"duration":1059}},{"uid":"469820758d1ddfdc","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/469820758d1ddfdc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045502760,"stop":1670045503606,"duration":846}},{"uid":"fe5def468d8871e7","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/fe5def468d8871e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959125728,"stop":1669959126796,"duration":1068}},{"uid":"28d38eed9da9ffc0","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/28d38eed9da9ffc0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872849535,"stop":1669872850633,"duration":1098}},{"uid":"6f74c46d632ba868","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/6f74c46d632ba868","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786405266,"stop":1669786406394,"duration":1128}},{"uid":"cd6dfcd625b5cdd4","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/cd6dfcd625b5cdd4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699973964,"stop":1669699975056,"duration":1092}}]},"tags":[]},"source":"1d02521fcdf397e.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}