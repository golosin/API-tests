{"uid":"cb79a1d8b357f49b","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1669181581677,"stop":1669181583454,"duration":1777},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az453-211"},{"name":"thread","value":"2512-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":77,"skipped":0,"passed":0,"unknown":0,"total":77},"items":[{"uid":"480b03b79b669f75","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/480b03b79b669f75","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095309630,"stop":1669095310355,"duration":725}},{"uid":"424a576237f2a5bd","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/424a576237f2a5bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008914127,"stop":1669008914995,"duration":868}},{"uid":"a34183686383c465","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/a34183686383c465","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922470962,"stop":1668922472140,"duration":1178}},{"uid":"315a301b4f89a93c","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/315a301b4f89a93c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836044648,"stop":1668836045885,"duration":1237}},{"uid":"a8203c671f5a5d56","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/a8203c671f5a5d56","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749689022,"stop":1668749689903,"duration":881}},{"uid":"e6fa9b068cdfda01","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/e6fa9b068cdfda01","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663318424,"stop":1668663319322,"duration":898}},{"uid":"afa1d52c56b6bcff","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/afa1d52c56b6bcff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576869797,"stop":1668576870673,"duration":876}},{"uid":"80c21e583c20b550","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/80c21e583c20b550","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490454824,"stop":1668490455704,"duration":880}},{"uid":"d73c9b139098fa4e","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/d73c9b139098fa4e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404582875,"stop":1668404583575,"duration":700}},{"uid":"6169578c39a1b267","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/6169578c39a1b267","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317845984,"stop":1668317847154,"duration":1170}},{"uid":"506326646acd6331","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/506326646acd6331","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231395314,"stop":1668231395996,"duration":682}},{"uid":"313351d3523aee82","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/313351d3523aee82","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145234250,"stop":1668145234949,"duration":699}},{"uid":"d5d605a777355ec4","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/d5d605a777355ec4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058935757,"stop":1668058936637,"duration":880}},{"uid":"ddee9dc55ff63140","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/ddee9dc55ff63140","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972716486,"stop":1667972717238,"duration":752}},{"uid":"afd7231977cef6b8","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/afd7231977cef6b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886139632,"stop":1667886140739,"duration":1107}},{"uid":"36f217b471579a07","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/36f217b471579a07","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799845202,"stop":1667799846111,"duration":909}},{"uid":"6917a1a0881f5248","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/6917a1a0881f5248","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712872299,"stop":1667712872986,"duration":687}},{"uid":"943528385f8500a7","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/943528385f8500a7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626475162,"stop":1667626475944,"duration":782}},{"uid":"c3bdb049ea78dd6e","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/c3bdb049ea78dd6e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540450393,"stop":1667540451262,"duration":869}},{"uid":"8cc7136e54c7f20c","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/8cc7136e54c7f20c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454009465,"stop":1667454010385,"duration":920}}]},"tags":[]},"source":"cb79a1d8b357f49b.json","parameterValues":["'true'","'FEED'"]}