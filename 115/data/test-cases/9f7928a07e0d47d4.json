{"uid":"9f7928a07e0d47d4","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1668576883851,"stop":1668576884748,"duration":897},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az196-389"},{"name":"thread","value":"2450-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":70,"skipped":0,"passed":0,"unknown":0,"total":70},"items":[{"uid":"fb454b8c2243fdb8","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/fb454b8c2243fdb8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490468343,"stop":1668490469218,"duration":875}},{"uid":"c32eddd303958d5e","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/c32eddd303958d5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404593690,"stop":1668404594396,"duration":706}},{"uid":"685f189e23dc1ee","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/685f189e23dc1ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317863041,"stop":1668317864145,"duration":1104}},{"uid":"9dee32fdffc7f59","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/9dee32fdffc7f59","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231405821,"stop":1668231406514,"duration":693}},{"uid":"a231cedc8ed454a8","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/a231cedc8ed454a8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145245628,"stop":1668145246307,"duration":679}},{"uid":"e02af4813cd2bd2","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/e02af4813cd2bd2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058949223,"stop":1668058950091,"duration":868}},{"uid":"a2d5870315ca9909","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/a2d5870315ca9909","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972727584,"stop":1667972728302,"duration":718}},{"uid":"4a92e0b2138b47ae","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/4a92e0b2138b47ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886156149,"stop":1667886157225,"duration":1076}},{"uid":"318ac186fa30348","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/318ac186fa30348","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799858317,"stop":1667799859171,"duration":854}},{"uid":"42c989097dc30155","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/42c989097dc30155","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712883055,"stop":1667712883754,"duration":699}},{"uid":"675ffbf726127cb8","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/675ffbf726127cb8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626486216,"stop":1667626486915,"duration":699}},{"uid":"5fd23a06ef27b60d","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/5fd23a06ef27b60d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540463643,"stop":1667540464510,"duration":867}},{"uid":"bb39a30328443262","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/bb39a30328443262","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454022924,"stop":1667454023813,"duration":889}},{"uid":"d6ed48ea34642719","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/d6ed48ea34642719","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368626530,"stop":1667368627327,"duration":797}},{"uid":"5136fef62a5d7456","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/5136fef62a5d7456","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282444179,"stop":1667282444881,"duration":702}},{"uid":"5f3d2aa15b169316","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/5f3d2aa15b169316","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195444609,"stop":1667195445475,"duration":866}},{"uid":"cbae13d5f6d8cc43","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/cbae13d5f6d8cc43","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108566608,"stop":1667108567483,"duration":875}},{"uid":"dd91a9ac7c8b6566","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/dd91a9ac7c8b6566","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022074854,"stop":1667022075721,"duration":867}},{"uid":"445e0f6003e24bb8","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/445e0f6003e24bb8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666936001729,"stop":1666936002650,"duration":921}},{"uid":"f7d0d93b1b6bc9f2","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/f7d0d93b1b6bc9f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849496429,"stop":1666849497103,"duration":674}}]},"tags":[]},"source":"9f7928a07e0d47d4.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}