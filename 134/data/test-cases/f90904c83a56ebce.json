{"uid":"f90904c83a56ebce","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1670218326018,"stop":1670218326879,"duration":861},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az646-18"},{"name":"thread","value":"2505-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":89,"skipped":0,"passed":0,"unknown":0,"total":89},"items":[{"uid":"1b678d4c5e410d59","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/1b678d4c5e410d59","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131911265,"stop":1670131912311,"duration":1046}},{"uid":"8c202be2f2e53c40","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/8c202be2f2e53c40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045507856,"stop":1670045508706,"duration":850}},{"uid":"fc149f371a0550b4","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/fc149f371a0550b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959131917,"stop":1669959132918,"duration":1001}},{"uid":"fee18040f5c66171","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/fee18040f5c66171","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872856240,"stop":1669872857365,"duration":1125}},{"uid":"52d7709b53facac","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/52d7709b53facac","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786412141,"stop":1669786413250,"duration":1109}},{"uid":"80364da4cd533241","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/80364da4cd533241","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699980617,"stop":1669699981723,"duration":1106}},{"uid":"6da4ce27025de965","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/6da4ce27025de965","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613567352,"stop":1669613568046,"duration":694}},{"uid":"7146cfedd7c633a2","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/7146cfedd7c633a2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527115378,"stop":1669527116097,"duration":719}},{"uid":"4c6a375049016c31","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/4c6a375049016c31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440708752,"stop":1669440709477,"duration":725}},{"uid":"10e0bb7f52184db7","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/10e0bb7f52184db7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354352920,"stop":1669354353603,"duration":683}},{"uid":"c032a074d970b381","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/c032a074d970b381","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267954601,"stop":1669267955297,"duration":696}},{"uid":"5effae7a066ed199","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/5effae7a066ed199","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181598049,"stop":1669181599282,"duration":1233}},{"uid":"d4227261f61fbe31","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/d4227261f61fbe31","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095320663,"stop":1669095321344,"duration":681}},{"uid":"7c0bbb2cc7c8d2bf","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/7c0bbb2cc7c8d2bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008924655,"stop":1669008925617,"duration":962}},{"uid":"f8ffa54732711b0a","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/f8ffa54732711b0a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922483346,"stop":1668922484460,"duration":1114}},{"uid":"7c85b134c6451c1d","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/7c85b134c6451c1d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836058101,"stop":1668836059243,"duration":1142}},{"uid":"cca8139c7c6edcdc","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/cca8139c7c6edcdc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749699000,"stop":1668749699872,"duration":872}},{"uid":"21c6801f9d3f0c1","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/21c6801f9d3f0c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663329850,"stop":1668663330698,"duration":848}},{"uid":"179e98e5d0ed3542","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/179e98e5d0ed3542","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576880336,"stop":1668576881202,"duration":866}},{"uid":"ed517d1dfeeaf019","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/ed517d1dfeeaf019","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490464731,"stop":1668490465621,"duration":890}}]},"tags":[]},"source":"f90904c83a56ebce.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}