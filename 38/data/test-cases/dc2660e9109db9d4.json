{"uid":"dc2660e9109db9d4","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"2123d06f5e8568dabdf52ca04ea00773","time":{"start":1662617522603,"stop":1662617523318,"duration":715},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = None, sale_price_max = 100\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:74: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az190-320"},{"name":"thread","value":"2624-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"100"},{"name":"sale_price_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":6,"unknown":0,"total":9},"items":[{"uid":"b7d0592183c927f5","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/b7d0592183c927f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532720023,"stop":1662532721116,"duration":1093}},{"uid":"49c5ba7dfe12eaa8","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/49c5ba7dfe12eaa8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446444983,"stop":1662446445682,"duration":699}},{"uid":"6bf32cea64096072","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/6bf32cea64096072","status":"passed","time":{"start":1662359151712,"stop":1662359153004,"duration":1292}},{"uid":"46bad5c553ff1980","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/46bad5c553ff1980","status":"passed","time":{"start":1662270548441,"stop":1662270549717,"duration":1276}},{"uid":"181d602f4d9cd1e0","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/181d602f4d9cd1e0","status":"passed","time":{"start":1662184019833,"stop":1662184021379,"duration":1546}},{"uid":"c3eb6adbfa63019d","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/c3eb6adbfa63019d","status":"passed","time":{"start":1662099262124,"stop":1662099263731,"duration":1607}},{"uid":"314ab4c0f065ee38","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/314ab4c0f065ee38","status":"passed","time":{"start":1662012147773,"stop":1662012149538,"duration":1765}},{"uid":"9906d76084cf5253","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/9906d76084cf5253","status":"passed","time":{"start":1661928387558,"stop":1661928389405,"duration":1847}}]},"tags":[]},"source":"dc2660e9109db9d4.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","100","None"]}