{"uid":"4f6140ec35965f64","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1662617536602,"stop":1662617537282,"duration":680},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.0.8"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az190-320"},{"name":"thread","value":"2624-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":6,"unknown":0,"total":9},"items":[{"uid":"8eea62f284adbe8e","reportUrl":"https://golosin.github.io/API-tests/37//#testresult/8eea62f284adbe8e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662532742446,"stop":1662532743556,"duration":1110}},{"uid":"a41bd7291c21e185","reportUrl":"https://golosin.github.io/API-tests/36//#testresult/a41bd7291c21e185","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662446459278,"stop":1662446460005,"duration":727}},{"uid":"c6884b7aacf354ae","reportUrl":"https://golosin.github.io/API-tests/35//#testresult/c6884b7aacf354ae","status":"passed","time":{"start":1662359175841,"stop":1662359177243,"duration":1402}},{"uid":"49f750ffb4de259","reportUrl":"https://golosin.github.io/API-tests/34//#testresult/49f750ffb4de259","status":"passed","time":{"start":1662270573015,"stop":1662270574553,"duration":1538}},{"uid":"fa8fb33a780aec58","reportUrl":"https://golosin.github.io/API-tests/33//#testresult/fa8fb33a780aec58","status":"passed","time":{"start":1662184048900,"stop":1662184050607,"duration":1707}},{"uid":"9489b2b87c614007","reportUrl":"https://golosin.github.io/API-tests/32//#testresult/9489b2b87c614007","status":"passed","time":{"start":1662099291368,"stop":1662099293116,"duration":1748}},{"uid":"831346342ff87e1d","reportUrl":"https://golosin.github.io/API-tests/31//#testresult/831346342ff87e1d","status":"passed","time":{"start":1662012182108,"stop":1662012184048,"duration":1940}},{"uid":"a31a8dd5c7caabcd","reportUrl":"https://golosin.github.io/API-tests/30//#testresult/a31a8dd5c7caabcd","status":"passed","time":{"start":1661928421879,"stop":1661928423808,"duration":1929}}]},"tags":[]},"source":"4f6140ec35965f64.json","parameterValues":["'false'","'WILDBERRIES'"]}