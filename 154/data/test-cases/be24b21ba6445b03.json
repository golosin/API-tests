{"uid":"be24b21ba6445b03","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1671946300883,"stop":1671946301705,"duration":822},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az351-823"},{"name":"thread","value":"2517-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":109,"skipped":0,"passed":0,"unknown":0,"total":109},"items":[{"uid":"78db5bf09a6abe7d","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/78db5bf09a6abe7d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859886861,"stop":1671859887701,"duration":840}},{"uid":"c2d20ce274a39676","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/c2d20ce274a39676","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773500475,"stop":1671773501630,"duration":1155}},{"uid":"40a2ab16a61ad717","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/40a2ab16a61ad717","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687090946,"stop":1671687091786,"duration":840}},{"uid":"e78cef07488ef9ae","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/e78cef07488ef9ae","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600686101,"stop":1671600686984,"duration":883}},{"uid":"a8b120fecd824784","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/a8b120fecd824784","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514297615,"stop":1671514298458,"duration":843}},{"uid":"6129e2ceb92441a","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/6129e2ceb92441a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427914285,"stop":1671427915557,"duration":1272}},{"uid":"4b567622617452cd","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/4b567622617452cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341507370,"stop":1671341508604,"duration":1234}},{"uid":"944c54578fac1d44","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/944c54578fac1d44","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255099780,"stop":1671255100769,"duration":989}},{"uid":"97b7f983cd47c0ea","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/97b7f983cd47c0ea","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168687605,"stop":1671168688485,"duration":880}},{"uid":"2d8c3d6b0c9dffe5","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/2d8c3d6b0c9dffe5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082311197,"stop":1671082312188,"duration":991}},{"uid":"679864ec48399e3","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/679864ec48399e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995894995,"stop":1670995896036,"duration":1041}},{"uid":"9fe5619f8e521431","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/9fe5619f8e521431","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909490364,"stop":1670909491232,"duration":868}},{"uid":"ea9b7c56aac675d6","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/ea9b7c56aac675d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823079757,"stop":1670823080622,"duration":865}},{"uid":"2d71e9e5c36fb44a","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/2d71e9e5c36fb44a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736684050,"stop":1670736684862,"duration":812}},{"uid":"9d05dec398d3f744","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/9d05dec398d3f744","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650303001,"stop":1670650304261,"duration":1260}},{"uid":"c8a6b9c21081981","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/c8a6b9c21081981","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563886154,"stop":1670563887171,"duration":1017}},{"uid":"d78fef5c0a33468a","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/d78fef5c0a33468a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477482454,"stop":1670477483290,"duration":836}},{"uid":"ed555f62063ab662","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/ed555f62063ab662","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391084321,"stop":1670391085162,"duration":841}},{"uid":"457e4dad5ca87d27","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/457e4dad5ca87d27","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304720866,"stop":1670304721748,"duration":882}},{"uid":"235d9d9a6e594eef","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/235d9d9a6e594eef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218306419,"stop":1670218307300,"duration":881}}]},"tags":[]},"source":"be24b21ba6445b03.json","parameterValues":["'FEED'","2","None"]}