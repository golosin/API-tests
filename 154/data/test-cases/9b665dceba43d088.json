{"uid":"9b665dceba43d088","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1671946312472,"stop":1671946313295,"duration":823},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az351-823"},{"name":"thread","value":"2517-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":109,"skipped":0,"passed":0,"unknown":0,"total":109},"items":[{"uid":"5fca3bb4b62c5504","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/5fca3bb4b62c5504","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859898846,"stop":1671859899678,"duration":832}},{"uid":"18112a3634587d61","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/18112a3634587d61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773516459,"stop":1671773517590,"duration":1131}},{"uid":"2e773572ea791c44","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/2e773572ea791c44","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687102991,"stop":1671687103822,"duration":831}},{"uid":"982c656f3bd427a9","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/982c656f3bd427a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600698381,"stop":1671600699285,"duration":904}},{"uid":"9f1138e5365bb5b4","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/9f1138e5365bb5b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514309803,"stop":1671514310642,"duration":839}},{"uid":"c0f237d6d33e86d9","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/c0f237d6d33e86d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427932213,"stop":1671427933493,"duration":1280}},{"uid":"6d2f0f6e0e96437","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/6d2f0f6e0e96437","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341525034,"stop":1671341526323,"duration":1289}},{"uid":"ae196998f8405e57","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/ae196998f8405e57","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255113968,"stop":1671255114948,"duration":980}},{"uid":"2dd8437531f27d7","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/2dd8437531f27d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168700760,"stop":1671168701676,"duration":916}},{"uid":"e402179c86671e0f","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/e402179c86671e0f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082325849,"stop":1671082326974,"duration":1125}},{"uid":"9ba5879b2af3e16f","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/9ba5879b2af3e16f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995909711,"stop":1670995910725,"duration":1014}},{"uid":"e457d2eb87df60d0","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/e457d2eb87df60d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909502737,"stop":1670909503604,"duration":867}},{"uid":"60f32e7162dba909","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/60f32e7162dba909","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823091477,"stop":1670823092291,"duration":814}},{"uid":"bf6803fcd7aab0bb","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/bf6803fcd7aab0bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736695634,"stop":1670736696465,"duration":831}},{"uid":"2702b59259e55d33","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/2702b59259e55d33","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650320530,"stop":1670650321747,"duration":1217}},{"uid":"b38188695475ef03","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/b38188695475ef03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563900524,"stop":1670563901537,"duration":1013}},{"uid":"55f970c714bfd451","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/55f970c714bfd451","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477494274,"stop":1670477495132,"duration":858}},{"uid":"7dd7bedc32137334","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/7dd7bedc32137334","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391096549,"stop":1670391097433,"duration":884}},{"uid":"204ee302eef4b45c","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/204ee302eef4b45c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304733548,"stop":1670304734434,"duration":886}},{"uid":"623f168e1f32af24","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/623f168e1f32af24","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218318957,"stop":1670218319824,"duration":867}}]},"tags":[]},"source":"9b665dceba43d088.json","parameterValues":["'false'","'WILDBERRIES'"]}