{"uid":"363ddbfd653a6dbe","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1670304736270,"stop":1670304737144,"duration":874},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az364-198"},{"name":"thread","value":"2441-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":90,"skipped":0,"passed":0,"unknown":0,"total":90},"items":[{"uid":"23982509049d0b2","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/23982509049d0b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218321597,"stop":1670218322473,"duration":876}},{"uid":"677d98de69e01ad1","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/677d98de69e01ad1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131905895,"stop":1670131906909,"duration":1014}},{"uid":"38816062b1441ba7","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/38816062b1441ba7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045503612,"stop":1670045504454,"duration":842}},{"uid":"49c9bd723227d381","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/49c9bd723227d381","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959126801,"stop":1669959127806,"duration":1005}},{"uid":"5e9beb40c0962e51","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/5e9beb40c0962e51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872850640,"stop":1669872851763,"duration":1123}},{"uid":"c8384131935a8d25","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/c8384131935a8d25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786406401,"stop":1669786407507,"duration":1106}},{"uid":"8cac26ae1aecf8de","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/8cac26ae1aecf8de","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699975063,"stop":1669699976159,"duration":1096}},{"uid":"b974186ae4710ca2","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/b974186ae4710ca2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613563841,"stop":1669613564522,"duration":681}},{"uid":"ab74b45434cf51fb","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/ab74b45434cf51fb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527111813,"stop":1669527112490,"duration":677}},{"uid":"57cf214bc9039d92","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/57cf214bc9039d92","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440704993,"stop":1669440705781,"duration":788}},{"uid":"29d8db9d53dd6db3","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/29d8db9d53dd6db3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354349363,"stop":1669354350056,"duration":693}},{"uid":"90bef31249c4d544","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/90bef31249c4d544","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267951108,"stop":1669267951805,"duration":697}},{"uid":"ae795462b82d164","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/ae795462b82d164","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181590846,"stop":1669181592820,"duration":1974}},{"uid":"8b4689384da929e8","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/8b4689384da929e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095314359,"stop":1669095315053,"duration":694}},{"uid":"8e5115823d5ab66f","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/8e5115823d5ab66f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008919637,"stop":1669008920557,"duration":920}},{"uid":"3c11a3fca7bc3841","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/3c11a3fca7bc3841","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922477730,"stop":1668922478844,"duration":1114}},{"uid":"461b0a9a8aa23069","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/461b0a9a8aa23069","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836051564,"stop":1668836052865,"duration":1301}},{"uid":"6054b082b4651a50","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/6054b082b4651a50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749694381,"stop":1668749695276,"duration":895}},{"uid":"e0fa172021bd98b7","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/e0fa172021bd98b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663324352,"stop":1668663325221,"duration":869}},{"uid":"d74b411ae7514b1b","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/d74b411ae7514b1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576875174,"stop":1668576876140,"duration":966}}]},"tags":[]},"source":"363ddbfd653a6dbe.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}