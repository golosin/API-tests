{"uid":"457e4dad5ca87d27","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1670304720866,"stop":1670304721748,"duration":882},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az364-198"},{"name":"thread","value":"2441-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":90,"skipped":0,"passed":0,"unknown":0,"total":90},"items":[{"uid":"235d9d9a6e594eef","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/235d9d9a6e594eef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218306419,"stop":1670218307300,"duration":881}},{"uid":"385c698dfbbfc601","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/385c698dfbbfc601","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131888109,"stop":1670131889130,"duration":1021}},{"uid":"105531d95ef56225","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/105531d95ef56225","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045488764,"stop":1670045489617,"duration":853}},{"uid":"6338fd62e4baafa","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/6338fd62e4baafa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959108831,"stop":1669959109838,"duration":1007}},{"uid":"b76f0c9a38720bb","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/b76f0c9a38720bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872831424,"stop":1669872832519,"duration":1095}},{"uid":"1e1d5a8a8b148dfe","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/1e1d5a8a8b148dfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786386559,"stop":1669786387661,"duration":1102}},{"uid":"d5b12f99a4da4e94","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/d5b12f99a4da4e94","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699956227,"stop":1669699957324,"duration":1097}},{"uid":"bf0e39754f9953aa","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/bf0e39754f9953aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613551616,"stop":1669613552306,"duration":690}},{"uid":"849bf42c0c8f1206","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/849bf42c0c8f1206","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527099874,"stop":1669527100577,"duration":703}},{"uid":"a448538d04276314","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/a448538d04276314","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440692735,"stop":1669440693457,"duration":722}},{"uid":"8c3c8da3d4e4ec42","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/8c3c8da3d4e4ec42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354337215,"stop":1669354337998,"duration":783}},{"uid":"1c037d1c32e8a81","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/1c037d1c32e8a81","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267938676,"stop":1669267939376,"duration":700}},{"uid":"94241f1dfa180052","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/94241f1dfa180052","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181565394,"stop":1669181568413,"duration":3019}},{"uid":"a4b73f25e749f4e3","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/a4b73f25e749f4e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095296294,"stop":1669095296990,"duration":696}},{"uid":"29f9a5468034eb8a","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/29f9a5468034eb8a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008903431,"stop":1669008904322,"duration":891}},{"uid":"2c187cb67b131be1","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/2c187cb67b131be1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922458286,"stop":1668922459399,"duration":1113}},{"uid":"24ef7a70fb0a53d0","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/24ef7a70fb0a53d0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836031067,"stop":1668836032174,"duration":1107}},{"uid":"32daf4d03d2447c3","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/32daf4d03d2447c3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749678723,"stop":1668749679632,"duration":909}},{"uid":"63a7845ebe2750c9","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/63a7845ebe2750c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663305611,"stop":1668663306752,"duration":1141}},{"uid":"d5287942fd1822a4","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/d5287942fd1822a4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576859978,"stop":1668576860878,"duration":900}}]},"tags":[]},"source":"457e4dad5ca87d27.json","parameterValues":["'FEED'","2","None"]}