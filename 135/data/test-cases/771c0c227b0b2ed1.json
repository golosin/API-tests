{"uid":"771c0c227b0b2ed1","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1670304737152,"stop":1670304738051,"duration":899},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az364-198"},{"name":"thread","value":"2441-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":90,"skipped":0,"passed":0,"unknown":0,"total":90},"items":[{"uid":"54f8344909ee72f4","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/54f8344909ee72f4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218322481,"stop":1670218323377,"duration":896}},{"uid":"8d3aff9e5ec0f997","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/8d3aff9e5ec0f997","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131906918,"stop":1670131908161,"duration":1243}},{"uid":"71020a2a0b68dc4c","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/71020a2a0b68dc4c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045504460,"stop":1670045505292,"duration":832}},{"uid":"d043f5933188277c","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/d043f5933188277c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959127812,"stop":1669959128844,"duration":1032}},{"uid":"57b825cab9f16eec","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/57b825cab9f16eec","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872851770,"stop":1669872852877,"duration":1107}},{"uid":"3a93983445761460","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/3a93983445761460","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786407514,"stop":1669786408634,"duration":1120}},{"uid":"74c32ffbcaa8f698","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/74c32ffbcaa8f698","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699976166,"stop":1669699977255,"duration":1089}},{"uid":"199f8e9e34170c66","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/199f8e9e34170c66","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613564532,"stop":1669613565236,"duration":704}},{"uid":"cad29d66b5506967","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/cad29d66b5506967","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527112497,"stop":1669527113204,"duration":707}},{"uid":"f9be26deb7c6e850","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/f9be26deb7c6e850","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440705788,"stop":1669440706583,"duration":795}},{"uid":"bee15d5fdfbf63c9","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/bee15d5fdfbf63c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354350064,"stop":1669354350754,"duration":690}},{"uid":"fdb1b73916e323a9","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/fdb1b73916e323a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267951812,"stop":1669267952486,"duration":674}},{"uid":"2d6ff3591d864b79","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/2d6ff3591d864b79","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181592827,"stop":1669181593905,"duration":1078}},{"uid":"86b5cbe37ed5e84d","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/86b5cbe37ed5e84d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095315063,"stop":1669095315995,"duration":932}},{"uid":"38bace242ddcb9a","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/38bace242ddcb9a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008920564,"stop":1669008921430,"duration":866}},{"uid":"a6addbea51365ca5","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/a6addbea51365ca5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922478852,"stop":1668922479952,"duration":1100}},{"uid":"6dd7ce8f7718d67c","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/6dd7ce8f7718d67c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836052873,"stop":1668836054187,"duration":1314}},{"uid":"a5b94826f9ebe4d","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/a5b94826f9ebe4d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749695282,"stop":1668749696167,"duration":885}},{"uid":"ad141ff608bc66f9","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/ad141ff608bc66f9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663325227,"stop":1668663326147,"duration":920}},{"uid":"84b4ebdbdac12be5","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/84b4ebdbdac12be5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576876146,"stop":1668576877416,"duration":1270}}]},"tags":[]},"source":"771c0c227b0b2ed1.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}