{"uid":"d6ed48ea34642719","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1667368626530,"stop":1667368627327,"duration":797},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az139-994"},{"name":"thread","value":"2432-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":0,"unknown":0,"total":56},"items":[{"uid":"5136fef62a5d7456","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/5136fef62a5d7456","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282444179,"stop":1667282444881,"duration":702}},{"uid":"5f3d2aa15b169316","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/5f3d2aa15b169316","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195444609,"stop":1667195445475,"duration":866}},{"uid":"cbae13d5f6d8cc43","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/cbae13d5f6d8cc43","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108566608,"stop":1667108567483,"duration":875}},{"uid":"dd91a9ac7c8b6566","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/dd91a9ac7c8b6566","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022074854,"stop":1667022075721,"duration":867}},{"uid":"445e0f6003e24bb8","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/445e0f6003e24bb8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666936001729,"stop":1666936002650,"duration":921}},{"uid":"f7d0d93b1b6bc9f2","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/f7d0d93b1b6bc9f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849496429,"stop":1666849497103,"duration":674}},{"uid":"16a184fd8eeebe58","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/16a184fd8eeebe58","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763275021,"stop":1666763275727,"duration":706}},{"uid":"e91858d6efec4d42","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/e91858d6efec4d42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679852810,"stop":1666679853493,"duration":683}},{"uid":"4658d10e6c98b1d7","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/4658d10e6c98b1d7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593710310,"stop":1666593710989,"duration":679}},{"uid":"ca97474f281693ce","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/ca97474f281693ce","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504797433,"stop":1666504798151,"duration":718}},{"uid":"6c6c8b0eed792ab0","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/6c6c8b0eed792ab0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418287390,"stop":1666418288277,"duration":887}},{"uid":"5bb14dcf75d7afc2","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/5bb14dcf75d7afc2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332236559,"stop":1666332237269,"duration":710}},{"uid":"70bcea8bae784107","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/70bcea8bae784107","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245454915,"stop":1666245455605,"duration":690}},{"uid":"bc6089b5e9bcc2df","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/bc6089b5e9bcc2df","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161764930,"stop":1666161765630,"duration":700}},{"uid":"6b92d54e5ab9e36e","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/6b92d54e5ab9e36e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075157509,"stop":1666075158201,"duration":692}},{"uid":"f7827f3691f936cd","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/f7827f3691f936cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988669571,"stop":1665988670682,"duration":1111}},{"uid":"f85db373b09f83cf","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/f85db373b09f83cf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899935983,"stop":1665899936749,"duration":766}},{"uid":"de6893b62b78d0c6","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/de6893b62b78d0c6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813746381,"stop":1665813747254,"duration":873}},{"uid":"187f6746e77ba617","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/187f6746e77ba617","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729137522,"stop":1665729138242,"duration":720}},{"uid":"447494b9d1d5948a","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/447494b9d1d5948a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641747499,"stop":1665641748185,"duration":686}}]},"tags":[]},"source":"d6ed48ea34642719.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}