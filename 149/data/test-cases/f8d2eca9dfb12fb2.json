{"uid":"f8d2eca9dfb12fb2","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"62aa0244c166eeb48e3b8b16d9421c2e","time":{"start":1671514312359,"stop":1671514313196,"duration":837},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az572-198"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":104,"skipped":0,"passed":0,"unknown":0,"total":104},"items":[{"uid":"c095f34b6599f6fe","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/c095f34b6599f6fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427936037,"stop":1671427937303,"duration":1266}},{"uid":"61a0b0e423abd797","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/61a0b0e423abd797","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341528821,"stop":1671341530053,"duration":1232}},{"uid":"85efbef4378f5b7","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/85efbef4378f5b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255116993,"stop":1671255118006,"duration":1013}},{"uid":"3950f48100104a30","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/3950f48100104a30","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168703768,"stop":1671168704656,"duration":888}},{"uid":"b32f0527467c837d","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/b32f0527467c837d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082329137,"stop":1671082330152,"duration":1015}},{"uid":"15697466743b4b05","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/15697466743b4b05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995913132,"stop":1670995914114,"duration":982}},{"uid":"3ab72e29dd77c603","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/3ab72e29dd77c603","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909505334,"stop":1670909506200,"duration":866}},{"uid":"49adac6538a20a4f","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/49adac6538a20a4f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823093957,"stop":1670823094770,"duration":813}},{"uid":"3621c5e0c9b0e9d","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/3621c5e0c9b0e9d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736698122,"stop":1670736698924,"duration":802}},{"uid":"63a524b76446d47f","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/63a524b76446d47f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650324282,"stop":1670650325514,"duration":1232}},{"uid":"c987848d057df9e0","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/c987848d057df9e0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563903599,"stop":1670563904599,"duration":1000}},{"uid":"e78fcf10f7b04364","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/e78fcf10f7b04364","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477496867,"stop":1670477497704,"duration":837}},{"uid":"8fdbf3ff0cc2c660","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/8fdbf3ff0cc2c660","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391099203,"stop":1670391100061,"duration":858}},{"uid":"363ddbfd653a6dbe","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/363ddbfd653a6dbe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304736270,"stop":1670304737144,"duration":874}},{"uid":"23982509049d0b2","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/23982509049d0b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218321597,"stop":1670218322473,"duration":876}},{"uid":"677d98de69e01ad1","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/677d98de69e01ad1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131905895,"stop":1670131906909,"duration":1014}},{"uid":"38816062b1441ba7","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/38816062b1441ba7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045503612,"stop":1670045504454,"duration":842}},{"uid":"49c9bd723227d381","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/49c9bd723227d381","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959126801,"stop":1669959127806,"duration":1005}},{"uid":"5e9beb40c0962e51","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/5e9beb40c0962e51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872850640,"stop":1669872851763,"duration":1123}},{"uid":"c8384131935a8d25","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/c8384131935a8d25","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786406401,"stop":1669786407507,"duration":1106}}]},"tags":[]},"source":"f8d2eca9dfb12fb2.json","parameterValues":["'true'","'WILDBERRIES'","'businessPolicyProducts'"]}