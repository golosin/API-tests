{"uid":"36547bb7004a2e2f","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"29b7ba24f6f2314133d6949a152b6af2","time":{"start":1671514313204,"stop":1671514314062,"duration":858},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.2.3"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az572-198"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":104,"skipped":0,"passed":0,"unknown":0,"total":104},"items":[{"uid":"158543969a274f41","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/158543969a274f41","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427937313,"stop":1671427938582,"duration":1269}},{"uid":"655ad0597028413","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/655ad0597028413","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341530063,"stop":1671341531319,"duration":1256}},{"uid":"8cb7d9ae9af3e18a","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/8cb7d9ae9af3e18a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255118012,"stop":1671255118996,"duration":984}},{"uid":"b2e408167fef2d10","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/b2e408167fef2d10","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168704663,"stop":1671168705525,"duration":862}},{"uid":"acb53e2a40d4e454","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/acb53e2a40d4e454","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082330159,"stop":1671082331179,"duration":1020}},{"uid":"9ada50cd5f8eb314","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/9ada50cd5f8eb314","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995914120,"stop":1670995915122,"duration":1002}},{"uid":"4b9526adcc428304","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/4b9526adcc428304","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909506209,"stop":1670909507076,"duration":867}},{"uid":"9e41c25c221fd4e4","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/9e41c25c221fd4e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823094776,"stop":1670823095601,"duration":825}},{"uid":"12f5a13ec3176555","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/12f5a13ec3176555","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736698931,"stop":1670736699738,"duration":807}},{"uid":"5f742ef4924cd0c5","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/5f742ef4924cd0c5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650325521,"stop":1670650326761,"duration":1240}},{"uid":"23caf6ce7effb3dc","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/23caf6ce7effb3dc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563904605,"stop":1670563905642,"duration":1037}},{"uid":"b717e20fbc29f30e","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/b717e20fbc29f30e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477497711,"stop":1670477498545,"duration":834}},{"uid":"221632570b319295","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/221632570b319295","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391100067,"stop":1670391100903,"duration":836}},{"uid":"771c0c227b0b2ed1","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/771c0c227b0b2ed1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304737152,"stop":1670304738051,"duration":899}},{"uid":"54f8344909ee72f4","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/54f8344909ee72f4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218322481,"stop":1670218323377,"duration":896}},{"uid":"8d3aff9e5ec0f997","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/8d3aff9e5ec0f997","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131906918,"stop":1670131908161,"duration":1243}},{"uid":"71020a2a0b68dc4c","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/71020a2a0b68dc4c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045504460,"stop":1670045505292,"duration":832}},{"uid":"d043f5933188277c","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/d043f5933188277c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959127812,"stop":1669959128844,"duration":1032}},{"uid":"57b825cab9f16eec","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/57b825cab9f16eec","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872851770,"stop":1669872852877,"duration":1107}},{"uid":"3a93983445761460","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/3a93983445761460","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786407514,"stop":1669786408634,"duration":1120}}]},"tags":[]},"source":"36547bb7004a2e2f.json","parameterValues":["'false'","'WILDBERRIES'","'businessPolicyProducts'"]}