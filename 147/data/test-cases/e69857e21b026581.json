{"uid":"e69857e21b026581","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1671341522518,"stop":1671341523763,"duration":1245},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az572-625"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":102,"skipped":0,"passed":0,"unknown":0,"total":102},"items":[{"uid":"fe812e9ff43d09fe","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/fe812e9ff43d09fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255111960,"stop":1671255112968,"duration":1008}},{"uid":"d4a4cc183d60e06d","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/d4a4cc183d60e06d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168699008,"stop":1671168699871,"duration":863}},{"uid":"f111bada8d3256c9","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/f111bada8d3256c9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082323733,"stop":1671082324774,"duration":1041}},{"uid":"b6255878ab7582d1","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/b6255878ab7582d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995907652,"stop":1670995908660,"duration":1008}},{"uid":"c21052cec57607d9","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/c21052cec57607d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909501003,"stop":1670909501875,"duration":872}},{"uid":"dc4ad325e6205fc1","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/dc4ad325e6205fc1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823089818,"stop":1670823090635,"duration":817}},{"uid":"e2cbda8c138f91c8","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/e2cbda8c138f91c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736694017,"stop":1670736694817,"duration":800}},{"uid":"bd6e03566b771394","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/bd6e03566b771394","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650318047,"stop":1670650319272,"duration":1225}},{"uid":"e2c5f0a70533f758","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/e2c5f0a70533f758","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563898482,"stop":1670563899486,"duration":1004}},{"uid":"897ae968412789cd","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/897ae968412789cd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477492594,"stop":1670477493431,"duration":837}},{"uid":"74aee67590b24013","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/74aee67590b24013","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391094817,"stop":1670391095677,"duration":860}},{"uid":"344dd7035955c1f7","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/344dd7035955c1f7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304731744,"stop":1670304732628,"duration":884}},{"uid":"c0d7a78d254834a5","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/c0d7a78d254834a5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218317184,"stop":1670218318067,"duration":883}},{"uid":"ae1c2d9ec2e4b40c","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/ae1c2d9ec2e4b40c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131900600,"stop":1670131901630,"duration":1030}},{"uid":"7ac5013d1d425383","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/7ac5013d1d425383","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045499210,"stop":1670045500127,"duration":917}},{"uid":"fce0ac22119a06c","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/fce0ac22119a06c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959121541,"stop":1669959122631,"duration":1090}},{"uid":"9c293fa423c7aeda","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/9c293fa423c7aeda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872845014,"stop":1669872846121,"duration":1107}},{"uid":"c045d0e2727a809d","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/c045d0e2727a809d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786400802,"stop":1669786401900,"duration":1098}},{"uid":"2aed2cac253f01a","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/2aed2cac253f01a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699969488,"stop":1669699970639,"duration":1151}},{"uid":"e0406a8f66266fdb","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/e0406a8f66266fdb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613560223,"stop":1669613560965,"duration":742}}]},"tags":[]},"source":"e69857e21b026581.json","parameterValues":["'false'","'FEED'"]}