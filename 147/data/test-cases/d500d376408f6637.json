{"uid":"d500d376408f6637","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1671341540124,"stop":1671341541392,"duration":1268},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.2.1"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az572-625"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":102,"skipped":0,"passed":0,"unknown":0,"total":102},"items":[{"uid":"eeb72f02457c896d","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/eeb72f02457c896d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255126118,"stop":1671255127122,"duration":1004}},{"uid":"4d97ea89597f9f36","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/4d97ea89597f9f36","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168711652,"stop":1671168712521,"duration":869}},{"uid":"d422135cd632047","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/d422135cd632047","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082338540,"stop":1671082339542,"duration":1002}},{"uid":"d610a60872d1781f","reportUrl":"https://golosin.github.io/API-tests/143//#testresult/d610a60872d1781f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670995922181,"stop":1670995923175,"duration":994}},{"uid":"5a42554cdaf5caa7","reportUrl":"https://golosin.github.io/API-tests/142//#testresult/5a42554cdaf5caa7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670909513323,"stop":1670909514209,"duration":886}},{"uid":"1b27b8e9c60e8c8b","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/1b27b8e9c60e8c8b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823101444,"stop":1670823102261,"duration":817}},{"uid":"f678471a81f1fe6a","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/f678471a81f1fe6a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736705472,"stop":1670736706263,"duration":791}},{"uid":"35f847c7e4a2062c","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/35f847c7e4a2062c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650335443,"stop":1670650336679,"duration":1236}},{"uid":"bffb79297f6dfeef","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/bffb79297f6dfeef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563912856,"stop":1670563913861,"duration":1005}},{"uid":"1c9d6e55a22b15e7","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/1c9d6e55a22b15e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477504517,"stop":1670477505344,"duration":827}},{"uid":"e2691686dd6bc133","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/e2691686dd6bc133","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391106998,"stop":1670391107841,"duration":843}},{"uid":"12228f1c0cee396d","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/12228f1c0cee396d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304744285,"stop":1670304745154,"duration":869}},{"uid":"e0e526316c1c8ce7","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/e0e526316c1c8ce7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218329621,"stop":1670218330500,"duration":879}},{"uid":"2a516c2eda2137ee","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/2a516c2eda2137ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131915448,"stop":1670131916534,"duration":1086}},{"uid":"f11bbc4317d8b02c","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/f11bbc4317d8b02c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045511261,"stop":1670045512101,"duration":840}},{"uid":"302b895c893f3cda","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/302b895c893f3cda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959136042,"stop":1669959137094,"duration":1052}},{"uid":"b11d0e9c5a235b05","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/b11d0e9c5a235b05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872860764,"stop":1669872861892,"duration":1128}},{"uid":"81b556946e4ca3d6","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/81b556946e4ca3d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786416718,"stop":1669786417855,"duration":1137}},{"uid":"5c8947e3ee3d8b5a","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/5c8947e3ee3d8b5a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699985277,"stop":1669699986500,"duration":1223}},{"uid":"c27fd808def40d61","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/c27fd808def40d61","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613570228,"stop":1669613570917,"duration":689}}]},"tags":[]},"source":"d500d376408f6637.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}