{"uid":"7a627e8895a75ab","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1664863295846,"stop":1664863296572,"duration":726},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az196-824"},{"name":"thread","value":"2429-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":27,"skipped":0,"passed":0,"unknown":0,"total":27},"items":[{"uid":"81e76a6e0695f220","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/81e76a6e0695f220","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776767260,"stop":1664776768158,"duration":898}},{"uid":"2cded17d10d85515","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/2cded17d10d85515","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690396996,"stop":1664690398107,"duration":1111}},{"uid":"5bf70efbb20d6cee","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/5bf70efbb20d6cee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519865367,"stop":1664519866473,"duration":1106}},{"uid":"a0d95c49f5807cc9","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/a0d95c49f5807cc9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433546334,"stop":1664433547420,"duration":1086}},{"uid":"904d44d840426647","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/904d44d840426647","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346855720,"stop":1664346856621,"duration":901}},{"uid":"44cf3de345584cc7","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/44cf3de345584cc7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260032870,"stop":1664260033740,"duration":870}},{"uid":"69cf0b98798db6b6","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/69cf0b98798db6b6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664174000339,"stop":1664174001041,"duration":702}},{"uid":"4fafacbbc419b197","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/4fafacbbc419b197","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085276174,"stop":1664085277046,"duration":872}},{"uid":"738866861ee08284","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/738866861ee08284","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999162102,"stop":1663999163204,"duration":1102}},{"uid":"8853d648056329b2","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/8853d648056329b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914351728,"stop":1663914352413,"duration":685}},{"uid":"a956641feb693695","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/a956641feb693695","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828219878,"stop":1663828220748,"duration":870}},{"uid":"4942722d62fa303f","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/4942722d62fa303f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742180512,"stop":1663742181615,"duration":1103}},{"uid":"644867fde5524350","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/644867fde5524350","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655469116,"stop":1663655470009,"duration":893}},{"uid":"84bdeadf0e923956","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/84bdeadf0e923956","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569588800,"stop":1663569589469,"duration":669}},{"uid":"4b7747dde9c2c198","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/4b7747dde9c2c198","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480491063,"stop":1663480492189,"duration":1126}},{"uid":"401e54f16b8d9efe","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/401e54f16b8d9efe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393963799,"stop":1663393964679,"duration":880}},{"uid":"f6bc625348a17678","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/f6bc625348a17678","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309766322,"stop":1663309767005,"duration":683}},{"uid":"4900d247f78a4c93","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/4900d247f78a4c93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222542628,"stop":1663222543332,"duration":704}},{"uid":"512f65055d9025af","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/512f65055d9025af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137103829,"stop":1663137104706,"duration":877}},{"uid":"ef36c0210ae9401a","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/ef36c0210ae9401a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050988475,"stop":1663050989183,"duration":708}}]},"tags":[]},"source":"7a627e8895a75ab.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}