{"uid":"347e8c2e350f946e","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1664863288924,"stop":1664863289601,"duration":677},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az196-824"},{"name":"thread","value":"2429-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":27,"skipped":0,"passed":0,"unknown":0,"total":27},"items":[{"uid":"e92499951abd1be9","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/e92499951abd1be9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776758346,"stop":1664776759218,"duration":872}},{"uid":"29b6e3eddcbf9b42","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/29b6e3eddcbf9b42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690385831,"stop":1664690386943,"duration":1112}},{"uid":"17e6484be925c51a","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/17e6484be925c51a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519854257,"stop":1664519855361,"duration":1104}},{"uid":"c742ed036abd2f21","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/c742ed036abd2f21","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433535204,"stop":1664433536309,"duration":1105}},{"uid":"9b680861c91a8b76","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/9b680861c91a8b76","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346847336,"stop":1664346848216,"duration":880}},{"uid":"241ef865b32b060d","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/241ef865b32b060d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260024079,"stop":1664260024930,"duration":851}},{"uid":"2d0490da2db50777","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/2d0490da2db50777","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173993267,"stop":1664173993973,"duration":706}},{"uid":"6a60813b26f408bc","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/6a60813b26f408bc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085267250,"stop":1664085268111,"duration":861}},{"uid":"52bef6791b54272b","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/52bef6791b54272b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999150900,"stop":1663999152008,"duration":1108}},{"uid":"9bfc754906787832","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/9bfc754906787832","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914344677,"stop":1663914345380,"duration":703}},{"uid":"13fb061181038328","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/13fb061181038328","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828210947,"stop":1663828211828,"duration":881}},{"uid":"35c7e1a2e5e44a2b","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/35c7e1a2e5e44a2b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742169208,"stop":1663742170321,"duration":1113}},{"uid":"2d86cfb2f3be4cc5","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/2d86cfb2f3be4cc5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655460317,"stop":1663655461190,"duration":873}},{"uid":"82b8a07dad4ea051","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/82b8a07dad4ea051","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569581893,"stop":1663569582577,"duration":684}},{"uid":"f9fae9149e6dd0cb","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/f9fae9149e6dd0cb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480479833,"stop":1663480480939,"duration":1106}},{"uid":"eeea7085fd9907b3","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/eeea7085fd9907b3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393954906,"stop":1663393955782,"duration":876}},{"uid":"5c55a0a1603ed594","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/5c55a0a1603ed594","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309759361,"stop":1663309760041,"duration":680}},{"uid":"7c54ac50298928c2","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/7c54ac50298928c2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222535516,"stop":1663222536215,"duration":699}},{"uid":"5b9a201d7958757f","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/5b9a201d7958757f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137094790,"stop":1663137095664,"duration":874}},{"uid":"e1ddc5cb3bcb0f67","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/e1ddc5cb3bcb0f67","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050981384,"stop":1663050982081,"duration":697}}]},"tags":[]},"source":"347e8c2e350f946e.json","parameterValues":["'false'","'FEED'"]}