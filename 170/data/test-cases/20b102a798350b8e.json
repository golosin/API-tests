{"uid":"20b102a798350b8e","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"dd4d5cbff3e743ad3b13803a61abfc11","time":{"start":1673328724017,"stop":1673328725264,"duration":1247},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az578-342"},{"name":"thread","value":"2556-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":125,"skipped":0,"passed":0,"unknown":0,"total":125},"items":[{"uid":"2a76a6ef27198724","reportUrl":"https://golosin.github.io/API-tests/169//#testresult/2a76a6ef27198724","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673242336242,"stop":1673242337364,"duration":1122}},{"uid":"f112d412f860b62a","reportUrl":"https://golosin.github.io/API-tests/168//#testresult/f112d412f860b62a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673155897606,"stop":1673155898430,"duration":824}},{"uid":"714b37d328eddf72","reportUrl":"https://golosin.github.io/API-tests/167//#testresult/714b37d328eddf72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1673069498047,"stop":1673069498889,"duration":842}},{"uid":"f281321b069a7165","reportUrl":"https://golosin.github.io/API-tests/166//#testresult/f281321b069a7165","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672983100900,"stop":1672983101726,"duration":826}},{"uid":"d6d27f6a6f02663f","reportUrl":"https://golosin.github.io/API-tests/165//#testresult/d6d27f6a6f02663f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672896717842,"stop":1672896719054,"duration":1212}},{"uid":"b776b9e0d36f1422","reportUrl":"https://golosin.github.io/API-tests/164//#testresult/b776b9e0d36f1422","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672810323553,"stop":1672810324550,"duration":997}},{"uid":"b00856a893d70988","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/b00856a893d70988","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723903900,"stop":1672723904750,"duration":850}},{"uid":"68be106217f674c8","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/68be106217f674c8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637501025,"stop":1672637501860,"duration":835}},{"uid":"64be80b8629165a0","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/64be80b8629165a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551094939,"stop":1672551095758,"duration":819}},{"uid":"8e7196976f7ccef","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/8e7196976f7ccef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464699738,"stop":1672464700580,"duration":842}},{"uid":"964c8a01008ee778","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/964c8a01008ee778","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378320059,"stop":1672378321092,"duration":1033}},{"uid":"4a94c9e1026130d4","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/4a94c9e1026130d4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291908159,"stop":1672291909171,"duration":1012}},{"uid":"159da647d85542b5","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/159da647d85542b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205500036,"stop":1672205500858,"duration":822}},{"uid":"8de49f12a7b1e74e","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/8de49f12a7b1e74e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119117317,"stop":1672119118566,"duration":1249}},{"uid":"81bd8a8570cd56e5","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/81bd8a8570cd56e5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032720604,"stop":1672032721712,"duration":1108}},{"uid":"c6b0cb39039d4975","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/c6b0cb39039d4975","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946314220,"stop":1671946315047,"duration":827}},{"uid":"1e52f06a19efa857","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/1e52f06a19efa857","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859900534,"stop":1671859901377,"duration":843}},{"uid":"4ababe2c40b60ccf","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/4ababe2c40b60ccf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773518770,"stop":1671773519927,"duration":1157}},{"uid":"dfeae7abd440edb9","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/dfeae7abd440edb9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687104675,"stop":1671687105541,"duration":866}},{"uid":"b83e0af81b3afb5e","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/b83e0af81b3afb5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600700126,"stop":1671600700969,"duration":843}}]},"tags":[]},"source":"20b102a798350b8e.json","parameterValues":["'false'","'WILDBERRIES'","'priceStockRuleProducts'"]}