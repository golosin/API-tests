{"uid":"333724be936cbe70","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1670909500119,"stop":1670909500995,"duration":876},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az563-68"},{"name":"thread","value":"2511-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":97,"skipped":0,"passed":0,"unknown":0,"total":97},"items":[{"uid":"220d9e8919afcbe","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/220d9e8919afcbe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823089004,"stop":1670823089811,"duration":807}},{"uid":"8034e84d9fc8713c","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/8034e84d9fc8713c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736693210,"stop":1670736694011,"duration":801}},{"uid":"b9d934c7a9314bfe","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/b9d934c7a9314bfe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650316801,"stop":1670650318040,"duration":1239}},{"uid":"82f1df76c5ba7a90","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/82f1df76c5ba7a90","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563897442,"stop":1670563898476,"duration":1034}},{"uid":"4b1c5af6b0026c5e","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/4b1c5af6b0026c5e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477491756,"stop":1670477492588,"duration":832}},{"uid":"9d18735dd0527ac9","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/9d18735dd0527ac9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391093936,"stop":1670391094811,"duration":875}},{"uid":"5fa3a1953aec5b2c","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/5fa3a1953aec5b2c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304730826,"stop":1670304731736,"duration":910}},{"uid":"83d12c890e47dd3e","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/83d12c890e47dd3e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218316286,"stop":1670218317177,"duration":891}},{"uid":"59fb42327210766b","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/59fb42327210766b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131899578,"stop":1670131900593,"duration":1015}},{"uid":"96bd920d86d4657f","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/96bd920d86d4657f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045498353,"stop":1670045499204,"duration":851}},{"uid":"7491f8f304f2263e","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/7491f8f304f2263e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959120410,"stop":1669959121536,"duration":1126}},{"uid":"a9493f2a31fcde72","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/a9493f2a31fcde72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872843873,"stop":1669872845007,"duration":1134}},{"uid":"dd689fd3eff9df82","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/dd689fd3eff9df82","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786399694,"stop":1669786400796,"duration":1102}},{"uid":"ad88e7415bf776b1","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/ad88e7415bf776b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699968389,"stop":1669699969481,"duration":1092}},{"uid":"9c5ecb559958da65","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/9c5ecb559958da65","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613559518,"stop":1669613560215,"duration":697}},{"uid":"c87ddebc786d0531","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/c87ddebc786d0531","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527107648,"stop":1669527108343,"duration":695}},{"uid":"7d9d536a63497986","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/7d9d536a63497986","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440700689,"stop":1669440701395,"duration":706}},{"uid":"6cd08aa83bd2c166","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/6cd08aa83bd2c166","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354345148,"stop":1669354345836,"duration":688}},{"uid":"320e19b007f4e9b4","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/320e19b007f4e9b4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267946688,"stop":1669267947374,"duration":686}},{"uid":"cb79a1d8b357f49b","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/cb79a1d8b357f49b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181581677,"stop":1669181583454,"duration":1777}}]},"tags":[]},"source":"333724be936cbe70.json","parameterValues":["'true'","'FEED'"]}