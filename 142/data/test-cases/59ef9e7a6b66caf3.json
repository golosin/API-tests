{"uid":"59ef9e7a6b66caf3","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"f9ead6112a5139ded03988774bdd2dd2","time":{"start":1670909489487,"stop":1670909490354,"duration":867},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az563-68"},{"name":"thread","value":"2511-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":97,"skipped":0,"passed":0,"unknown":0,"total":97},"items":[{"uid":"5ce1a4e66b9e113a","reportUrl":"https://golosin.github.io/API-tests/141//#testresult/5ce1a4e66b9e113a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670823078869,"stop":1670823079749,"duration":880}},{"uid":"a5c25540a2457a13","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/a5c25540a2457a13","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736683235,"stop":1670736684044,"duration":809}},{"uid":"5be659128b48f502","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/5be659128b48f502","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650301767,"stop":1670650302994,"duration":1227}},{"uid":"b376562bfa367192","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/b376562bfa367192","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563885122,"stop":1670563886148,"duration":1026}},{"uid":"ded0af3ca50b3209","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/ded0af3ca50b3209","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477481622,"stop":1670477482448,"duration":826}},{"uid":"a3eafd01198c83e1","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/a3eafd01198c83e1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391083471,"stop":1670391084315,"duration":844}},{"uid":"dd827fbb254c6f8d","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/dd827fbb254c6f8d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304719962,"stop":1670304720858,"duration":896}},{"uid":"5c8755e1160c5783","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/5c8755e1160c5783","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218305515,"stop":1670218306411,"duration":896}},{"uid":"bcae35fc8bbf1931","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/bcae35fc8bbf1931","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131887071,"stop":1670131888101,"duration":1030}},{"uid":"6d831e7df5db8a71","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/6d831e7df5db8a71","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045487902,"stop":1670045488758,"duration":856}},{"uid":"8581e0d3e26b385f","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/8581e0d3e26b385f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959107777,"stop":1669959108824,"duration":1047}},{"uid":"719ff3554b63d3e8","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/719ff3554b63d3e8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872830255,"stop":1669872831417,"duration":1162}},{"uid":"e7fedf5ed23a7a86","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/e7fedf5ed23a7a86","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786385392,"stop":1669786386552,"duration":1160}},{"uid":"c12e42b989ebe30b","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/c12e42b989ebe30b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699955126,"stop":1669699956220,"duration":1094}},{"uid":"73c24f2f2f540fe4","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/73c24f2f2f540fe4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613550920,"stop":1669613551608,"duration":688}},{"uid":"85972fed451df60c","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/85972fed451df60c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527099179,"stop":1669527099867,"duration":688}},{"uid":"634ba7780ffabb50","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/634ba7780ffabb50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440692015,"stop":1669440692728,"duration":713}},{"uid":"cf119b69f33ad5b1","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/cf119b69f33ad5b1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354336518,"stop":1669354337208,"duration":690}},{"uid":"b48ec8daa18d159c","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/b48ec8daa18d159c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267937985,"stop":1669267938668,"duration":683}},{"uid":"5dff7699243b548f","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/5dff7699243b548f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181564316,"stop":1669181565386,"duration":1070}}]},"tags":[]},"source":"59ef9e7a6b66caf3.json","parameterValues":["'FEED'","2","2"]}