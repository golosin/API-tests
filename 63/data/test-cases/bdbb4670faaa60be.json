{"uid":"bdbb4670faaa60be","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"0a5a4bf656bca2f0f8d8bc380e808fdc","time":{"start":1664085259256,"stop":1664085260135,"duration":879},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"32d7a3ac4be3d61c","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/32d7a3ac4be3d61c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999140875,"stop":1663999141978,"duration":1103}},{"uid":"dc36028097eab264","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/dc36028097eab264","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914338357,"stop":1663914339100,"duration":743}},{"uid":"72b355a9cee0f444","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/72b355a9cee0f444","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828202745,"stop":1663828203673,"duration":928}},{"uid":"9f64b631a73206d9","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/9f64b631a73206d9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742159107,"stop":1663742160202,"duration":1095}},{"uid":"a1065e19e6724cbb","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/a1065e19e6724cbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655452335,"stop":1663655453254,"duration":919}},{"uid":"5dd28a5dcc228a1a","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/5dd28a5dcc228a1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569575689,"stop":1663569576372,"duration":683}},{"uid":"69a7c1572c0f3a3b","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/69a7c1572c0f3a3b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480469771,"stop":1663480470871,"duration":1100}},{"uid":"cf9f94a842660bf6","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/cf9f94a842660bf6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393946988,"stop":1663393947855,"duration":867}},{"uid":"5121650946ed483","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/5121650946ed483","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309752983,"stop":1663309753663,"duration":680}},{"uid":"32e7c010464b336b","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/32e7c010464b336b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222529078,"stop":1663222529784,"duration":706}},{"uid":"f1f37d837e75a93b","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/f1f37d837e75a93b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137086563,"stop":1663137087461,"duration":898}},{"uid":"4af7f4ab2a90e79","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/4af7f4ab2a90e79","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050974713,"stop":1663050975419,"duration":706}},{"uid":"25ccc38cf11f9e3a","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/25ccc38cf11f9e3a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964774859,"stop":1662964775600,"duration":741}},{"uid":"959520320e0aaf71","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/959520320e0aaf71","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875597966,"stop":1662875598645,"duration":679}},{"uid":"72c6e19d1bc3d66e","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/72c6e19d1bc3d66e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845411905,"stop":1662845412803,"duration":898}},{"uid":"e3b07b17af515561","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/e3b07b17af515561","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840099278,"stop":1662840099975,"duration":697}},{"uid":"fa59af88bc37b6b7","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/fa59af88bc37b6b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840063836,"stop":1662840064830,"duration":994}},{"uid":"5b94d095b0fbcb89","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/5b94d095b0fbcb89","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838759736,"stop":1662838760477,"duration":741}}]},"tags":[]},"source":"bdbb4670faaa60be.json","parameterValues":["'WILDBERRIES'","2","None"]}