{"uid":"4f9e54ce9b5ecdb9","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_rule_policy","historyId":"0f64afb644ab4c30d172f188c92aafbd","time":{"start":1664085261027,"stop":1664085261895,"duration":868},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nstock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_stock_rule_policy(rule_policy, marketplace, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:75: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"bfb62760970b1073","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/bfb62760970b1073","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999143099,"stop":1663999144194,"duration":1095}},{"uid":"c0ac1312e69824dd","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/c0ac1312e69824dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914339801,"stop":1663914340480,"duration":679}},{"uid":"20f41076cd91d100","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/20f41076cd91d100","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828204566,"stop":1663828205439,"duration":873}},{"uid":"7fb68e62536e1cb6","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/7fb68e62536e1cb6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742161328,"stop":1663742162457,"duration":1129}},{"uid":"b1a827d479e8cbeb","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/b1a827d479e8cbeb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655454154,"stop":1663655455048,"duration":894}},{"uid":"f9db5dcfbb679177","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/f9db5dcfbb679177","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569577078,"stop":1663569577757,"duration":679}},{"uid":"8ffec85d91935c1e","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/8ffec85d91935c1e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480471997,"stop":1663480473102,"duration":1105}},{"uid":"fb5c4aafc33afd58","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/fb5c4aafc33afd58","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393948735,"stop":1663393949641,"duration":906}},{"uid":"3ab25c243fc44f2","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/3ab25c243fc44f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309754384,"stop":1663309755119,"duration":735}},{"uid":"20c0a3511805bd23","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/20c0a3511805bd23","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222530500,"stop":1663222531196,"duration":696}},{"uid":"71141a94bfdeae8e","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/71141a94bfdeae8e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137088377,"stop":1663137089314,"duration":937}},{"uid":"19c685551d69400c","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/19c685551d69400c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050976162,"stop":1663050976862,"duration":700}},{"uid":"fbc87386d618b308","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/fbc87386d618b308","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964776350,"stop":1662964777064,"duration":714}},{"uid":"94411be707db996b","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/94411be707db996b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875599440,"stop":1662875600107,"duration":667}},{"uid":"d6b5d16535cda78a","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/d6b5d16535cda78a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845413710,"stop":1662845414584,"duration":874}},{"uid":"6ef7c4f5cb0d58e9","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/6ef7c4f5cb0d58e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840100698,"stop":1662840101457,"duration":759}},{"uid":"716d81ffb431c90e","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/716d81ffb431c90e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840065771,"stop":1662840066655,"duration":884}},{"uid":"eb2fb3622963194e","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/eb2fb3622963194e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838761191,"stop":1662838761908,"duration":717}}]},"tags":[]},"source":"4f9e54ce9b5ecdb9.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","2","2"]}