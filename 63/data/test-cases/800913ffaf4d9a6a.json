{"uid":"800913ffaf4d9a6a","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"b1ad4e9b518d5e42ac697e9a109c8071","time":{"start":1664085260141,"stop":1664085261020,"duration":879},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', stock_min = 2, stock_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Stock"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"},{"name":"stock_max","value":"None"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"d98d90a1ec9a1383","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/d98d90a1ec9a1383","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999141987,"stop":1663999143090,"duration":1103}},{"uid":"dc70c26828962209","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/dc70c26828962209","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914339108,"stop":1663914339792,"duration":684}},{"uid":"5b4dc41c8ae11204","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/5b4dc41c8ae11204","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828203678,"stop":1663828204559,"duration":881}},{"uid":"47726860e084a3c1","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/47726860e084a3c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742160210,"stop":1663742161319,"duration":1109}},{"uid":"cabcb58c8d0734a0","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/cabcb58c8d0734a0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655453260,"stop":1663655454147,"duration":887}},{"uid":"21d79b6018e80f92","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/21d79b6018e80f92","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569576378,"stop":1663569577071,"duration":693}},{"uid":"6f8de94312031fd5","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/6f8de94312031fd5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480470880,"stop":1663480471989,"duration":1109}},{"uid":"1fef240d3e03bf54","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/1fef240d3e03bf54","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393947862,"stop":1663393948728,"duration":866}},{"uid":"cf551ae2973b7614","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/cf551ae2973b7614","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309753670,"stop":1663309754377,"duration":707}},{"uid":"6abca139670816b2","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/6abca139670816b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222529791,"stop":1663222530492,"duration":701}},{"uid":"c75a0e0424b3289b","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/c75a0e0424b3289b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137087468,"stop":1663137088366,"duration":898}},{"uid":"bb51165a661e25c","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/bb51165a661e25c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050975425,"stop":1663050976155,"duration":730}},{"uid":"31fcb0ea5aa7ff73","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/31fcb0ea5aa7ff73","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964775606,"stop":1662964776344,"duration":738}},{"uid":"1000e4595458dae9","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/1000e4595458dae9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875598651,"stop":1662875599433,"duration":782}},{"uid":"c20cc92fb38311bf","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/c20cc92fb38311bf","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845412810,"stop":1662845413702,"duration":892}},{"uid":"22396f2ddab8884b","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/22396f2ddab8884b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840099981,"stop":1662840100690,"duration":709}},{"uid":"af332ed5b4b676fe","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/af332ed5b4b676fe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840064838,"stop":1662840065763,"duration":925}},{"uid":"544b1f307cd76d56","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/544b1f307cd76d56","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838760484,"stop":1662838761184,"duration":700}}]},"tags":[]},"source":"800913ffaf4d9a6a.json","parameterValues":["'WILDBERRIES'","None","2"]}