{"uid":"761099a99e9b37c6","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"caceb51040e2c7fb7bfa017cdb53a300","time":{"start":1667108543470,"stop":1667108544374,"duration":904},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = None, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az299-1"},{"name":"thread","value":"2611-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":53,"skipped":0,"passed":0,"unknown":0,"total":53},"items":[{"uid":"a3c343f91dc3ee05","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/a3c343f91dc3ee05","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022051255,"stop":1667022052125,"duration":870}},{"uid":"8ff85ff2ad835550","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/8ff85ff2ad835550","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935977988,"stop":1666935978906,"duration":918}},{"uid":"31f9cb7392744af5","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/31f9cb7392744af5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849478009,"stop":1666849478690,"duration":681}},{"uid":"7b160893de20bd","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/7b160893de20bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763256523,"stop":1666763257210,"duration":687}},{"uid":"64d893900eebe51","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/64d893900eebe51","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679834712,"stop":1666679835390,"duration":678}},{"uid":"cebad4c5305ad4c0","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/cebad4c5305ad4c0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593692280,"stop":1666593692962,"duration":682}},{"uid":"1a218657bd003a77","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/1a218657bd003a77","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504778380,"stop":1666504779120,"duration":740}},{"uid":"d8e2bc2fd02de99f","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/d8e2bc2fd02de99f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418263709,"stop":1666418264588,"duration":879}},{"uid":"a992d029842a09ad","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/a992d029842a09ad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332217636,"stop":1666332218343,"duration":707}},{"uid":"832ba5163ff47de3","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/832ba5163ff47de3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245436043,"stop":1666245436728,"duration":685}},{"uid":"9e85b5d589b4f035","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/9e85b5d589b4f035","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161746853,"stop":1666161747535,"duration":682}},{"uid":"d9bc7ddf022d3a04","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/d9bc7ddf022d3a04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075139537,"stop":1666075140230,"duration":693}},{"uid":"8a587df806cc8250","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/8a587df806cc8250","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988640710,"stop":1665988641811,"duration":1101}},{"uid":"7ea935c5d514ce6e","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/7ea935c5d514ce6e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899916782,"stop":1665899917491,"duration":709}},{"uid":"3c37812ba469b6be","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/3c37812ba469b6be","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813723369,"stop":1665813724247,"duration":878}},{"uid":"44a5e0893c341c0b","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/44a5e0893c341c0b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729118136,"stop":1665729118831,"duration":695}},{"uid":"661dc48c45e8e91f","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/661dc48c45e8e91f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641729445,"stop":1665641730147,"duration":702}},{"uid":"b57cefe848317708","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/b57cefe848317708","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554489028,"stop":1665554490129,"duration":1101}},{"uid":"8e39cf3f4aeb8bdd","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/8e39cf3f4aeb8bdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469406747,"stop":1665469407438,"duration":691}},{"uid":"2a7e2db272757d","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/2a7e2db272757d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383154019,"stop":1665383154737,"duration":718}}]},"tags":[]},"source":"761099a99e9b37c6.json","parameterValues":["'FEED'","2","None"]}