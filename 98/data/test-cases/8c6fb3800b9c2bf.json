{"uid":"8c6fb3800b9c2bf","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"01791090049ae0d727ddbcfdda7810d9","time":{"start":1667108553298,"stop":1667108554167,"duration":869},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az299-1"},{"name":"thread","value":"2611-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":53,"skipped":0,"passed":0,"unknown":0,"total":53},"items":[{"uid":"464166b3ccae93e6","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/464166b3ccae93e6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022061105,"stop":1667022062019,"duration":914}},{"uid":"a81b81f5f44469f5","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/a81b81f5f44469f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935988078,"stop":1666935988967,"duration":889}},{"uid":"2126ec60b5c7aad3","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/2126ec60b5c7aad3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849485900,"stop":1666849486580,"duration":680}},{"uid":"b12f588f51172d50","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/b12f588f51172d50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763264223,"stop":1666763264912,"duration":689}},{"uid":"e5d654c696c31cdd","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/e5d654c696c31cdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679842347,"stop":1666679843032,"duration":685}},{"uid":"318e9ebfef71c280","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/318e9ebfef71c280","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593699929,"stop":1666593700616,"duration":687}},{"uid":"9dcf6b61426c5f50","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/9dcf6b61426c5f50","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504786245,"stop":1666504787117,"duration":872}},{"uid":"b4305b576f997519","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/b4305b576f997519","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418273680,"stop":1666418274553,"duration":873}},{"uid":"ab126258c2985daa","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/ab126258c2985daa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332225683,"stop":1666332226408,"duration":725}},{"uid":"b6fbcebfbdadcad5","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/b6fbcebfbdadcad5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245444050,"stop":1666245444746,"duration":696}},{"uid":"8bd8bd7f656483a9","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/8bd8bd7f656483a9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161754458,"stop":1666161755161,"duration":703}},{"uid":"22ef12c6ab254269","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/22ef12c6ab254269","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075147135,"stop":1666075147813,"duration":678}},{"uid":"69e4fd206a1d5b97","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/69e4fd206a1d5b97","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988652894,"stop":1665988654008,"duration":1114}},{"uid":"f4d0a15d9cc1f172","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/f4d0a15d9cc1f172","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899925006,"stop":1665899925754,"duration":748}},{"uid":"35607be357e7fa60","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/35607be357e7fa60","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813733129,"stop":1665813734010,"duration":881}},{"uid":"75ae5ab5502d9284","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/75ae5ab5502d9284","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729126599,"stop":1665729127350,"duration":751}},{"uid":"7729756bfd104afb","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/7729756bfd104afb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641737075,"stop":1665641737755,"duration":680}},{"uid":"41f6b6645a79badd","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/41f6b6645a79badd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554501307,"stop":1665554502409,"duration":1102}},{"uid":"ae27de1935330ffe","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/ae27de1935330ffe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469414372,"stop":1665469415168,"duration":796}},{"uid":"91077551b84702e2","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/91077551b84702e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383162011,"stop":1665383162737,"duration":726}}]},"tags":[]},"source":"8c6fb3800b9c2bf.json","parameterValues":["'true'","'FEED'"]}