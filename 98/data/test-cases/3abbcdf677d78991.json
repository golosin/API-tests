{"uid":"3abbcdf677d78991","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"e6e727eb93bcc590a8779268ef835775","time":{"start":1667108554177,"stop":1667108555069,"duration":892},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Image\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az299-1"},{"name":"thread","value":"2611-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'FEED'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":53,"skipped":0,"passed":0,"unknown":0,"total":53},"items":[{"uid":"c7ae6ca4fd1dd72","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/c7ae6ca4fd1dd72","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022062025,"stop":1667022062931,"duration":906}},{"uid":"2b0585964a5dd46b","reportUrl":"https://golosin.github.io/API-tests/96//#testresult/2b0585964a5dd46b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666935988976,"stop":1666935989884,"duration":908}},{"uid":"c6aa7616427a8dfb","reportUrl":"https://golosin.github.io/API-tests/95//#testresult/c6aa7616427a8dfb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666849486586,"stop":1666849487276,"duration":690}},{"uid":"3f7f86d1b495366d","reportUrl":"https://golosin.github.io/API-tests/94//#testresult/3f7f86d1b495366d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666763264918,"stop":1666763265622,"duration":704}},{"uid":"1a47ad0548d6b3ad","reportUrl":"https://golosin.github.io/API-tests/93//#testresult/1a47ad0548d6b3ad","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666679843038,"stop":1666679843741,"duration":703}},{"uid":"ce53745328f938f6","reportUrl":"https://golosin.github.io/API-tests/92//#testresult/ce53745328f938f6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666593700623,"stop":1666593701322,"duration":699}},{"uid":"921dfb68eea4848b","reportUrl":"https://golosin.github.io/API-tests/91//#testresult/921dfb68eea4848b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666504787122,"stop":1666504787883,"duration":761}},{"uid":"733fc36744973e3e","reportUrl":"https://golosin.github.io/API-tests/90//#testresult/733fc36744973e3e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666418274559,"stop":1666418275432,"duration":873}},{"uid":"812e37521d8fc659","reportUrl":"https://golosin.github.io/API-tests/89//#testresult/812e37521d8fc659","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666332226415,"stop":1666332227112,"duration":697}},{"uid":"dc92e53d3da455f5","reportUrl":"https://golosin.github.io/API-tests/88//#testresult/dc92e53d3da455f5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666245444753,"stop":1666245445445,"duration":692}},{"uid":"be1c4b845c983f9b","reportUrl":"https://golosin.github.io/API-tests/87//#testresult/be1c4b845c983f9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666161755167,"stop":1666161755844,"duration":677}},{"uid":"11342feb25eeffbb","reportUrl":"https://golosin.github.io/API-tests/86//#testresult/11342feb25eeffbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1666075147819,"stop":1666075148499,"duration":680}},{"uid":"747343e533288b8f","reportUrl":"https://golosin.github.io/API-tests/85//#testresult/747343e533288b8f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665988654016,"stop":1665988655119,"duration":1103}},{"uid":"3744b00ae7f790f3","reportUrl":"https://golosin.github.io/API-tests/84//#testresult/3744b00ae7f790f3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665899925759,"stop":1665899926536,"duration":777}},{"uid":"c4a96409ca85d543","reportUrl":"https://golosin.github.io/API-tests/83//#testresult/c4a96409ca85d543","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665813734016,"stop":1665813734887,"duration":871}},{"uid":"cdabb41d91f75132","reportUrl":"https://golosin.github.io/API-tests/82//#testresult/cdabb41d91f75132","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665729127357,"stop":1665729128186,"duration":829}},{"uid":"c8c76be4bdce3d04","reportUrl":"https://golosin.github.io/API-tests/81//#testresult/c8c76be4bdce3d04","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665641737761,"stop":1665641738446,"duration":685}},{"uid":"a7cc3fe3a004ecbb","reportUrl":"https://golosin.github.io/API-tests/80//#testresult/a7cc3fe3a004ecbb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665554502417,"stop":1665554503521,"duration":1104}},{"uid":"cced87b4ead65263","reportUrl":"https://golosin.github.io/API-tests/79//#testresult/cced87b4ead65263","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665469415173,"stop":1665469415861,"duration":688}},{"uid":"994df7a66a0095e7","reportUrl":"https://golosin.github.io/API-tests/78//#testresult/994df7a66a0095e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1665383162744,"stop":1665383163451,"duration":707}}]},"tags":[]},"source":"3abbcdf677d78991.json","parameterValues":["'false'","'FEED'"]}