{"uid":"2380b8dd64c12a49","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"c00ec18519f8e1d19ac9a041cf2c62e8","time":{"start":1665035902075,"stop":1665035902800,"duration":725},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'false'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.0"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az741-239"},{"name":"thread","value":"2472-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'false'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":29,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"51fea71383cf8d03","reportUrl":"https://golosin.github.io/API-tests/73//#testresult/51fea71383cf8d03","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664949875009,"stop":1664949875696,"duration":687}},{"uid":"9e18f989490e263c","reportUrl":"https://golosin.github.io/API-tests/72//#testresult/9e18f989490e263c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664863290328,"stop":1664863291009,"duration":681}},{"uid":"9e53639d29c7efdd","reportUrl":"https://golosin.github.io/API-tests/71//#testresult/9e53639d29c7efdd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664776760123,"stop":1664776761045,"duration":922}},{"uid":"f266f74994bdc795","reportUrl":"https://golosin.github.io/API-tests/70//#testresult/f266f74994bdc795","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664690388068,"stop":1664690389185,"duration":1117}},{"uid":"9ba7801d766b8fc3","reportUrl":"https://golosin.github.io/API-tests/68//#testresult/9ba7801d766b8fc3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664519856471,"stop":1664519857573,"duration":1102}},{"uid":"9a43607fe3f1ecef","reportUrl":"https://golosin.github.io/API-tests/67//#testresult/9a43607fe3f1ecef","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664433537433,"stop":1664433538532,"duration":1099}},{"uid":"9dd59e837a0d2820","reportUrl":"https://golosin.github.io/API-tests/66//#testresult/9dd59e837a0d2820","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664346849108,"stop":1664346849965,"duration":857}},{"uid":"b42a7296cc7f1bb1","reportUrl":"https://golosin.github.io/API-tests/65//#testresult/b42a7296cc7f1bb1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664260025820,"stop":1664260026712,"duration":892}},{"uid":"d5ae3a365dc619b8","reportUrl":"https://golosin.github.io/API-tests/64//#testresult/d5ae3a365dc619b8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664173994676,"stop":1664173995385,"duration":709}},{"uid":"8089a4d54a713216","reportUrl":"https://golosin.github.io/API-tests/63//#testresult/8089a4d54a713216","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1664085269040,"stop":1664085269921,"duration":881}},{"uid":"5daa2545cd1dcb39","reportUrl":"https://golosin.github.io/API-tests/62//#testresult/5daa2545cd1dcb39","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663999153125,"stop":1663999154240,"duration":1115}},{"uid":"7ca9a5e249cf38eb","reportUrl":"https://golosin.github.io/API-tests/61//#testresult/7ca9a5e249cf38eb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663914346077,"stop":1663914346779,"duration":702}},{"uid":"73862c4fdc4dba53","reportUrl":"https://golosin.github.io/API-tests/60//#testresult/73862c4fdc4dba53","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663828212723,"stop":1663828213619,"duration":896}},{"uid":"b4e8f30d0408e046","reportUrl":"https://golosin.github.io/API-tests/59//#testresult/b4e8f30d0408e046","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663742171455,"stop":1663742172616,"duration":1161}},{"uid":"ffadd1f0a0dd0cd3","reportUrl":"https://golosin.github.io/API-tests/58//#testresult/ffadd1f0a0dd0cd3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663655462081,"stop":1663655462952,"duration":871}},{"uid":"6c9f951a22e31492","reportUrl":"https://golosin.github.io/API-tests/57//#testresult/6c9f951a22e31492","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663569583269,"stop":1663569583948,"duration":679}},{"uid":"798595ebbdd383d","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/798595ebbdd383d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480482059,"stop":1663480483173,"duration":1114}},{"uid":"56ce094aa40f4c9b","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/56ce094aa40f4c9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393956715,"stop":1663393957577,"duration":862}},{"uid":"d9a99024edfc842a","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/d9a99024edfc842a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309760754,"stop":1663309761452,"duration":698}},{"uid":"2fa9a66e85c742c4","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/2fa9a66e85c742c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222536952,"stop":1663222537647,"duration":695}}]},"tags":[]},"source":"2380b8dd64c12a49.json","parameterValues":["'false'","'WILDBERRIES'"]}