{"uid":"4b7747dde9c2c198","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_rule_policy","historyId":"3d03f0c0dc1f48589c185b673014e41c","time":{"start":1663480491063,"stop":1663480492189,"duration":1126},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:102: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"epic","value":"Тест стенд v.1.0.9"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az83-521"},{"name":"thread","value":"2430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"401e54f16b8d9efe","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/401e54f16b8d9efe","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393963799,"stop":1663393964679,"duration":880}},{"uid":"f6bc625348a17678","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/f6bc625348a17678","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309766322,"stop":1663309767005,"duration":683}},{"uid":"4900d247f78a4c93","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/4900d247f78a4c93","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222542628,"stop":1663222543332,"duration":704}},{"uid":"512f65055d9025af","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/512f65055d9025af","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137103829,"stop":1663137104706,"duration":877}},{"uid":"ef36c0210ae9401a","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/ef36c0210ae9401a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050988475,"stop":1663050989183,"duration":708}},{"uid":"43aa6186ae4964cc","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/43aa6186ae4964cc","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964788849,"stop":1662964789557,"duration":708}},{"uid":"e81e644ae0065748","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/e81e644ae0065748","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875611398,"stop":1662875612071,"duration":673}},{"uid":"2e48c3618bff89aa","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/2e48c3618bff89aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845429189,"stop":1662845430062,"duration":873}},{"uid":"5f46e599c73d5f37","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/5f46e599c73d5f37","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840113128,"stop":1662840113841,"duration":713}},{"uid":"4dcc958815026ec6","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/4dcc958815026ec6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840081190,"stop":1662840082068,"duration":878}},{"uid":"3eaf520f2fc4b86f","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/3eaf520f2fc4b86f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838773443,"stop":1662838774148,"duration":705}}]},"tags":[]},"source":"4b7747dde9c2c198.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}