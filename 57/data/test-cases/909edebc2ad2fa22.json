{"uid":"909edebc2ad2fa22","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1663569591540,"stop":1663569592222,"duration":682},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.0.9"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az180-18"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"fbefd7c080c61f2","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/fbefd7c080c61f2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480495619,"stop":1663480496770,"duration":1151}},{"uid":"a02900bf441bb50a","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/a02900bf441bb50a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393967332,"stop":1663393968223,"duration":891}},{"uid":"f9200820946f55ff","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/f9200820946f55ff","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309769147,"stop":1663309769828,"duration":681}},{"uid":"8667e1eaa1ffd75f","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/8667e1eaa1ffd75f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222545680,"stop":1663222546383,"duration":703}},{"uid":"398e0f336fca0609","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/398e0f336fca0609","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137107415,"stop":1663137108298,"duration":883}},{"uid":"a27ff79e652f6964","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/a27ff79e652f6964","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050991336,"stop":1663050992048,"duration":712}},{"uid":"99a5d6666fa5d1f","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/99a5d6666fa5d1f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964791701,"stop":1662964792401,"duration":700}},{"uid":"aef6bf8aa850cc8d","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/aef6bf8aa850cc8d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875614212,"stop":1662875614906,"duration":694}},{"uid":"f307bd57075ffe4b","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/f307bd57075ffe4b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845432746,"stop":1662845433648,"duration":902}},{"uid":"2208db4c73da47c1","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/2208db4c73da47c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840116006,"stop":1662840116707,"duration":701}},{"uid":"6ce1193b42100005","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/6ce1193b42100005","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840084809,"stop":1662840085685,"duration":876}},{"uid":"b4471397679f6f08","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/b4471397679f6f08","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838776312,"stop":1662838777001,"duration":689}}]},"tags":[]},"source":"909edebc2ad2fa22.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}