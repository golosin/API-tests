{"uid":"d5f65314e575ad64","name":"Stock","fullName":"test_function.test_filters.test_2_filters_stock#test_get_filters_stock_feed_pm","historyId":"f9ead6112a5139ded03988774bdd2dd2","time":{"start":1663569572959,"stop":1663569573644,"duration":685},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'FEED', stock_min = 2, stock_max = 2\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Stock')\n    @allure.title('Stock')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"stock_min, stock_max\", [(2, 2), (None, 2), (2, None)])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_stock_feed_pm(representation, stock_min, stock_max):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"stockMin\": stock_min,\n                                                                    \"stockMax\": stock_max\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_2_filters_stock.py:36: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.0.9"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Stock"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_2_filters_stock"},{"name":"host","value":"fv-az180-18"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_2_filters_stock"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'FEED'"},{"name":"stock_max","value":"2"},{"name":"stock_min","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"22235104bcf796d6","reportUrl":"https://golosin.github.io/API-tests/56//#testresult/22235104bcf796d6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663480465292,"stop":1663480466401,"duration":1109}},{"uid":"762ee6333b5309bb","reportUrl":"https://golosin.github.io/API-tests/55//#testresult/762ee6333b5309bb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663393943299,"stop":1663393944190,"duration":891}},{"uid":"e7b63c2f4c08ed74","reportUrl":"https://golosin.github.io/API-tests/54//#testresult/e7b63c2f4c08ed74","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663309750224,"stop":1663309750920,"duration":696}},{"uid":"bf2a5d774c7914e3","reportUrl":"https://golosin.github.io/API-tests/53//#testresult/bf2a5d774c7914e3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663222526077,"stop":1663222526814,"duration":737}},{"uid":"55dc3f8d030e547b","reportUrl":"https://golosin.github.io/API-tests/52//#testresult/55dc3f8d030e547b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663137082948,"stop":1663137083828,"duration":880}},{"uid":"41629d44f3adf004","reportUrl":"https://golosin.github.io/API-tests/51//#testresult/41629d44f3adf004","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1663050971844,"stop":1663050972553,"duration":709}},{"uid":"52fcf0e00fae558e","reportUrl":"https://golosin.github.io/API-tests/50//#testresult/52fcf0e00fae558e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662964771964,"stop":1662964772666,"duration":702}},{"uid":"84bf263aefdfcc8d","reportUrl":"https://golosin.github.io/API-tests/49//#testresult/84bf263aefdfcc8d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662875595011,"stop":1662875595694,"duration":683}},{"uid":"bae45f8ede2f44dd","reportUrl":"https://golosin.github.io/API-tests/48//#testresult/bae45f8ede2f44dd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662845408273,"stop":1662845409155,"duration":882}},{"uid":"b7e87c0104b54617","reportUrl":"https://golosin.github.io/API-tests/47//#testresult/b7e87c0104b54617","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840096376,"stop":1662840097088,"duration":712}},{"uid":"bddd03f0d7fef418","reportUrl":"https://golosin.github.io/API-tests/46//#testresult/bddd03f0d7fef418","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662840060134,"stop":1662840061024,"duration":890}},{"uid":"f5cc2b60ad900a9b","reportUrl":"https://golosin.github.io/API-tests/45//#testresult/f5cc2b60ad900a9b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1662838756882,"stop":1662838757578,"duration":696}}]},"tags":[]},"source":"d5f65314e575ad64.json","parameterValues":["'FEED'","2","2"]}