{"uid":"4461905151646cda","name":"Images","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_feed_pm","historyId":"a49218a0d666c36e19ce383744afe6ad","time":{"start":1669699970645,"stop":1669699971749,"duration":1104},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES', images = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Images')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_image_feed_pm(representation, images):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data']['products']['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:33: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az318-892"},{"name":"thread","value":"2353-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":83,"skipped":0,"passed":0,"unknown":0,"total":83},"items":[{"uid":"146c95f959528f00","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/146c95f959528f00","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613560976,"stop":1669613561679,"duration":703}},{"uid":"899e7e6105018317","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/899e7e6105018317","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527109044,"stop":1669527109727,"duration":683}},{"uid":"ce220da96b6065c4","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/ce220da96b6065c4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440702112,"stop":1669440702818,"duration":706}},{"uid":"e0ac1825dc0e23a","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/e0ac1825dc0e23a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354346542,"stop":1669354347244,"duration":702}},{"uid":"39fca0b6af410b19","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/39fca0b6af410b19","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267948068,"stop":1669267948776,"duration":708}},{"uid":"96288e21f59a3823","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/96288e21f59a3823","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181585966,"stop":1669181587280,"duration":1314}},{"uid":"c2a9e236f443c200","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/c2a9e236f443c200","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095311074,"stop":1669095311782,"duration":708}},{"uid":"5cc2906ae52ff599","reportUrl":"https://golosin.github.io/API-tests/120//#testresult/5cc2906ae52ff599","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669008915883,"stop":1669008916816,"duration":933}},{"uid":"1e8be9c721fd28ee","reportUrl":"https://golosin.github.io/API-tests/119//#testresult/1e8be9c721fd28ee","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668922473266,"stop":1668922474386,"duration":1120}},{"uid":"fca1537ca540f597","reportUrl":"https://golosin.github.io/API-tests/118//#testresult/fca1537ca540f597","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668836047033,"stop":1668836048186,"duration":1153}},{"uid":"e2f21afd80d47d40","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/e2f21afd80d47d40","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749690841,"stop":1668749691715,"duration":874}},{"uid":"85ee720f86440a1b","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/85ee720f86440a1b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663320291,"stop":1668663321203,"duration":912}},{"uid":"c963c1ff75a569d1","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/c963c1ff75a569d1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576871553,"stop":1668576872411,"duration":858}},{"uid":"2d93617c9be67c63","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/2d93617c9be67c63","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490456669,"stop":1668490457576,"duration":907}},{"uid":"5398baa8e7fc7043","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/5398baa8e7fc7043","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404584302,"stop":1668404585034,"duration":732}},{"uid":"42c1030227f00081","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/42c1030227f00081","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317848300,"stop":1668317849442,"duration":1142}},{"uid":"e2028c6c26ee2113","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/e2028c6c26ee2113","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231396693,"stop":1668231397432,"duration":739}},{"uid":"de5fdbd44dac0795","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/de5fdbd44dac0795","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145235647,"stop":1668145236331,"duration":684}},{"uid":"5a78e527171faba6","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/5a78e527171faba6","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058937563,"stop":1668058938517,"duration":954}},{"uid":"d569c7a3134100e","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/d569c7a3134100e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972717970,"stop":1667972718768,"duration":798}}]},"tags":[]},"source":"4461905151646cda.json","parameterValues":["'true'","'WILDBERRIES'"]}