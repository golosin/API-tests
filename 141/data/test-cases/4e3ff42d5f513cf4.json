{"uid":"4e3ff42d5f513cf4","name":"Brand","fullName":"test_function.test_filters.test_4_filters_brand#test_get_filters_brand_feed_pm","historyId":"721fed86dac7424827c27c8f3be62f82","time":{"start":1670823096436,"stop":1670823097315,"duration":879},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"representation = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"representation\", [\"FEED\", \"WILDBERRIES\"])\n    def test_get_filters_brand_feed_pm(representation):\n    \n        x = open(os.path.join(r\"query\", \"query products.txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': \"products\",\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"representation\": representation\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n        if representation == 'FEED':\n            token_brand = response_body['data']['products']['pageInfo']['filters'][15]['widget']['attrs'][0]['value']\n        elif representation == 'WILDBERRIES':\n>           token_brand = response_body['data']['products']['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE           KeyError: 'data'\n\ntest_function/test_filters/test_4_filters_brand.py:31: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Brand\""},{"name":"epic","value":"Тест стенд v.1.1.2"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_4_filters_brand"},{"name":"host","value":"fv-az403-410"},{"name":"thread","value":"2531-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_4_filters_brand"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"representation","value":"'WILDBERRIES'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":96,"skipped":0,"passed":0,"unknown":0,"total":96},"items":[{"uid":"d30ad997b66ca5aa","reportUrl":"https://golosin.github.io/API-tests/140//#testresult/d30ad997b66ca5aa","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670736700558,"stop":1670736701369,"duration":811}},{"uid":"6de4a301cc47d025","reportUrl":"https://golosin.github.io/API-tests/139//#testresult/6de4a301cc47d025","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670650328002,"stop":1670650329237,"duration":1235}},{"uid":"a5827b511f22ec1c","reportUrl":"https://golosin.github.io/API-tests/138//#testresult/a5827b511f22ec1c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670563906659,"stop":1670563907705,"duration":1046}},{"uid":"e522cc7831a094e2","reportUrl":"https://golosin.github.io/API-tests/137//#testresult/e522cc7831a094e2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670477499395,"stop":1670477500287,"duration":892}},{"uid":"6532d380d1f9443a","reportUrl":"https://golosin.github.io/API-tests/136//#testresult/6532d380d1f9443a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670391101781,"stop":1670391102668,"duration":887}},{"uid":"afaa445cf7f76ef8","reportUrl":"https://golosin.github.io/API-tests/135//#testresult/afaa445cf7f76ef8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670304738929,"stop":1670304739842,"duration":913}},{"uid":"f7c12d377641f88a","reportUrl":"https://golosin.github.io/API-tests/134//#testresult/f7c12d377641f88a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670218324255,"stop":1670218325124,"duration":869}},{"uid":"f463115f0a7a0203","reportUrl":"https://golosin.github.io/API-tests/133//#testresult/f463115f0a7a0203","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670131909203,"stop":1670131910232,"duration":1029}},{"uid":"aa80f2c4751b7ff8","reportUrl":"https://golosin.github.io/API-tests/132//#testresult/aa80f2c4751b7ff8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1670045506149,"stop":1670045507004,"duration":855}},{"uid":"35e8e8a4cf9d96d8","reportUrl":"https://golosin.github.io/API-tests/131//#testresult/35e8e8a4cf9d96d8","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669959129855,"stop":1669959130867,"duration":1012}},{"uid":"eac6765a42fd6c95","reportUrl":"https://golosin.github.io/API-tests/130//#testresult/eac6765a42fd6c95","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669872853996,"stop":1669872855124,"duration":1128}},{"uid":"8023a02bcc155c6d","reportUrl":"https://golosin.github.io/API-tests/129//#testresult/8023a02bcc155c6d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669786409912,"stop":1669786411022,"duration":1110}},{"uid":"e6a2a835879e184e","reportUrl":"https://golosin.github.io/API-tests/128//#testresult/e6a2a835879e184e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669699978388,"stop":1669699979499,"duration":1111}},{"uid":"67bf47a8ec46746","reportUrl":"https://golosin.github.io/API-tests/127//#testresult/67bf47a8ec46746","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669613565960,"stop":1669613566649,"duration":689}},{"uid":"700387788004301d","reportUrl":"https://golosin.github.io/API-tests/126//#testresult/700387788004301d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669527113913,"stop":1669527114648,"duration":735}},{"uid":"23ffbb95ad56aaa4","reportUrl":"https://golosin.github.io/API-tests/125//#testresult/23ffbb95ad56aaa4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669440707307,"stop":1669440708042,"duration":735}},{"uid":"8a40456ff8bbd28a","reportUrl":"https://golosin.github.io/API-tests/124//#testresult/8a40456ff8bbd28a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669354351457,"stop":1669354352188,"duration":731}},{"uid":"85c69a812eb26113","reportUrl":"https://golosin.github.io/API-tests/123//#testresult/85c69a812eb26113","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669267953205,"stop":1669267953886,"duration":681}},{"uid":"ef9f4a92e3c17835","reportUrl":"https://golosin.github.io/API-tests/122//#testresult/ef9f4a92e3c17835","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669181595035,"stop":1669181596121,"duration":1086}},{"uid":"b38595a4ac09d597","reportUrl":"https://golosin.github.io/API-tests/121//#testresult/b38595a4ac09d597","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1669095318057,"stop":1669095319854,"duration":1797}}]},"tags":[]},"source":"4e3ff42d5f513cf4.json","parameterValues":["'WILDBERRIES'"]}