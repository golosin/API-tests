{"uid":"835dd651c754e36e","name":"Brand","fullName":"test_function.test_filters.test_5_filters_category#test_get_filters_brand_rule_policy","historyId":"d29b8e760ad28980b960b32a38d96513","time":{"start":1672810333953,"stop":1672810334963,"duration":1010},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'businessPolicyProducts', marketplace = 'WILDBERRIES'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Brand\"')\n    @allure.title('Brand')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_brand_rule_policy(rule_policy, marketplace):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n>       token_brand = response_body['data'][rule_policy]['pageInfo']['filters'][18]['widget']['attrs'][0]['value']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_5_filters_category.py:123: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Фильтр по \"Brand\""},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"epic","value":"Тест стенд v.1.1.4"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_5_filters_category"},{"name":"host","value":"fv-az244-152"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_5_filters_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'businessPolicyProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":119,"skipped":0,"passed":0,"unknown":0,"total":119},"items":[{"uid":"2252c152a70ff66f","reportUrl":"https://golosin.github.io/API-tests/163//#testresult/2252c152a70ff66f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672723912577,"stop":1672723913425,"duration":848}},{"uid":"b138a5fd2a611c3d","reportUrl":"https://golosin.github.io/API-tests/162//#testresult/b138a5fd2a611c3d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672637509466,"stop":1672637510305,"duration":839}},{"uid":"8bc6072e7f99ad42","reportUrl":"https://golosin.github.io/API-tests/161//#testresult/8bc6072e7f99ad42","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672551103082,"stop":1672551103868,"duration":786}},{"uid":"ad428128bc088933","reportUrl":"https://golosin.github.io/API-tests/160//#testresult/ad428128bc088933","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672464708268,"stop":1672464709114,"duration":846}},{"uid":"5eeac5302c26b5c1","reportUrl":"https://golosin.github.io/API-tests/159//#testresult/5eeac5302c26b5c1","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672378330655,"stop":1672378331701,"duration":1046}},{"uid":"b211eb1a310b9e3d","reportUrl":"https://golosin.github.io/API-tests/158//#testresult/b211eb1a310b9e3d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672291918365,"stop":1672291919358,"duration":993}},{"uid":"1421d057f1c7ab84","reportUrl":"https://golosin.github.io/API-tests/157//#testresult/1421d057f1c7ab84","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672205508446,"stop":1672205509283,"duration":837}},{"uid":"333751af0b2de16c","reportUrl":"https://golosin.github.io/API-tests/156//#testresult/333751af0b2de16c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672119129931,"stop":1672119131177,"duration":1246}},{"uid":"36746a434b49aa0f","reportUrl":"https://golosin.github.io/API-tests/155//#testresult/36746a434b49aa0f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1672032731832,"stop":1672032732935,"duration":1103}},{"uid":"18b983d5933a3761","reportUrl":"https://golosin.github.io/API-tests/154//#testresult/18b983d5933a3761","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671946322522,"stop":1671946323336,"duration":814}},{"uid":"546fbe39aed52ac5","reportUrl":"https://golosin.github.io/API-tests/153//#testresult/546fbe39aed52ac5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671859909035,"stop":1671859909882,"duration":847}},{"uid":"b4c9443090175a3b","reportUrl":"https://golosin.github.io/API-tests/152//#testresult/b4c9443090175a3b","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671773530286,"stop":1671773531406,"duration":1120}},{"uid":"ffe999f520d59d2f","reportUrl":"https://golosin.github.io/API-tests/151//#testresult/ffe999f520d59d2f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671687113264,"stop":1671687114083,"duration":819}},{"uid":"9824239a30a55826","reportUrl":"https://golosin.github.io/API-tests/150//#testresult/9824239a30a55826","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671600708992,"stop":1671600709832,"duration":840}},{"uid":"c883e1b3c7be52b7","reportUrl":"https://golosin.github.io/API-tests/149//#testresult/c883e1b3c7be52b7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671514320099,"stop":1671514320945,"duration":846}},{"uid":"c3d8314cb992e46a","reportUrl":"https://golosin.github.io/API-tests/148//#testresult/c3d8314cb992e46a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671427947560,"stop":1671427948824,"duration":1264}},{"uid":"d500d376408f6637","reportUrl":"https://golosin.github.io/API-tests/147//#testresult/d500d376408f6637","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671341540124,"stop":1671341541392,"duration":1268}},{"uid":"eeb72f02457c896d","reportUrl":"https://golosin.github.io/API-tests/146//#testresult/eeb72f02457c896d","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671255126118,"stop":1671255127122,"duration":1004}},{"uid":"4d97ea89597f9f36","reportUrl":"https://golosin.github.io/API-tests/145//#testresult/4d97ea89597f9f36","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671168711652,"stop":1671168712521,"duration":869}},{"uid":"d422135cd632047","reportUrl":"https://golosin.github.io/API-tests/144//#testresult/d422135cd632047","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1671082338540,"stop":1671082339542,"duration":1002}}]},"tags":[]},"source":"835dd651c754e36e.json","parameterValues":["'WILDBERRIES'","'businessPolicyProducts'"]}