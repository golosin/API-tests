{"uid":"ad0f8d0d4d73205b","name":"Image","fullName":"test_function.test_filters.test_3_filters_image#test_get_filters_image_rule_policy","historyId":"3016b1aaaa2547594f9683d528f8f96b","time":{"start":1668836049303,"stop":1668836050406,"duration":1103},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nimages = 'true'\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Image\"')\n    @allure.title('Image')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"images\", [\"true\", \"false\"])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_image_rule_policy(rule_policy, marketplace, images):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"images\": images\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_3_filters_image.py:71: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"severity","value":"critical"},{"name":"feature","value":"Фильтры"},{"name":"story","value":"Фильтр по \"Image\""},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_3_filters_image"},{"name":"host","value":"fv-az377-287"},{"name":"thread","value":"2391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_3_filters_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"images","value":"'true'"},{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":73,"skipped":0,"passed":0,"unknown":0,"total":73},"items":[{"uid":"e26094b005422edb","reportUrl":"https://golosin.github.io/API-tests/117//#testresult/e26094b005422edb","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668749692603,"stop":1668749693493,"duration":890}},{"uid":"38ff411fe4040126","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/38ff411fe4040126","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663322145,"stop":1668663323449,"duration":1304}},{"uid":"5e755f245c78814","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/5e755f245c78814","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576873290,"stop":1668576874172,"duration":882}},{"uid":"e86f6acaf6b76103","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/e86f6acaf6b76103","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490458525,"stop":1668490459408,"duration":883}},{"uid":"e7da70de55b711b9","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/e7da70de55b711b9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404585744,"stop":1668404586480,"duration":736}},{"uid":"bb5691354c926203","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/bb5691354c926203","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317850590,"stop":1668317851706,"duration":1116}},{"uid":"80251a4cecd7c90c","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/80251a4cecd7c90c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231398141,"stop":1668231398820,"duration":679}},{"uid":"486dc25a62a81af0","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/486dc25a62a81af0","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145237060,"stop":1668145237829,"duration":769}},{"uid":"937e071c3ab77540","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/937e071c3ab77540","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058939403,"stop":1668058940285,"duration":882}},{"uid":"d95b355cff6abf35","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/d95b355cff6abf35","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972719610,"stop":1667972720322,"duration":712}},{"uid":"1010cd70a54c08e4","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/1010cd70a54c08e4","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886144022,"stop":1667886145129,"duration":1107}},{"uid":"4bcbe7082d828b91","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/4bcbe7082d828b91","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799848702,"stop":1667799849564,"duration":862}},{"uid":"9a5e0a529ac9c762","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/9a5e0a529ac9c762","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712875128,"stop":1667712875834,"duration":706}},{"uid":"2eaa5fa758b447da","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/2eaa5fa758b447da","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626478225,"stop":1667626478961,"duration":736}},{"uid":"cc7924547dd4077","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/cc7924547dd4077","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540453879,"stop":1667540454741,"duration":862}},{"uid":"1d8da972089a5973","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/1d8da972089a5973","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667454013058,"stop":1667454013949,"duration":891}},{"uid":"124c55f9239e0b3","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/124c55f9239e0b3","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368618372,"stop":1667368619090,"duration":718}},{"uid":"abb063396f9a368a","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/abb063396f9a368a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282436356,"stop":1667282437063,"duration":707}},{"uid":"f6a31ecd235d3f85","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/f6a31ecd235d3f85","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195434958,"stop":1667195435845,"duration":887}},{"uid":"d2731df3699dc4e7","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/d2731df3699dc4e7","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108556865,"stop":1667108557727,"duration":862}}]},"tags":[]},"source":"ad0f8d0d4d73205b.json","parameterValues":["'true'","'WILDBERRIES'","'priceStockRuleProducts'"]}