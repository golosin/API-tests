{"uid":"9c908bf78e31cd56","name":"Sale price","fullName":"test_function.test_filters.test_1_filters_price#test_get_filters_price_rule_policy","historyId":"9f6fa07e70a4a150fa6581711b8b6490","time":{"start":1668749673823,"stop":1668749674842,"duration":1019},"status":"broken","statusMessage":"KeyError: 'data'","statusTrace":"rule_policy = 'priceStockRuleProducts', marketplace = 'WILDBERRIES'\nsale_price_min = 100, sale_price_max = None\n\n    @allure.epic('Тест стенд v.'+get_app_version())\n    @allure.feature('Фильтры')\n    @allure.story('Фильтр по \"Sale price\"')\n    @allure.title('Sale price')\n    @allure.severity('critical')\n    @pytest.mark.parametrize(\"sale_price_min, sale_price_max\", [(100, 100), (None, 100), (100, None)])\n    @pytest.mark.parametrize(\"marketplace\", [\"WILDBERRIES\"])\n    @pytest.mark.parametrize(\"rule_policy\", [\"priceStockRuleProducts\", \"businessPolicyProducts\"])\n    def test_get_filters_price_rule_policy(rule_policy, marketplace, sale_price_min, sale_price_max):\n    \n        x = open(os.path.join(r\"query\", \"query \" + rule_policy + \".txt\"))\n        body = ''.join(x)\n    \n        headers = {\"Content-Type\": \"application/json; charset=utf-8\",\n                   \"authorization\": \"JWT \" + get_singIn()}\n        url = get_url()\n        response = requests.post(url, headers=headers, json={'operationName': rule_policy,\n                                                             'variables': {\n                                                                \"slice\": {\"offset\": 0, \"limit\": 25},\n                                                                    \"pipelineId\": get_id_pipeline(),\n                                                                    \"filters\": {\n                                                                    \"salePriceMin\": sale_price_min,\n                                                                    \"salePriceMax\": sale_price_max\n                                                                    },\n                                                                    \"marketplace\": marketplace\n                                                                },\n                                                             'query': body})\n        response_body = response.json()\n    \n>       items_product = response_body['data'][rule_policy]['items']\nE       KeyError: 'data'\n\ntest_function/test_filters/test_1_filters_price.py:76: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Фильтры"},{"name":"severity","value":"critical"},{"name":"story","value":"Фильтр по \"Sale price\""},{"name":"epic","value":"Тест стенд v.1.1.1"},{"name":"parentSuite","value":"test_function.test_filters"},{"name":"suite","value":"test_1_filters_price"},{"name":"host","value":"fv-az173-834"},{"name":"thread","value":"2409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_function.test_filters.test_1_filters_price"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"marketplace","value":"'WILDBERRIES'"},{"name":"rule_policy","value":"'priceStockRuleProducts'"},{"name":"sale_price_max","value":"None"},{"name":"sale_price_min","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":72,"skipped":0,"passed":0,"unknown":0,"total":72},"items":[{"uid":"9f2de345677a4049","reportUrl":"https://golosin.github.io/API-tests/116//#testresult/9f2de345677a4049","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668663299680,"stop":1668663300559,"duration":879}},{"uid":"40bf9a040b5db7b5","reportUrl":"https://golosin.github.io/API-tests/115//#testresult/40bf9a040b5db7b5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668576855401,"stop":1668576856365,"duration":964}},{"uid":"a7e6398b70e7dcda","reportUrl":"https://golosin.github.io/API-tests/114//#testresult/a7e6398b70e7dcda","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668490439926,"stop":1668490440806,"duration":880}},{"uid":"915467764280643f","reportUrl":"https://golosin.github.io/API-tests/113//#testresult/915467764280643f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668404571313,"stop":1668404572007,"duration":694}},{"uid":"8d8ef8515f7c092f","reportUrl":"https://golosin.github.io/API-tests/112//#testresult/8d8ef8515f7c092f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668317827872,"stop":1668317829008,"duration":1136}},{"uid":"fb15fda6d3e77695","reportUrl":"https://golosin.github.io/API-tests/111//#testresult/fb15fda6d3e77695","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668231383952,"stop":1668231384672,"duration":720}},{"uid":"569e18665e1f1d2c","reportUrl":"https://golosin.github.io/API-tests/110//#testresult/569e18665e1f1d2c","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668145222883,"stop":1668145223583,"duration":700}},{"uid":"3c7f7fc1db63a1e9","reportUrl":"https://golosin.github.io/API-tests/109//#testresult/3c7f7fc1db63a1e9","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1668058921279,"stop":1668058922188,"duration":909}},{"uid":"acaf6e6f6d2645c5","reportUrl":"https://golosin.github.io/API-tests/108//#testresult/acaf6e6f6d2645c5","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667972703890,"stop":1667972704607,"duration":717}},{"uid":"6cf3ad136b7437b2","reportUrl":"https://golosin.github.io/API-tests/107//#testresult/6cf3ad136b7437b2","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667886122009,"stop":1667886123085,"duration":1076}},{"uid":"dcd532ca9103b93e","reportUrl":"https://golosin.github.io/API-tests/106//#testresult/dcd532ca9103b93e","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667799831265,"stop":1667799832133,"duration":868}},{"uid":"df17fe7d6a985c8f","reportUrl":"https://golosin.github.io/API-tests/105//#testresult/df17fe7d6a985c8f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667712861021,"stop":1667712861704,"duration":683}},{"uid":"229b9158e3293c70","reportUrl":"https://golosin.github.io/API-tests/104//#testresult/229b9158e3293c70","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667626463550,"stop":1667626464267,"duration":717}},{"uid":"43cdb06ccfb4fe28","reportUrl":"https://golosin.github.io/API-tests/103//#testresult/43cdb06ccfb4fe28","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667540436097,"stop":1667540436998,"duration":901}},{"uid":"6b2c23bfc1c3980f","reportUrl":"https://golosin.github.io/API-tests/102//#testresult/6b2c23bfc1c3980f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667453995123,"stop":1667453996036,"duration":913}},{"uid":"e52d06b734c66e17","reportUrl":"https://golosin.github.io/API-tests/101//#testresult/e52d06b734c66e17","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667368603844,"stop":1667368604542,"duration":698}},{"uid":"95db17be7a180c8f","reportUrl":"https://golosin.github.io/API-tests/100//#testresult/95db17be7a180c8f","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667282421813,"stop":1667282422537,"duration":724}},{"uid":"eedfd946f7427f1a","reportUrl":"https://golosin.github.io/API-tests/99//#testresult/eedfd946f7427f1a","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667195416974,"stop":1667195417866,"duration":892}},{"uid":"7264ae4d08cf9145","reportUrl":"https://golosin.github.io/API-tests/98//#testresult/7264ae4d08cf9145","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667108538276,"stop":1667108539764,"duration":1488}},{"uid":"403e0c8fc42420bd","reportUrl":"https://golosin.github.io/API-tests/97//#testresult/403e0c8fc42420bd","status":"broken","statusDetails":"KeyError: 'data'","time":{"start":1667022046762,"stop":1667022047648,"duration":886}}]},"tags":[]},"source":"9c908bf78e31cd56.json","parameterValues":["'WILDBERRIES'","'priceStockRuleProducts'","None","100"]}